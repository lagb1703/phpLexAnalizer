
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AMPERSAND AND AND_EQUAL ARRAY ARROW AS ASTERISK AT ATTRIBUTE BACKTICK BAD_CARACTER BITWISE_NOT BITWISE_OR BITWISE_XOR BOOL BOOLEAN_AND BOOLEAN_OR BREAK CALLABLE CASE CATCH CLASS CLONE CLOSE_TAG COALESCE COALESCE_EQUAL COLON COMMENT CONCAT CONCAT_EQUAL CONST CONSTANT_ENCAPSED_STRING CONSTRUCT CONTINUE CURLY_OPEN DEC DECLARE DEFAULT DESTRUCT DIE DIVIDE DIV_EQUAL DNUMBER DO DOC_COMMENT DOLLAR DOLLAR_OPEN_CURLY_BRACES DOUBLEASTERISK DOUBLELESS DOUBLEPLUS DOUBLE_ARROW DOUBLE_COLON DOUBLE_POINT DQUOTATION_MARK DQ_CHAR_SEQUENCE ECHO ELLIPSIS ELSE ELSEIF EMPTY ENCODING ENDDECLARE ENDFOR ENDFOREACH ENDIF ENDSWITCH ENDWHILE EQUAL EQUALS EVAL EXIT EXPONENT_DNUMBER EXTENDS FINAL FINALLY FLOAT FN FOR FOREACH FUNCTION GLOBAL GOTO GREATER_THAN_OR_EQUAL IF IMPLEMENTS INC INCLUDE INCLUDE_ONCE INSTANCEOF INSTEADOF INT INTEGER_LITERAL INTERFACE ISSET IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL ITERABLE LEFT_CBRAC LEFT_PARENTHESIS LEFT_SQRBRAC LESS LESS_THAN LIST LNUMBER MINUS_EQUAL MODULO MOD_EQUAL MORE_THAN MUL_EQUAL NAME NAMESPACE NEGATION NEW NS_SEPARATOR NULLSAFE_OBJECT_OPERATOR OBJECT_OPERATOR OPEN_TAG OPEN_TAG_WITH_ECHO OR OR_EQUAL PARENT PLUS PLUS_EQUAL POW POW_EQUAL PRINT PRIVATE PROTECTED PUBLIC REQUIRE REQUIRE_ONCE RETURN RIGHT_CBRAC RIGHT_PARENTHESIS RIGHT_SQRBRAC SELF SEMICOLON SL SL_EQUAL SPACESHIP SR SR_EQUAL START_HEREDOC STATIC STRICT_TYPES STRING SWITCH TERNARY_OPERATION THROW TICKS TRAIT TRY UNSET USE VAR VARIABLE VOID WHILE WHITESPACE XOR XOR_EQUAL YIELD YIELD_FROM __CLASS__ __DIR__ __FILE__ __FUNCTION__ __HALT_COMPILER __LINE__ __METHOD__ __NAMESPACE__ __TRAIT__script : script_section\n            | WHITESPACEscript : script script_sectionscript_section : text_opt start_tag statement_list_opt end_tag_opt text_opttext_opt : STRING \n                    |end_tag_opt : CLOSE_TAG\n                    |statement_list_opt : statement_list\n                                | start_tag : OPEN_TAGstart_tag : OPEN_TAG_WITH_ECHOend_tag : CLOSE_TAGend_tag : namespace_name : NAMEnamespace_name : namespace_name NS_SEPARATOR NAMEfunction_static_declaration : STATIC static_variable_name_list SEMICOLONstatic_variable_name_list : static_variable_declarationstatic_variable_name_list : static_variable_name_list  static_variable_declarationstatic_variable_declaration : VARIABLE function_static_initializer_optfunction_static_initializer : EQUAL   constant_expressionfunction_static_initializer_opt : function_static_initializer\n                                         | function_static_initializer_opt : EQUAL constant_expressionglobal_declaration : GLOBAL variable_name_list SEMICOLONvariable_name_list : simple_variablevariable_name_list : variable_name_list  simple_variableprimary_expression : variable\n                           | class_constant_access_expression\n                           | constant_access_expression\n                           | literal\n                           | array_creation_expression\n                           | intrinsic\n                           | anonymous_function_creation_expression\n                           | object_creation_expression\n                           | postfix_increment_expression\n                           | postfix_decrement_expression\n                           | prefix_increment_expression\n                           | prefix_decrement_expression\n                           | byref_assignment_expression\n                           | shell_command_expression\n                           | LEFT_PARENTHESIS expression RIGHT_PARENTHESISsimple_variable : VARIABLE\n                       | DOLLAR simple_variable\n                       | DOLLAR LEFT_CBRAC expression RIGHT_CBRACdereferencable_expression : variable\n                                  | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS\n                                  | array_creation_expression\n                                  | string_literalcallable_expression : callable_variable\n                            | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS\n                            | array_creation_expression\n                            | string_literalcallable_variable : simple_variable\n                         | subscript_expression\n                         | member_call_expression\n                         | scoped_call_expression\n                         | function_call_expressionvariable : callable_variable\n                | scoped_property_access_expression\n                | member_access_expressionconstant_access_expression : qualified_nameliteral : integer_literal\n                | floating_literal\n                | string_literalinteger_literal : LNUMBERfloating_literal : DNUMBERstring_literal : STRINGintrinsic : empty_intrinsic\n                  | eval_intrinsic\n                  | exit_intrinsic\n                  | isset_intrinsicempty_intrinsic : EMPTY LEFT_PARENTHESIS expression RIGHT_PARENTHESISeval_intrinsic : EVAL LEFT_PARENTHESIS expression RIGHT_PARENTHESISexit_intrinsic : EXIT\n                      | EXIT LEFT_PARENTHESIS expression_opt RIGHT_PARENTHESIS\n                      | DIE\n                      | DIE LEFT_PARENTHESIS expression_opt RIGHT_PARENTHESISisset_intrinsic : ISSET LEFT_PARENTHESIS variable_list_opt RIGHT_PARENTHESISvariable_list_opt : variable_list variable_list : variablevariable_list : variable_list  variableanonymous_function_creation_expression : static_opt FUNCTION AMPERSAND_opt LEFT_PARENTHESIS parameter_declaration_list_opt RIGHT_PARENTHESIS anonymous_function_use_clause_opt return_type_opt compound_statementstatic_opt : STATIC\n                    |AMPERSAND_opt : AMPERSAND\n                    |parameter_declaration_list_opt : parameter_declaration_list\n                                        |anonymous_function_use_clause_opt : anonymous_function_use_clause\n                                        |return_type_opt : return_type\n                        |anonymous_function_use_clause : USE LEFT_PARENTHESIS use_variable_name_list RIGHT_PARENTHESISuse_variable_name_list : AMPERSAND_opt VARIABLEuse_variable_name_list : use_variable_name_list  AMPERSAND_opt VARIABLEobject_creation_expression : NEW class_type_designator LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS\n                                  | NEW class_type_designator LEFT_PARENTHESIS argument_expression_list COLON RIGHT_PARENTHESIS\n                                  | NEW class_type_designator\n                                  | NEW CLASS LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS class_base_clause_opt class_interface_clause_opt LEFT_CBRAC class_member_declarations_opt RIGHT_PARENTHESIS\n                                  | NEW CLASS class_base_clause_opt class_interface_clause_opt LEFT_CBRAC class_member_declarations_opt RIGHT_PARENTHESISargument_expression_list_opt : argument_expression_list\n                                    |class_base_clause_opt : class_base_clause\n                            |class_interface_clause_opt : class_interface_clause\n                            |class_member_declarations_opt : class_member_declarations\n                                    |class_type_designator : qualified_nameclass_type_designator : new_variablenew_variable : simple_variablenew_variable : new_variable LEFT_CBRAC expression_opt RIGHT_CBRAC\n                    | new_variable LEFT_CBRAC expression RIGHT_PARENTHESIS\n                    | new_variable ARROW member_name\n                    | qualified_name DOUBLE_COLON simple_variable\n                    | relative_scope DOUBLE_COLON simple_variable\n                    | new_variable DOUBLE_COLON simple_variableexpression_opt : expression\n                        |array_creation_expression : ARRAY LEFT_PARENTHESIS array_initializer_opt RIGHT_PARENTHESIS\n                                  | LEFT_CBRAC array_initializer_opt RIGHT_CBRACarray_initializer_opt : array_initializer\n                              | array_initializer : array_initializer_list\n                        | array_initializer_list COLONarray_initializer_list : array_element_initializer\n                              | array_element_initializer COLON array_element_initializerarray_element_initializer : AMPERSAND_opt element_valuearray_element_initializer : element_key ARROW  AMPERSAND_opt element_valueelement_key : expressionelement_value : expressionsubscript_expression : dereferencable_expression LEFT_CBRAC expression_opt RIGHT_CBRACsubscript_expression : dereferencable_expression LEFT_CBRAC expression RIGHT_PARENTHESISfunction_call_expression : qualified_name LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS\n                                | qualified_name LEFT_PARENTHESIS argument_expression_list  RIGHT_PARENTHESISfunction_call_expression : callable_expression LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS\n                                | callable_expression LEFT_PARENTHESIS argument_expression_list  RIGHT_PARENTHESISargument_expression_list : argument_expressionargument_expression_list : argument_expression_list  argument_expressionargument_expression : variadic_unpacking\n                           | expressionvariadic_unpacking : ELLIPSIS expressionmember_access_expression : dereferencable_expression ARROW member_namemember_name : NAMEmember_name : simple_variablemember_name : LEFT_CBRAC expression RIGHT_PARENTHESISmember_call_expression : dereferencable_expression ARROW member_name LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS\n                              | dereferencable_expression ARROW member_name LEFT_PARENTHESIS argument_expression_list  RIGHT_PARENTHESISpostfix_increment_expression : variable DOUBLEPLUSpostfix_decrement_expression : variable DOUBLELESSprefix_increment_expression : DOUBLEPLUS variableprefix_decrement_expression : DOUBLELESS variableshell_command_expression : BACKTICK dq_char_sequence_opt BACKTICKdq_char_sequence_opt : DQ_CHAR_SEQUENCE\n                            |scoped_property_access_expression : scope_resolution_qualifier DOUBLE_COLON simple_variablescoped_call_expression : scope_resolution_qualifier DOUBLE_COLON member_name LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS\n                               | scope_resolution_qualifier DOUBLE_COLON member_name LEFT_PARENTHESIS argument_expression_list  RIGHT_PARENTHESISclass_constant_access_expression : scope_resolution_qualifier DOUBLE_COLON NAMEscope_resolution_qualifier : relative_scopescope_resolution_qualifier : qualified_namescope_resolution_qualifier : dereferencable_expressionrelative_scope : SELFrelative_scope : PARENTrelative_scope : STATICclone_expression : primary_expressionclone_expression : CLONE primary_expressionexponentiation_expression : clone_expression\n                                  | clone_expression DOUBLEASTERISK exponentiation_expressionunary_expression : exponentiation_expression\n                        | unary_op_expression\n                        | error_control_expression\n                        | cast_expressionunary_op_expression : unary_operator unary_expressionunary_operator : PLUSunary_operator : LESSunary_operator : BITWISE_NOTerror_control_expression : AT unary_expressioncast_expression : LEFT_PARENTHESIS RIGHT_PARENTHESIS unary_expressioninstanceof_expression : unary_expression\n                             | instanceof_subj INSTANCEOF class_type_designatorinstanceof_subj : instanceof_expressionlogical_not_expression : instanceof_expression\n                               | NEGATION instanceof_expressionmultiplicative_expression : logical_not_expression\n                                  | multiplicative_expression ASTERISK logical_not_expression\n                                  | multiplicative_expression DIVIDE logical_not_expression\n                                  | multiplicative_expression MODULO logical_not_expressionadditive_expression : multiplicative_expressionadditive_expression : additive_expression PLUS multiplicative_expressionadditive_expression : additive_expression LESS multiplicative_expressionadditive_expression : additive_expression CONCAT multiplicative_expressionshift_expression : additive_expressionshift_expression : shift_expression SL additive_expressionshift_expression : shift_expression SR additive_expressionrelational_expression : shift_expressionrelational_expression : relational_expression LESS_THAN shift_expressionrelational_expression : relational_expression IS_SMALLER_OR_EQUAL shift_expressionrelational_expression : relational_expression IS_GREATER_OR_EQUAL shift_expressionrelational_expression : relational_expression GREATER_THAN_OR_EQUAL shift_expressionrelational_expression : relational_expression SPACESHIP shift_expressionequality_expression : relational_expressionequality_expression : equality_expression EQUAL relational_expressionequality_expression : equality_expression IS_NOT_EQUAL relational_expressionequality_expression : equality_expression IS_IDENTICAL relational_expressionequality_expression : equality_expression IS_NOT_IDENTICAL relational_expressionbitwise_AND_expression : equality_expressionbitwise_AND_expression : bitwise_AND_expression AMPERSAND equality_expressionbitwise_exc_OR_expression : bitwise_AND_expressionbitwise_exc_OR_expression : bitwise_exc_OR_expression BITWISE_XOR bitwise_AND_expressionbitwise_inc_OR_expression : bitwise_exc_OR_expressionbitwise_inc_OR_expression : bitwise_inc_OR_expression BITWISE_OR bitwise_exc_OR_expressionlogical_AND_expression_1 : bitwise_inc_OR_expressionlogical_AND_expression_1 : logical_AND_expression_1 AMPERSAND AMPERSAND bitwise_inc_OR_expressionlogical_inc_OR_expression_1 : logical_AND_expression_1logical_inc_OR_expression_1 : logical_inc_OR_expression_1 BITWISE_OR BITWISE_OR logical_AND_expression_1coalesce_expression : logical_inc_OR_expression_1coalesce_expression : logical_inc_OR_expression_1 COALESCE coalesce_expressionconditional_expression : coalesce_expressionconditional_expression : conditional_expression TERNARY_OPERATION expression DOUBLE_POINT coalesce_expression\n                                | conditional_expression TERNARY_OPERATION DOUBLE_POINT coalesce_expressionassignment_expression : conditional_expressionassignment_expression : simple_assignment_expressionassignment_expression : compound_assignment_expressionsimple_assignment_expression : variable EQUAL assignment_expressionsimple_assignment_expression : list_intrinsic EQUAL assignment_expressionlist_intrinsic : LIST LEFT_PARENTHESIS list_expression_list RIGHT_PARENTHESISlist_expression_list : unkeyed_list_expression_listlist_expression_list : keyed_list_expression_list COLON\n                                | keyed_list_expression_listunkeyed_list_expression_list : list_or_variableunkeyed_list_expression_list : COLONunkeyed_list_expression_list : unkeyed_list_expression_list COLON list_or_variable COLON\n                                        | unkeyed_list_expression_list COLON list_or_variablekeyed_list_expression_list : expression DOUBLE_ARROW list_or_variablekeyed_list_expression_list : keyed_list_expression_list COLON expression DOUBLE_ARROW list_or_variablelist_or_variable : list_intrinsiclist_or_variable : AMPERSAND variable\n                            | variablebyref_assignment_expression : variable EQUAL AMPERSAND variablecompound_assignment_expression : variable compound_assignment_operator assignment_expressioncompound_assignment_operator : POW_EQUALcompound_assignment_operator : MUL_EQUALcompound_assignment_operator : DIV_EQUALcompound_assignment_operator : MOD_EQUALcompound_assignment_operator : PLUS_EQUALcompound_assignment_operator : MINUS_EQUALcompound_assignment_operator : CONCAT_EQUALcompound_assignment_operator : SL_EQUALcompound_assignment_operator : SR_EQUALcompound_assignment_operator : AND_EQUALcompound_assignment_operator : XOR_EQUALcompound_assignment_operator : OR_EQUALyield_from_expression : YIELD_FROM assignment_expressionyield_expression : yield_from_expressionyield_expression : YIELDyield_expression : YIELD yield_expressionyield_expression : YIELD yield_from_expression DOUBLE_ARROW yield_expressionprint_expression : yield_expressionprint_expression : PRINT print_expressionlogical_AND_expression_2 : print_expressionlogical_AND_expression_2 : logical_AND_expression_2 AND yield_expressionlogical_exc_OR_expression : logical_AND_expression_2logical_exc_OR_expression : logical_exc_OR_expression XOR logical_AND_expression_2logical_inc_OR_expression_2 : logical_exc_OR_expressionlogical_inc_OR_expression_2 : logical_inc_OR_expression_2 OR logical_exc_OR_expressionexpression : logical_inc_OR_expression_2expression : include_expressionexpression : include_once_expressionexpression : require_expressionexpression : require_once_expressioninclude_expression : INCLUDE expressioninclude_once_expression : INCLUDE_ONCE expressionrequire_expression : REQUIRE expressionrequire_once_expression : REQUIRE_ONCE expressionconstant_expression : expressionstatement : compound_statementstatement : named_label_statementstatement : expression_statementstatement : selection_statementstatement : iteration_statementstatement : jump_statementstatement : try_statementstatement : declare_statementstatement : echo_statementstatement : unset_statementstatement : const_declarationstatement : function_definitionstatement : class_declarationstatement : interface_declarationstatement : trait_declarationstatement : namespace_definitionstatement : namespace_use_declarationstatement : global_declarationstatement : function_static_declarationcompound_statement : LEFT_CBRAC statement_list RIGHT_CBRAC\n                            | LEFT_CBRAC RIGHT_CBRACstatement_list : statementstatement_list : statement_list statementnamed_label_statement : name DOUBLE_POINTexpression_statement : expression SEMICOLON\n                            | SEMICOLONselection_statement : if_statementselection_statement : switch_statementif_statement : IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement elseif_clauses_1 else_clause_1\n                        | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement elseif_clauses_1\n                        | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement else_clause_1\n                        | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statementif_statement : IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list elseif_clauses_2 else_clause_2 ENDIF SEMICOLON\n                        | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list elseif_clauses_2 ENDIF SEMICOLON\n                        | IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list else_clause_2 ENDIF SEMICOLONelseif_clauses_1 : elseif_clause_1elseif_clauses_1 : elseif_clauses_1 elseif_clause_1elseif_clause_1 : ELSEIF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statementelse_clause_1 : ELSE statementelseif_clauses_2 : elseif_clause_2elseif_clauses_2 : elseif_clauses_2 elseif_clause_2elseif_clause_2 : ELSEIF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_listelse_clause_2 : ELSE DOUBLE_POINT statement_listswitch_statement : SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CBRAC case_statements RIGHT_CBRAC\n                            | SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CBRAC RIGHT_CBRACswitch_statement : SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT case_statements ENDSWITCH SEMICOLON\n                            | SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT ENDSWITCH SEMICOLONcase_statements : case_statement case_statements\n                        | case_statementcase_statements : default_statement case_statements\n                        | default_statementcase_statement : CASE expression case_default_label_terminator statement_list\n                        | CASE expression case_default_label_terminatordefault_statement : DEFAULT case_default_label_terminator statement_list\n                        | DEFAULT case_default_label_terminatorcase_default_label_terminator : DOUBLE_POINTcase_default_label_terminator : SEMICOLONiteration_statement : while_statementiteration_statement : do_statementiteration_statement : for_statementiteration_statement : foreach_statementwhile_statement : WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statementwhile_statement : WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDWHILE SEMICOLONdo_statement : DO statement WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLONfor_statement : FOR LEFT_PARENTHESIS for_initializer SEMICOLON for_control SEMICOLON for_end_of_loop RIGHT_PARENTHESIS statement\n                        | FOR LEFT_PARENTHESIS for_initializer SEMICOLON for_control SEMICOLON RIGHT_PARENTHESIS statement\n                        | FOR LEFT_PARENTHESIS for_initializer SEMICOLON SEMICOLON for_end_of_loop RIGHT_PARENTHESIS statement\n                        | FOR LEFT_PARENTHESIS for_initializer SEMICOLON SEMICOLON RIGHT_PARENTHESIS statement\n                        | FOR LEFT_PARENTHESIS SEMICOLON for_control SEMICOLON for_end_of_loop RIGHT_PARENTHESIS statement\n                        | FOR LEFT_PARENTHESIS SEMICOLON for_control SEMICOLON RIGHT_PARENTHESIS statement\n                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON for_end_of_loop RIGHT_PARENTHESIS statement\n                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS statementfor_statement : FOR LEFT_PARENTHESIS for_initializer SEMICOLON for_control SEMICOLON for_end_of_loop RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON\n                        | FOR LEFT_PARENTHESIS for_initializer SEMICOLON for_control SEMICOLON RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON\n                        | FOR LEFT_PARENTHESIS for_initializer SEMICOLON SEMICOLON for_end_of_loop RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON\n                        | FOR LEFT_PARENTHESIS for_initializer SEMICOLON SEMICOLON RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON\n                        | FOR LEFT_PARENTHESIS SEMICOLON for_control SEMICOLON for_end_of_loop RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON\n                        | FOR LEFT_PARENTHESIS SEMICOLON for_control SEMICOLON RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON\n                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON for_end_of_loop RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON\n                        | FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLONfor_initializer : for_expression_groupfor_control : for_expression_groupfor_end_of_loop : for_expression_groupfor_expression_group : expressionfor_expression_group : for_expression_group COLON expressionforeach_statement : FOREACH LEFT_PARENTHESIS foreach_collection_name AS foreach_key foreach_value RIGHT_PARENTHESIS statement\n                            | FOREACH LEFT_PARENTHESIS foreach_collection_name AS foreach_value RIGHT_PARENTHESIS statementforeach_statement : FOREACH LEFT_PARENTHESIS foreach_collection_name AS foreach_key foreach_value RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOREACH SEMICOLON\n                            | FOREACH LEFT_PARENTHESIS foreach_collection_name AS foreach_value RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOREACH SEMICOLONforeach_collection_name : expressionforeach_key : expression DOUBLE_ARROWforeach_value : AMPERSAND_opt expressionforeach_value : AMPERSAND expressionforeach_value : list_intrinsicjump_statement : goto_statementjump_statement : continue_statementjump_statement : break_statementjump_statement : return_statementjump_statement : throw_statementgoto_statement : GOTO name SEMICOLONcontinue_statement : CONTINUE breakout_level SEMICOLON\n                        | CONTINUE SEMICOLONbreakout_level : INTEGER_LITERALbreakout_level : LEFT_PARENTHESIS breakout_level RIGHT_PARENTHESISbreak_statement : BREAK breakout_levelopt SEMICOLONbreakout_levelopt : breakout_level\n                         |breakout_level : expressionreturn_statement : RETURN expressionopt SEMICOLONexpressionopt : expression\n                     |throw_statement : THROW expression SEMICOLONtry_statement : TRY compound_statement catch_clauses\n                     | TRY compound_statement finally_clause\n                     | TRY compound_statement catch_clauses finally_clausecatch_clauses : catch_clause\n                     | catch_clauses catch_clausecatch_clause : CATCH LEFT_PARENTHESIS catch_name_list VARIABLE RIGHT_PARENTHESIS compound_statementcatch_name_list : qualified_name\n                       | catch_name_listfinally_clause : FINALLY compound_statementdeclare_statement : DECLARE LEFT_PARENTHESIS declare_directive RIGHT_PARENTHESIS statement\n                         | DECLARE LEFT_PARENTHESIS declare_directive RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDDECLARE SEMICOLON\n                         | DECLARE LEFT_PARENTHESIS declare_directive RIGHT_PARENTHESIS SEMICOLONdeclare_directive : TICKS EQUALS literal\n                         | ENCODING EQUALS literal\n                         | STRICT_TYPES EQUALS literalecho_statement : ECHO expression_list SEMICOLONexpression_list : expression\n                       | expression_list  expressionunset_statement : UNSET LEFT_PARENTHESIS variable_list COLON RIGHT_PARENTHESIS SEMICOLON\n                        | UNSET LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS SEMICOLONfunction_definition : function_definition_header compound_statementfunction_definition_header : FUNCTION ampersandopt name LEFT_PARENTHESIS parameter_declaration_listopt RIGHT_PARENTHESIS return_type_optampersandopt : AMPERSAND\n                    |parameter_declaration_list : simple_parameter_declaration_list\n                                   | variadic_declaration_listsimple_parameter_declaration_list : parameter_declaration\n                                          | parameter_declaration_list  parameter_declarationvariadic_declaration_list : simple_parameter_declaration_list  variadic_parameter\n                                  | variadic_parameterparameter_declaration : type_declarationopt ampersandopt VARIABLE default_argument_specifieroptvariadic_parameter : type_declarationopt ampersandopt ELLIPSIS VARIABLEreturn_type : DOUBLE_POINT type_declaration\n                   | DOUBLE_POINT VOIDtype_declarationopt : type_declaration\n                           |type_declaration : TERNARY_OPERATIONopt base_type_declarationTERNARY_OPERATIONopt : TERNARY_OPERATION\n                        |base_type_declaration : ARRAY\n                             | CALLABLE\n                             | ITERABLE\n                             | scalar_type\n                             | qualified_namescalar_type : BOOL\n                   | FLOAT\n                   | INT\n                   | STRINGdefault_argument_specifieropt : default_argument_specifier\n                                     |default_argument_specifier : EQUAL constant_expressionclass_declaration : class_modifieropt CLASS name class_base_clauseopt class_interface_clauseopt LEFT_CBRAC class_member_declarationsopt RIGHT_CBRACclass_modifieropt : class_modifier\n                         |class_base_clauseopt : class_base_clause\n                            |class_interface_clauseopt : class_interface_clause\n                                    |class_member_declarationsopt : class_member_declarations\n                                    |class_modifier : ABSTRACT\n                       | FINALclass_base_clause : EXTENDS qualified_nameclass_interface_clause : IMPLEMENTS qualified_name\n                               | class_interface_clause  qualified_nameclass_member_declarations : class_member_declaration\n                                  | class_member_declarations class_member_declarationclass_member_declaration : class_const_declaration\n                                 | property_declaration\n                                 | method_declaration\n                                 | constructor_declaration\n                                 | destructor_declaration\n                                 | trait_use_clauseconst_declaration : CONST const_elements SEMICOLONclass_const_declaration : visibility_modifier_opt CONST const_elements SEMICOLONconst_elements : const_element\n                      | const_elements  const_elementconst_element : name EQUAL constant_expressionproperty_declaration : property_modifier property_elements SEMICOLONproperty_modifier : VAR\n                          | visibility_modifier static_modifieropt\n                          | static_modifier visibility_modifier_optstatic_modifieropt : static_modifier\n                            |visibility_modifier : PUBLIC\n                            | PROTECTED\n                            | PRIVATEstatic_modifier : STATICproperty_elements : property_element\n                          | property_elements property_elementproperty_element : VARIABLE property_initializeropt SEMICOLONproperty_initializeropt : property_initializer\n                                 |property_initializer : EQUAL constant_expressionmethod_declaration : method_modifiersopt function_definition\n                           | method_modifiers function_definition_header SEMICOLONmethod_modifiersopt : method_modifiers\n                            |method_modifiers : method_modifier\n                        | method_modifiers method_modifiermethod_modifier : visibility_modifier\n                       | static_modifier\n                       | class_modifierconstructor_declaration : method_modifiers FUNCTION name AMPERSAND_opt CONSTRUCT LEFT_PARENTHESIS parameter_declaration_listopt RIGHT_PARENTHESIS compound_statementdestructor_declaration : method_modifiers FUNCTION name AMPERSAND_opt DESTRUCT LEFT_PARENTHESIS RIGHT_PARENTHESIS compound_statementparameter_declaration_listopt : parameter_declaration_list\n                                    |interface_declaration : INTERFACE name interface_base_clauseopt LEFT_CBRAC interface_member_declarationsopt RIGHT_CBRACinterface_base_clauseopt : interface_base_clause\n                                |interface_member_declarationsopt : interface_member_declarations\n                                        |interface_base_clause : EXTENDS qualified_name\n                             | interface_base_clause  qualified_nameinterface_member_declarations : interface_member_declaration\n                                     | interface_member_declarations interface_member_declarationinterface_member_declaration : class_const_declaration\n                                     | method_declarationtrait_declaration : TRAIT name LEFT_CBRAC trait_member_declarationsopt RIGHT_CBRACtrait_member_declarationsopt : trait_member_declarations\n                                    |trait_member_declarations : trait_member_declaration\n                                 | trait_member_declarations trait_member_declarationtrait_member_declaration : property_declaration\n                                 | method_declaration\n                                 | constructor_declaration\n                                 | destructor_declaration\n                                 | trait_use_clausestrait_use_clauses : trait_use_clause\n                         | trait_use_clauses trait_use_clausetrait_use_clause : USE trait_name_list trait_use_specificationtrait_name_list : qualified_name\n                       | trait_name_list  qualified_nametrait_use_specification : SEMICOLON\n                               | LEFT_CBRAC trait_select_and_alias_clausesopt RIGHT_CBRACtrait_select_and_alias_clausesopt : trait_select_and_alias_clauses\n                                            |trait_select_and_alias_clauses : trait_select_and_alias_clause\n                                      | trait_select_and_alias_clauses trait_select_and_alias_clausetrait_select_and_alias_clause : trait_select_insteadof_clause SEMICOLON\n                                     | trait_alias_as_clause SEMICOLONtrait_select_insteadof_clause : qualified_name DOUBLE_COLON name INSTEADOF trait_name_listtrait_alias_as_clause : name AS visibility_modifier_opt name\n                              | name AS visibility_modifier nameoptvisibility_modifier_opt : visibility_modifier\n                                |nameopt : name\n                |namespace_definition : NAMESPACE namespace_name SEMICOLON\n                             | NAMESPACE namespace_nameopt compound_statementnamespace_nameopt : namespace_name\n                            |namespace_use_declaration : USE namespace_function_or_constopt namespace_use_clauses SEMICOLON\n                                  | USE namespace_function_or_const NS_SEPARATORopt namespace_name NS_SEPARATOR LEFT_CBRAC namespace_use_group_clauses_1 RIGHT_CBRAC SEMICOLON\n                                  | USE NS_SEPARATORopt namespace_name NS_SEPARATOR LEFT_CBRAC namespace_use_group_clauses_2 RIGHT_CBRAC SEMICOLONnamespace_function_or_constopt : namespace_function_or_const\n                                      |NS_SEPARATORopt : NS_SEPARATOR\n                    |namespace_use_clauses : namespace_use_clause\n                              | namespace_use_clauses  namespace_use_clausenamespace_use_clause : qualified_name namespace_aliasing_clause_optnamespace_aliasing_clause_opt : namespace_aliasing_clausequalified_name : namenamespace_aliasing_clause : AS namenamespace_function_or_const : FUNCTION\n                                    | CONSTnamespace_use_group_clauses_1 : namespace_use_group_clause_1\n                                      | namespace_use_group_clauses_1  namespace_use_group_clause_1namespace_use_group_clause_1 : namespace_name namespace_aliasing_clause_optnamespace_use_group_clauses_2 : namespace_use_group_clause_2\n                                      | namespace_use_group_clauses_2  namespace_use_group_clause_2namespace_use_group_clause_2 : namespace_function_or_constopt namespace_name namespace_aliasing_clause_optname : STRING'
    
_lr_action_items = {'WHITESPACE':([0,],[3,]),'STRING':([0,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,51,54,55,57,60,61,62,63,64,65,69,72,77,79,86,87,88,90,91,92,93,94,95,96,97,98,99,104,105,106,108,109,115,116,119,120,123,137,146,147,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,238,239,242,243,245,246,247,248,249,256,259,260,266,267,271,272,274,276,277,278,282,284,286,291,302,303,305,306,307,309,310,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,375,376,379,380,381,382,383,386,388,389,390,392,393,400,401,402,403,404,405,406,407,408,412,414,415,418,420,421,438,439,440,441,445,446,447,448,449,454,456,465,466,468,469,470,471,472,473,474,482,484,485,486,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,553,556,557,558,566,568,569,580,588,595,596,597,600,601,602,605,606,611,622,623,624,625,626,629,630,631,632,633,634,636,638,640,644,645,648,649,652,653,654,655,656,662,663,666,667,668,669,670,671,672,673,675,676,678,679,680,682,691,693,699,700,701,702,704,706,713,716,718,719,720,722,724,729,731,744,750,755,756,760,761,774,779,780,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,827,830,833,834,835,836,837,839,843,844,845,851,852,853,854,855,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,888,889,891,897,898,901,902,903,904,906,907,908,910,911,913,914,915,917,918,920,922,928,932,933,936,937,939,941,943,944,950,951,952,954,955,956,960,962,963,],[5,5,-1,-2,-5,-3,60,-11,-12,-8,60,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,60,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,60,60,60,-546,-563,-268,-269,-270,-271,-272,60,60,-413,-266,-264,-262,-260,-256,-257,191,5,-7,-300,60,-298,-301,-302,191,60,-465,-410,60,60,-545,-555,-556,-43,-379,60,-412,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-176,-177,-186,-184,191,-181,-171,-172,-173,-174,-169,191,191,-167,191,-178,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,60,191,191,-66,-67,-75,-77,-4,-297,-390,-391,-393,-405,191,-81,-463,-466,60,60,-538,-539,60,-549,-25,-44,-17,-267,-377,-378,-382,-386,-389,-265,-263,191,191,-150,-151,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,-185,-28,-32,-62,-65,60,191,-175,-179,-168,-99,-110,-111,-112,-152,-153,191,-392,-394,-398,60,60,561,561,561,-82,-467,-277,60,-503,-502,60,-474,-475,-476,-542,-550,-551,-552,60,60,60,-428,-259,191,-226,191,-242,-227,-219,191,191,-42,-180,191,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,191,-399,60,-303,-409,60,60,-508,60,60,-521,-554,-45,-309,60,-339,60,60,-428,-414,-415,-416,-419,743,-427,191,-222,-241,-217,191,191,-215,-133,-134,-135,-136,-137,-138,-121,-42,-428,60,-116,-115,-118,-117,-73,-74,-76,-78,-79,60,-408,-454,-453,-497,60,-522,60,-307,-308,-313,60,60,-322,60,60,60,-349,60,60,60,-417,-418,-221,-147,-428,-97,-113,-114,60,60,-527,-306,-314,-316,-321,60,-333,-334,-324,-341,60,-345,60,60,-348,60,60,60,-347,60,60,-364,60,-428,-439,191,-158,-159,-148,-149,-98,-395,-400,-441,-528,-529,-530,60,-535,-544,60,60,60,-323,-340,-344,60,60,60,-343,60,60,-346,60,60,-363,60,60,-420,-438,-421,-101,-428,60,60,-543,60,-311,-312,60,60,60,-342,60,60,-357,60,60,-440,60,-315,-310,-353,60,-356,-355,-366,-83,60,60,-352,-351,-354,-365,-100,60,-350,]),'OPEN_TAG':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,93,94,95,97,98,99,108,137,245,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,706,719,791,792,793,800,808,810,812,816,820,823,843,844,845,859,870,871,872,876,880,883,903,906,907,913,917,932,933,936,939,941,943,952,954,955,956,963,],[-6,-6,-1,-2,8,-5,-3,-10,-11,-12,-8,-9,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-6,-7,-300,-298,-301,-302,-410,-379,-4,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,-408,-497,-307,-308,-313,-322,-349,-306,-314,-316,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-323,-340,-344,-343,-346,-363,-543,-311,-312,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'OPEN_TAG_WITH_ECHO':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,93,94,95,97,98,99,108,137,245,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,706,719,791,792,793,800,808,810,812,816,820,823,843,844,845,859,870,871,872,876,880,883,903,906,907,913,917,932,933,936,939,941,943,952,954,955,956,963,],[-6,-6,-1,-2,9,-5,-3,-10,-11,-12,-8,-9,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-6,-7,-300,-298,-301,-302,-410,-379,-4,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,-408,-497,-307,-308,-313,-322,-349,-306,-314,-316,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-323,-340,-344,-343,-346,-363,-543,-311,-312,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'$end':([1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,93,94,95,97,98,99,108,137,245,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,706,719,791,792,793,800,808,810,812,816,820,823,843,844,845,859,870,871,872,876,880,883,903,906,907,913,917,932,933,936,939,941,943,952,954,955,956,963,],[0,-1,-2,-5,-3,-10,-11,-12,-8,-9,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-6,-7,-300,-298,-301,-302,-410,-379,-4,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,-408,-497,-307,-308,-313,-322,-349,-306,-314,-316,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-323,-340,-344,-343,-346,-363,-543,-311,-312,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'CLOSE_TAG':([7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,706,719,791,792,793,800,808,810,812,816,820,823,843,844,845,859,870,871,872,876,880,883,903,906,907,913,917,932,933,936,939,941,943,952,954,955,956,963,],[-10,-11,-12,94,-9,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,-408,-497,-307,-308,-313,-322,-349,-306,-314,-316,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-323,-340,-344,-343,-346,-363,-543,-311,-312,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'LEFT_CBRAC':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,47,52,56,60,69,92,95,96,97,98,99,104,108,110,111,112,113,114,123,124,137,162,165,166,167,171,172,173,174,175,177,183,184,186,191,198,199,202,210,211,213,214,235,236,246,247,248,249,250,256,259,260,263,264,266,269,270,271,274,276,282,284,286,302,303,305,306,307,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,336,337,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,372,373,376,377,380,387,389,390,392,393,400,401,402,403,405,412,413,416,417,420,421,444,445,451,454,455,456,468,470,474,482,483,484,486,487,491,492,493,497,533,539,540,543,553,556,557,558,564,566,567,568,570,580,595,596,598,600,601,602,605,606,611,631,633,636,638,639,644,645,648,649,652,653,654,655,661,662,663,666,667,668,675,676,678,679,680,691,699,700,701,702,704,706,713,716,718,719,720,722,724,728,734,735,736,737,738,739,740,741,742,743,750,758,760,761,762,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,833,834,835,836,837,838,840,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,886,887,893,894,896,903,904,906,907,908,910,911,913,914,915,917,918,920,923,927,932,933,936,937,939,941,943,948,951,952,954,955,956,957,962,963,],[32,-11,-12,32,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,32,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,32,32,-541,-563,32,179,-300,32,-298,-301,-302,179,-410,-499,273,-540,32,-15,-43,285,-379,-46,-59,-60,-61,-54,-55,-56,-57,-58,338,-48,-49,-553,-68,-176,-177,179,179,179,179,-178,179,179,-297,-390,-391,-393,32,-405,179,-46,-48,-49,-463,-445,419,-498,-538,-539,-25,-44,-17,-377,-378,-382,-386,-389,179,179,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,179,179,179,179,490,490,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,-46,-48,-49,338,179,-105,542,-112,-46,-46,179,-392,-394,-398,32,-46,490,-447,-444,-503,-502,-16,-542,599,32,603,32,179,179,179,179,-46,-47,179,-157,-144,-145,-146,-122,490,-107,-104,490,179,-399,32,-303,-47,-409,677,-446,-452,-508,693,-521,694,-45,-309,32,-339,32,32,179,-46,179,179,-46,-133,-134,-135,-136,-137,-138,-121,-47,759,-106,-116,-115,-118,-117,32,-408,-454,-453,-497,-522,-307,-308,-313,32,32,-322,32,32,32,-349,32,32,32,-93,-426,-429,-430,-431,-432,-433,-434,-435,-436,-437,-147,-105,-113,-114,32,-306,-314,-316,-321,32,-333,-334,-324,-341,32,-345,32,32,-348,32,32,32,-347,32,32,-364,32,-411,-92,179,-158,-159,-148,-149,-91,-107,-395,-400,-441,-544,32,32,32,-323,-340,-344,32,32,32,-343,32,32,-346,32,32,-363,32,32,-422,-423,-93,-90,925,-543,32,-311,-312,32,32,32,-342,32,32,-357,32,32,32,32,-315,-310,-353,32,-356,-355,-366,32,32,-352,-351,-354,-365,-94,32,-350,]),'SEMICOLON':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,60,61,62,63,64,65,69,73,74,75,79,86,87,88,90,91,95,96,97,98,99,102,103,105,106,108,112,114,121,122,123,125,126,127,133,135,136,137,138,140,141,142,143,144,145,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,257,266,267,274,276,277,278,282,283,284,286,287,288,289,291,296,297,298,299,302,303,305,306,307,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,401,402,403,405,411,414,415,439,440,441,444,445,446,447,448,453,454,456,458,460,461,464,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,556,557,558,565,566,580,583,584,585,587,595,596,597,600,601,602,605,606,609,611,614,632,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,675,676,680,684,685,686,691,699,700,701,702,704,706,710,712,713,714,716,718,719,720,722,724,728,734,735,736,737,738,739,740,741,742,743,744,750,756,760,761,763,774,775,776,781,782,788,791,792,793,800,803,804,805,806,807,808,809,810,811,812,813,815,816,817,818,819,820,821,822,823,824,825,826,834,835,836,837,839,843,844,845,857,859,863,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,897,902,903,904,905,906,907,908,910,911,912,913,914,915,916,917,918,919,920,921,929,930,931,932,933,935,936,937,938,939,940,941,942,943,944,950,951,952,953,954,955,956,960,962,963,],[35,-11,-12,35,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,35,99,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-563,-268,-269,-270,-271,-272,35,137,-384,-388,-266,-264,-262,-260,-256,-257,-300,35,-298,-301,-302,256,-406,266,-465,-410,274,-15,282,-26,-43,286,-18,-23,297,302,303,-379,-380,-385,305,-383,306,-387,307,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-407,-463,-466,-538,-539,445,-549,-25,-27,-44,-17,-19,-20,-22,-267,458,459,-358,-361,-377,-378,-382,-386,-389,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-392,-394,-398,558,566,-467,-277,-474,-475,-476,-16,-542,-550,-551,-552,-21,35,35,608,613,-359,-381,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-399,35,-303,676,-409,-508,683,-478,-482,688,692,-521,-554,-45,-309,35,-339,35,717,35,-362,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,35,-408,-497,-479,775,-481,-522,-307,-308,-313,35,35,-322,806,808,35,810,35,35,-349,35,35,35,-93,-426,-429,-430,-431,-432,-433,-434,-435,-436,-437,-221,-147,-97,-113,-114,844,847,-480,-483,852,853,859,-306,-314,-316,-321,806,35,-333,-334,870,-324,871,-341,35,-345,35,35,-348,35,35,35,-347,35,35,-364,35,-411,-92,-158,-159,-148,-149,-98,-395,-400,-441,903,-544,906,907,35,35,35,-323,-340,-344,35,35,35,-343,35,35,917,-346,35,35,-363,35,35,-422,-423,-101,-537,-543,35,933,-311,-312,35,35,35,936,-342,35,35,939,-357,35,941,35,943,-532,-536,-533,-315,-310,952,-353,35,954,-356,955,-355,956,-366,-83,-531,35,-352,963,-351,-354,-365,-100,35,-350,]),'TRY':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[47,-11,-12,47,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,47,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,47,-300,47,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,47,-542,47,47,-399,47,-303,-409,-508,-309,47,-339,47,47,47,-408,-497,-307,-308,-313,47,47,-322,47,47,47,-349,47,47,47,-306,-314,-316,-321,47,-333,-334,-324,-341,47,-345,47,47,-348,47,47,47,-347,47,47,-364,47,-395,-400,-441,-544,47,47,47,-323,-340,-344,47,47,47,-343,47,47,-346,47,47,-363,47,47,-543,47,-311,-312,47,47,47,-342,47,47,-357,47,47,-315,-310,-353,47,-356,-355,-366,47,-352,-351,-354,-365,47,-350,]),'DECLARE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[48,-11,-12,48,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,48,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,48,-300,48,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,48,-542,48,48,-399,48,-303,-409,-508,-309,48,-339,48,48,48,-408,-497,-307,-308,-313,48,48,-322,48,48,48,-349,48,48,48,-306,-314,-316,-321,48,-333,-334,-324,-341,48,-345,48,48,-348,48,48,48,-347,48,48,-364,48,-395,-400,-441,-544,48,48,48,-323,-340,-344,48,48,48,-343,48,48,-346,48,48,-363,48,48,-543,48,-311,-312,48,48,48,-342,48,48,-357,48,48,-315,-310,-353,48,-356,-355,-366,48,-352,-351,-354,-365,48,-350,]),'ECHO':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[49,-11,-12,49,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,49,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,49,-300,49,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,49,-542,49,49,-399,49,-303,-409,-508,-309,49,-339,49,49,49,-408,-497,-307,-308,-313,49,49,-322,49,49,49,-349,49,49,49,-306,-314,-316,-321,49,-333,-334,-324,-341,49,-345,49,49,-348,49,49,49,-347,49,49,-364,49,-395,-400,-441,-544,49,49,49,-323,-340,-344,49,49,49,-343,49,49,-346,49,49,-363,49,49,-543,49,-311,-312,49,49,49,-342,49,49,-357,49,49,-315,-310,-353,49,-356,-355,-366,49,-352,-351,-354,-365,49,-350,]),'UNSET':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[50,-11,-12,50,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,50,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,50,-300,50,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,50,-542,50,50,-399,50,-303,-409,-508,-309,50,-339,50,50,50,-408,-497,-307,-308,-313,50,50,-322,50,50,50,-349,50,50,50,-306,-314,-316,-321,50,-333,-334,-324,-341,50,-345,50,50,-348,50,50,50,-347,50,50,-364,50,-395,-400,-441,-544,50,50,50,-323,-340,-344,50,50,50,-343,50,50,-346,50,50,-363,50,50,-543,50,-311,-312,50,50,50,-342,50,50,-357,50,50,-315,-310,-353,50,-356,-355,-366,50,-352,-351,-354,-365,50,-350,]),'CONST':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,57,60,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,419,439,440,441,445,448,454,456,556,557,558,566,572,573,574,575,576,578,580,586,597,599,601,602,605,606,611,675,676,677,680,681,683,688,690,692,695,696,699,700,701,702,704,706,713,716,718,719,720,722,724,759,765,766,767,768,769,770,771,772,773,789,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,842,843,844,845,846,847,850,859,860,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,925,932,933,936,937,939,941,943,949,951,952,954,955,956,961,962,963,],[51,-11,-12,51,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,51,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,120,-563,51,-300,51,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,51,-535,-474,-475,-476,-542,-552,51,51,-399,51,-303,-409,-535,-504,-506,-507,682,-534,-508,-484,-554,120,-309,51,-339,51,51,51,-408,-535,-497,-505,-468,-485,-520,-523,120,-560,-307,-308,-313,51,51,-322,51,51,51,-349,51,51,51,-535,-535,-455,-457,-458,-459,-460,-461,-462,-534,-561,-306,-314,-316,-321,51,-333,-334,-324,-341,51,-345,51,51,-348,51,51,51,-347,51,51,-364,51,-535,-395,-400,-441,-456,-464,-524,-544,-562,51,51,51,-323,-340,-344,51,51,51,-343,51,51,-346,51,51,-363,51,51,-543,51,-311,-312,51,51,51,-342,51,51,-357,51,51,-535,-315,-310,-353,51,-356,-355,-366,-494,51,-352,-351,-354,-365,-493,51,-350,]),'INTERFACE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[54,-11,-12,54,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,54,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,54,-300,54,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,54,-542,54,54,-399,54,-303,-409,-508,-309,54,-339,54,54,54,-408,-497,-307,-308,-313,54,54,-322,54,54,54,-349,54,54,54,-306,-314,-316,-321,54,-333,-334,-324,-341,54,-345,54,54,-348,54,54,54,-347,54,54,-364,54,-395,-400,-441,-544,54,54,54,-323,-340,-344,54,54,54,-343,54,54,-346,54,54,-363,54,54,-543,54,-311,-312,54,54,54,-342,54,54,-357,54,54,-315,-310,-353,54,-356,-355,-366,54,-352,-351,-354,-365,54,-350,]),'TRAIT':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[55,-11,-12,55,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,55,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,55,-300,55,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,55,-542,55,55,-399,55,-303,-409,-508,-309,55,-339,55,55,55,-408,-497,-307,-308,-313,55,55,-322,55,55,55,-349,55,55,55,-306,-314,-316,-321,55,-333,-334,-324,-341,55,-345,55,55,-348,55,55,55,-347,55,55,-364,55,-395,-400,-441,-544,55,55,55,-323,-340,-344,55,55,55,-343,55,55,-346,55,55,-363,55,55,-543,55,-311,-312,55,55,55,-342,55,55,-357,55,55,-315,-310,-353,55,-356,-355,-366,55,-352,-351,-354,-365,55,-350,]),'NAMESPACE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[56,-11,-12,56,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,56,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,56,-300,56,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,56,-542,56,56,-399,56,-303,-409,-508,-309,56,-339,56,56,56,-408,-497,-307,-308,-313,56,56,-322,56,56,56,-349,56,56,56,-306,-314,-316,-321,56,-333,-334,-324,-341,56,-345,56,56,-348,56,56,56,-347,56,56,-364,56,-395,-400,-441,-544,56,56,56,-323,-340,-344,56,56,56,-343,56,56,-346,56,56,-363,56,56,-543,56,-311,-312,56,56,56,-342,56,56,-357,56,56,-315,-310,-353,56,-356,-355,-366,56,-352,-351,-354,-365,56,-350,]),'USE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,273,274,276,282,286,302,303,305,306,307,401,402,403,405,423,424,425,426,427,428,429,433,445,454,456,556,557,558,566,580,581,582,586,601,602,605,606,611,675,676,677,680,683,688,690,692,699,700,701,702,704,706,713,716,718,719,720,722,724,759,765,766,767,768,769,770,771,772,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,838,842,843,844,845,846,847,850,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,925,932,933,936,937,939,941,943,949,951,952,954,955,956,961,962,963,],[57,-11,-12,57,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,57,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,57,-300,57,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,438,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,57,438,-511,-513,-514,-515,-516,438,-518,-542,57,57,-399,57,-303,-409,-508,-512,-519,-484,-309,57,-339,57,57,57,-408,438,-497,-468,-485,-520,-523,-307,-308,-313,57,57,-322,57,57,57,-349,57,57,57,438,438,-455,-457,-458,-459,-460,-461,-462,-306,-314,-316,-321,57,-333,-334,-324,-341,57,-345,57,57,-348,57,57,57,-347,57,57,-364,57,895,438,-395,-400,-441,-456,-464,-524,-544,57,57,57,-323,-340,-344,57,57,57,-343,57,57,-346,57,57,-363,57,57,-543,57,-311,-312,57,57,57,-342,57,57,-357,57,57,438,-315,-310,-353,57,-356,-355,-366,-494,57,-352,-351,-354,-365,-493,57,-350,]),'GLOBAL':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[58,-11,-12,58,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,58,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,58,-300,58,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,58,-542,58,58,-399,58,-303,-409,-508,-309,58,-339,58,58,58,-408,-497,-307,-308,-313,58,58,-322,58,58,58,-349,58,58,58,-306,-314,-316,-321,58,-333,-334,-324,-341,58,-345,58,58,-348,58,58,58,-347,58,58,-364,58,-395,-400,-441,-544,58,58,58,-323,-340,-344,58,58,58,-343,58,58,-346,58,58,-363,58,58,-543,58,-311,-312,58,58,58,-342,58,58,-357,58,58,-315,-310,-353,58,-356,-355,-366,58,-352,-351,-354,-365,58,-350,]),'STATIC':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,84,85,92,95,96,97,98,99,104,108,123,137,165,166,167,171,172,173,174,175,198,199,202,210,211,213,214,234,235,236,246,247,248,249,256,259,260,266,273,274,276,282,284,286,302,303,305,306,307,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,379,380,400,401,402,403,405,412,419,423,424,425,426,427,428,429,432,433,435,436,437,439,440,441,442,443,445,454,456,468,470,474,482,486,487,491,492,493,553,556,557,558,566,572,573,574,575,577,578,579,580,581,582,586,589,590,600,601,602,605,606,611,631,636,638,644,645,648,649,652,653,675,676,677,680,681,683,688,690,692,699,700,701,702,704,706,713,716,718,719,720,722,724,750,759,765,766,767,768,769,770,771,772,773,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,833,834,835,836,837,842,843,844,845,846,847,850,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,925,932,933,936,937,939,941,943,949,951,952,954,955,956,961,962,963,],[59,-11,-12,59,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,59,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,59,-450,-451,189,-300,59,-298,-301,-302,265,-410,-43,-379,-59,-60,-61,-54,-55,-56,-57,-58,-176,-177,378,378,378,378,-178,265,265,265,-297,-390,-391,-393,-405,265,-81,-463,442,-538,-539,-25,-44,-17,-377,-378,-382,-386,-389,189,189,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,189,378,265,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,378,265,378,265,-392,-394,-398,59,-82,442,442,-511,-513,-514,-515,-516,-517,442,-518,442,-491,-488,-474,-475,-476,-477,-492,-542,59,59,378,265,378,265,378,-157,-144,-145,-146,265,-399,59,-303,-409,442,-504,-506,-507,442,-490,-491,-508,-512,-519,-484,-489,-490,-45,-309,59,-339,59,59,378,265,265,-133,-134,-135,-136,-137,-138,59,-408,442,-497,-505,-468,-485,-520,-523,-307,-308,-313,59,59,-322,59,59,59,-349,59,59,59,-147,442,442,-455,-457,-458,-459,-460,-461,-462,442,-306,-314,-316,-321,59,-333,-334,-324,-341,59,-345,59,59,-348,59,59,59,-347,59,59,-364,59,265,-158,-159,-148,-149,442,-395,-400,-441,-456,-464,-524,-544,59,59,59,-323,-340,-344,59,59,59,-343,59,59,-346,59,59,-363,59,59,-543,59,-311,-312,59,59,59,-342,59,59,-357,59,59,442,-315,-310,-353,59,-356,-355,-366,-494,59,-352,-351,-354,-365,-493,59,-350,]),'IF':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[66,-11,-12,66,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,66,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,66,-300,66,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,66,-542,66,66,-399,66,-303,-409,-508,-309,66,-339,66,66,66,-408,-497,-307,-308,-313,66,66,-322,66,66,66,-349,66,66,66,-306,-314,-316,-321,66,-333,-334,-324,-341,66,-345,66,66,-348,66,66,66,-347,66,66,-364,66,-395,-400,-441,-544,66,66,66,-323,-340,-344,66,66,66,-343,66,66,-346,66,66,-363,66,66,-543,66,-311,-312,66,66,66,-342,66,66,-357,66,66,-315,-310,-353,66,-356,-355,-366,66,-352,-351,-354,-365,66,-350,]),'SWITCH':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[67,-11,-12,67,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,67,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,67,-300,67,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,67,-542,67,67,-399,67,-303,-409,-508,-309,67,-339,67,67,67,-408,-497,-307,-308,-313,67,67,-322,67,67,67,-349,67,67,67,-306,-314,-316,-321,67,-333,-334,-324,-341,67,-345,67,67,-348,67,67,67,-347,67,67,-364,67,-395,-400,-441,-544,67,67,67,-323,-340,-344,67,67,67,-343,67,67,-346,67,67,-363,67,67,-543,67,-311,-312,67,67,67,-342,67,67,-357,67,67,-315,-310,-353,67,-356,-355,-366,67,-352,-351,-354,-365,67,-350,]),'WHILE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,132,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[68,-11,-12,68,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,68,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,68,-300,68,-298,-301,-302,-410,295,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,68,-542,68,68,-399,68,-303,-409,-508,-309,68,-339,68,68,68,-408,-497,-307,-308,-313,68,68,-322,68,68,68,-349,68,68,68,-306,-314,-316,-321,68,-333,-334,-324,-341,68,-345,68,68,-348,68,68,68,-347,68,68,-364,68,-395,-400,-441,-544,68,68,68,-323,-340,-344,68,68,68,-343,68,68,-346,68,68,-363,68,68,-543,68,-311,-312,68,68,68,-342,68,68,-357,68,68,-315,-310,-353,68,-356,-355,-366,68,-352,-351,-354,-365,68,-350,]),'DO':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[69,-11,-12,69,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,69,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,69,-300,69,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,69,-542,69,69,-399,69,-303,-409,-508,-309,69,-339,69,69,69,-408,-497,-307,-308,-313,69,69,-322,69,69,69,-349,69,69,69,-306,-314,-316,-321,69,-333,-334,-324,-341,69,-345,69,69,-348,69,69,69,-347,69,69,-364,69,-395,-400,-441,-544,69,69,69,-323,-340,-344,69,69,69,-343,69,69,-346,69,69,-363,69,69,-543,69,-311,-312,69,69,69,-342,69,69,-357,69,69,-315,-310,-353,69,-356,-355,-366,69,-352,-351,-354,-365,69,-350,]),'FOR':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[70,-11,-12,70,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,70,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,70,-300,70,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,70,-542,70,70,-399,70,-303,-409,-508,-309,70,-339,70,70,70,-408,-497,-307,-308,-313,70,70,-322,70,70,70,-349,70,70,70,-306,-314,-316,-321,70,-333,-334,-324,-341,70,-345,70,70,-348,70,70,70,-347,70,70,-364,70,-395,-400,-441,-544,70,70,70,-323,-340,-344,70,70,70,-343,70,70,-346,70,70,-363,70,70,-543,70,-311,-312,70,70,70,-342,70,70,-357,70,70,-315,-310,-353,70,-356,-355,-366,70,-352,-351,-354,-365,70,-350,]),'FOREACH':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[71,-11,-12,71,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,71,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,71,-300,71,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,71,-542,71,71,-399,71,-303,-409,-508,-309,71,-339,71,71,71,-408,-497,-307,-308,-313,71,71,-322,71,71,71,-349,71,71,71,-306,-314,-316,-321,71,-333,-334,-324,-341,71,-345,71,71,-348,71,71,71,-347,71,71,-364,71,-395,-400,-441,-544,71,71,71,-323,-340,-344,71,71,71,-343,71,71,-346,71,71,-363,71,71,-543,71,-311,-312,71,71,71,-342,71,71,-357,71,71,-315,-310,-353,71,-356,-355,-366,71,-352,-351,-354,-365,71,-350,]),'GOTO':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[72,-11,-12,72,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,72,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,72,-300,72,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,72,-542,72,72,-399,72,-303,-409,-508,-309,72,-339,72,72,72,-408,-497,-307,-308,-313,72,72,-322,72,72,72,-349,72,72,72,-306,-314,-316,-321,72,-333,-334,-324,-341,72,-345,72,72,-348,72,72,72,-347,72,72,-364,72,-395,-400,-441,-544,72,72,72,-323,-340,-344,72,72,72,-343,72,72,-346,72,72,-363,72,72,-543,72,-311,-312,72,72,72,-342,72,72,-357,72,72,-315,-310,-353,72,-356,-355,-366,72,-352,-351,-354,-365,72,-350,]),'CONTINUE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[73,-11,-12,73,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,73,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,73,-300,73,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,73,-542,73,73,-399,73,-303,-409,-508,-309,73,-339,73,73,73,-408,-497,-307,-308,-313,73,73,-322,73,73,73,-349,73,73,73,-306,-314,-316,-321,73,-333,-334,-324,-341,73,-345,73,73,-348,73,73,73,-347,73,73,-364,73,-395,-400,-441,-544,73,73,73,-323,-340,-344,73,73,73,-343,73,73,-346,73,73,-363,73,73,-543,73,-311,-312,73,73,73,-342,73,73,-357,73,73,-315,-310,-353,73,-356,-355,-366,73,-352,-351,-354,-365,73,-350,]),'BREAK':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[74,-11,-12,74,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,74,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,74,-300,74,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,74,-542,74,74,-399,74,-303,-409,-508,-309,74,-339,74,74,74,-408,-497,-307,-308,-313,74,74,-322,74,74,74,-349,74,74,74,-306,-314,-316,-321,74,-333,-334,-324,-341,74,-345,74,74,-348,74,74,74,-347,74,74,-364,74,-395,-400,-441,-544,74,74,74,-323,-340,-344,74,74,74,-343,74,74,-346,74,74,-363,74,74,-543,74,-311,-312,74,74,74,-342,74,74,-357,74,74,-315,-310,-353,74,-356,-355,-366,74,-352,-351,-354,-365,74,-350,]),'RETURN':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[75,-11,-12,75,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,75,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,75,-300,75,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,75,-542,75,75,-399,75,-303,-409,-508,-309,75,-339,75,75,75,-408,-497,-307,-308,-313,75,75,-322,75,75,75,-349,75,75,75,-306,-314,-316,-321,75,-333,-334,-324,-341,75,-345,75,75,-348,75,75,75,-347,75,75,-364,75,-395,-400,-441,-544,75,75,75,-323,-340,-344,75,75,75,-343,75,75,-346,75,75,-363,75,75,-543,75,-311,-312,75,75,75,-342,75,75,-357,75,75,-315,-310,-353,75,-356,-355,-366,75,-352,-351,-354,-365,75,-350,]),'THROW':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,95,96,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[76,-11,-12,76,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,76,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,76,-300,76,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,76,-542,76,76,-399,76,-303,-409,-508,-309,76,-339,76,76,76,-408,-497,-307,-308,-313,76,76,-322,76,76,76,-349,76,76,76,-306,-314,-316,-321,76,-333,-334,-324,-341,76,-345,76,76,-348,76,76,76,-347,76,76,-364,76,-395,-400,-441,-544,76,76,76,-323,-340,-344,76,76,76,-343,76,76,-346,76,76,-363,76,76,-543,76,-311,-312,76,76,76,-342,76,76,-357,76,76,-315,-310,-353,76,-356,-355,-366,76,-352,-351,-354,-365,76,-350,]),'FUNCTION':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,57,60,69,84,85,92,95,96,97,98,99,108,137,189,198,199,202,210,211,213,214,233,246,247,248,249,256,266,273,274,276,282,286,302,303,305,306,307,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,378,380,401,402,403,405,419,423,424,425,426,427,428,429,431,432,433,435,436,437,439,440,441,442,443,445,448,454,456,468,474,486,556,557,558,566,572,573,574,575,577,578,579,580,581,582,586,589,590,597,599,601,602,605,606,611,631,675,676,677,680,681,683,688,690,692,695,696,699,700,701,702,704,706,713,716,718,719,720,722,724,759,765,766,767,768,769,770,771,772,773,789,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,842,843,844,845,846,847,850,859,860,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,925,932,933,936,937,939,941,943,949,951,952,954,955,956,961,962,963,],[77,-11,-12,77,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,77,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,119,-563,77,-450,-451,-85,-300,77,-298,-301,-302,-410,-379,-84,-176,-177,-85,-85,-85,-85,-178,385,-297,-390,-391,-393,-405,-463,-487,-538,-539,-25,-17,-377,-378,-382,-386,-389,-85,-85,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-84,-85,-392,-394,-398,77,-487,-487,-511,-513,-514,-515,-516,-517,77,588,-518,-490,-491,-488,-474,-475,-476,-477,-492,-542,-552,77,77,-85,-85,-85,-399,77,-303,-409,-487,-504,-506,-507,77,-490,-491,-508,-512,-519,-484,-489,-490,-554,119,-309,77,-339,77,77,-85,77,-408,-487,-497,-505,-468,-485,-520,-523,119,-560,-307,-308,-313,77,77,-322,77,77,77,-349,77,77,77,-487,-487,-455,-457,-458,-459,-460,-461,-462,-490,-561,-306,-314,-316,-321,77,-333,-334,-324,-341,77,-345,77,77,-348,77,77,77,-347,77,77,-364,77,-487,-395,-400,-441,-456,-464,-524,-544,-562,77,77,77,-323,-340,-344,77,77,77,-343,77,77,-346,77,77,-363,77,77,-543,77,-311,-312,77,77,77,-342,77,77,-357,77,77,-487,-315,-310,-353,77,-356,-355,-366,-494,77,-352,-351,-354,-365,-493,77,-350,]),'CLASS':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,53,69,78,84,85,95,96,97,98,99,108,137,234,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,405,445,454,456,556,557,558,566,580,601,602,605,606,611,675,676,680,699,700,701,702,704,706,713,716,718,719,720,722,724,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,843,844,845,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,951,952,954,955,956,962,963,],[-443,-11,-12,-443,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-443,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,109,-443,-442,-450,-451,-300,-443,-298,-301,-302,-410,-379,387,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-443,-542,-443,-443,-399,-443,-303,-409,-508,-309,-443,-339,-443,-443,-443,-408,-497,-307,-308,-313,-443,-443,-322,-443,-443,-443,-349,-443,-443,-443,-306,-314,-316,-321,-443,-333,-334,-324,-341,-443,-345,-443,-443,-348,-443,-443,-443,-347,-443,-443,-364,-443,-395,-400,-441,-544,-443,-443,-443,-323,-340,-344,-443,-443,-443,-343,-443,-443,-346,-443,-443,-363,-443,-443,-543,-443,-311,-312,-443,-443,-443,-342,-443,-443,-357,-443,-443,-315,-310,-353,-443,-356,-355,-366,-443,-352,-351,-354,-365,-443,-350,]),'INCLUDE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,60,61,62,63,64,65,69,73,74,75,76,79,80,81,82,83,86,87,88,90,91,95,96,97,98,99,102,103,108,123,129,130,131,133,134,137,139,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,257,258,266,268,274,276,282,284,285,286,290,291,297,302,303,305,306,307,309,310,312,315,316,332,338,344,346,348,349,351,370,371,372,373,375,376,381,382,383,384,386,388,389,390,392,393,396,397,398,399,401,402,403,405,445,454,456,457,458,459,462,463,466,469,471,472,473,484,485,487,489,490,491,492,493,496,497,499,502,504,505,506,507,508,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,537,538,542,546,556,557,558,566,580,600,601,602,605,606,608,611,613,615,618,619,632,633,634,637,640,641,643,644,645,647,648,649,650,651,652,653,654,655,658,660,663,666,667,668,669,670,671,672,673,675,676,680,687,699,700,701,702,704,706,709,713,716,717,718,719,720,722,724,725,744,749,750,752,756,760,761,791,792,793,794,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,834,835,836,837,839,843,844,845,859,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,890,897,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,944,951,952,954,955,956,960,962,963,],[80,-11,-12,80,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,80,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,80,-563,-268,-269,-270,-271,-272,80,80,80,80,80,-266,80,80,80,80,-264,-262,-260,-256,-257,-300,80,-298,-301,-302,80,-406,-410,-43,80,80,80,80,80,-379,80,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,80,-216,-54,-55,-56,-57,-58,-214,80,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-407,80,-463,80,-538,-539,-25,-44,80,-17,80,-267,80,-377,-378,-382,-386,-389,-265,-263,80,-150,-151,80,80,80,-86,80,80,80,-185,80,-28,-32,-62,-65,-175,-179,-168,80,-99,-110,-111,-112,-152,-153,80,80,80,80,-392,-394,-398,80,-542,80,80,80,80,80,80,80,-259,-226,-242,-227,-219,-42,-180,-157,-160,80,-144,-145,-146,-213,-122,80,-87,80,-139,-141,-142,80,80,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,80,80,80,-154,-399,80,-303,-409,-508,-45,-309,80,-339,80,80,80,80,-87,80,80,-222,-241,-217,80,-215,80,80,-133,-134,80,-135,-136,-140,-143,-137,-138,-121,-42,80,80,-116,-115,-118,-117,-73,-74,-76,-78,-79,80,-408,-497,80,-307,-308,-313,80,80,-322,80,80,80,80,80,-349,80,80,80,-368,-221,80,-147,80,-97,-113,-114,-306,-314,-316,80,-321,80,-333,-334,-324,-341,80,-345,80,80,-348,80,80,80,-347,80,80,-364,80,-158,-159,-148,-149,-98,-395,-400,-441,-544,80,80,80,80,-323,-340,-344,80,80,80,-343,80,80,-346,80,80,-363,80,80,80,-101,-543,80,-311,-312,80,80,80,-342,80,80,-357,80,80,-315,-310,-353,80,-356,-355,-366,-83,80,-352,-351,-354,-365,-100,80,-350,]),'INCLUDE_ONCE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,60,61,62,63,64,65,69,73,74,75,76,79,80,81,82,83,86,87,88,90,91,95,96,97,98,99,102,103,108,123,129,130,131,133,134,137,139,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,257,258,266,268,274,276,282,284,285,286,290,291,297,302,303,305,306,307,309,310,312,315,316,332,338,344,346,348,349,351,370,371,372,373,375,376,381,382,383,384,386,388,389,390,392,393,396,397,398,399,401,402,403,405,445,454,456,457,458,459,462,463,466,469,471,472,473,484,485,487,489,490,491,492,493,496,497,499,502,504,505,506,507,508,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,537,538,542,546,556,557,558,566,580,600,601,602,605,606,608,611,613,615,618,619,632,633,634,637,640,641,643,644,645,647,648,649,650,651,652,653,654,655,658,660,663,666,667,668,669,670,671,672,673,675,676,680,687,699,700,701,702,704,706,709,713,716,717,718,719,720,722,724,725,744,749,750,752,756,760,761,791,792,793,794,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,834,835,836,837,839,843,844,845,859,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,890,897,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,944,951,952,954,955,956,960,962,963,],[81,-11,-12,81,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,81,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,81,-563,-268,-269,-270,-271,-272,81,81,81,81,81,-266,81,81,81,81,-264,-262,-260,-256,-257,-300,81,-298,-301,-302,81,-406,-410,-43,81,81,81,81,81,-379,81,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,81,-216,-54,-55,-56,-57,-58,-214,81,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-407,81,-463,81,-538,-539,-25,-44,81,-17,81,-267,81,-377,-378,-382,-386,-389,-265,-263,81,-150,-151,81,81,81,-86,81,81,81,-185,81,-28,-32,-62,-65,-175,-179,-168,81,-99,-110,-111,-112,-152,-153,81,81,81,81,-392,-394,-398,81,-542,81,81,81,81,81,81,81,-259,-226,-242,-227,-219,-42,-180,-157,-160,81,-144,-145,-146,-213,-122,81,-87,81,-139,-141,-142,81,81,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,81,81,81,-154,-399,81,-303,-409,-508,-45,-309,81,-339,81,81,81,81,-87,81,81,-222,-241,-217,81,-215,81,81,-133,-134,81,-135,-136,-140,-143,-137,-138,-121,-42,81,81,-116,-115,-118,-117,-73,-74,-76,-78,-79,81,-408,-497,81,-307,-308,-313,81,81,-322,81,81,81,81,81,-349,81,81,81,-368,-221,81,-147,81,-97,-113,-114,-306,-314,-316,81,-321,81,-333,-334,-324,-341,81,-345,81,81,-348,81,81,81,-347,81,81,-364,81,-158,-159,-148,-149,-98,-395,-400,-441,-544,81,81,81,81,-323,-340,-344,81,81,81,-343,81,81,-346,81,81,-363,81,81,81,-101,-543,81,-311,-312,81,81,81,-342,81,81,-357,81,81,-315,-310,-353,81,-356,-355,-366,-83,81,-352,-351,-354,-365,-100,81,-350,]),'REQUIRE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,60,61,62,63,64,65,69,73,74,75,76,79,80,81,82,83,86,87,88,90,91,95,96,97,98,99,102,103,108,123,129,130,131,133,134,137,139,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,257,258,266,268,274,276,282,284,285,286,290,291,297,302,303,305,306,307,309,310,312,315,316,332,338,344,346,348,349,351,370,371,372,373,375,376,381,382,383,384,386,388,389,390,392,393,396,397,398,399,401,402,403,405,445,454,456,457,458,459,462,463,466,469,471,472,473,484,485,487,489,490,491,492,493,496,497,499,502,504,505,506,507,508,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,537,538,542,546,556,557,558,566,580,600,601,602,605,606,608,611,613,615,618,619,632,633,634,637,640,641,643,644,645,647,648,649,650,651,652,653,654,655,658,660,663,666,667,668,669,670,671,672,673,675,676,680,687,699,700,701,702,704,706,709,713,716,717,718,719,720,722,724,725,744,749,750,752,756,760,761,791,792,793,794,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,834,835,836,837,839,843,844,845,859,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,890,897,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,944,951,952,954,955,956,960,962,963,],[82,-11,-12,82,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,82,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,82,-563,-268,-269,-270,-271,-272,82,82,82,82,82,-266,82,82,82,82,-264,-262,-260,-256,-257,-300,82,-298,-301,-302,82,-406,-410,-43,82,82,82,82,82,-379,82,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,82,-216,-54,-55,-56,-57,-58,-214,82,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-407,82,-463,82,-538,-539,-25,-44,82,-17,82,-267,82,-377,-378,-382,-386,-389,-265,-263,82,-150,-151,82,82,82,-86,82,82,82,-185,82,-28,-32,-62,-65,-175,-179,-168,82,-99,-110,-111,-112,-152,-153,82,82,82,82,-392,-394,-398,82,-542,82,82,82,82,82,82,82,-259,-226,-242,-227,-219,-42,-180,-157,-160,82,-144,-145,-146,-213,-122,82,-87,82,-139,-141,-142,82,82,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,82,82,82,-154,-399,82,-303,-409,-508,-45,-309,82,-339,82,82,82,82,-87,82,82,-222,-241,-217,82,-215,82,82,-133,-134,82,-135,-136,-140,-143,-137,-138,-121,-42,82,82,-116,-115,-118,-117,-73,-74,-76,-78,-79,82,-408,-497,82,-307,-308,-313,82,82,-322,82,82,82,82,82,-349,82,82,82,-368,-221,82,-147,82,-97,-113,-114,-306,-314,-316,82,-321,82,-333,-334,-324,-341,82,-345,82,82,-348,82,82,82,-347,82,82,-364,82,-158,-159,-148,-149,-98,-395,-400,-441,-544,82,82,82,82,-323,-340,-344,82,82,82,-343,82,82,-346,82,82,-363,82,82,82,-101,-543,82,-311,-312,82,82,82,-342,82,82,-357,82,82,-315,-310,-353,82,-356,-355,-366,-83,82,-352,-351,-354,-365,-100,82,-350,]),'REQUIRE_ONCE':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,60,61,62,63,64,65,69,73,74,75,76,79,80,81,82,83,86,87,88,90,91,95,96,97,98,99,102,103,108,123,129,130,131,133,134,137,139,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,257,258,266,268,274,276,282,284,285,286,290,291,297,302,303,305,306,307,309,310,312,315,316,332,338,344,346,348,349,351,370,371,372,373,375,376,381,382,383,384,386,388,389,390,392,393,396,397,398,399,401,402,403,405,445,454,456,457,458,459,462,463,466,469,471,472,473,484,485,487,489,490,491,492,493,496,497,499,502,504,505,506,507,508,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,537,538,542,546,556,557,558,566,580,600,601,602,605,606,608,611,613,615,618,619,632,633,634,637,640,641,643,644,645,647,648,649,650,651,652,653,654,655,658,660,663,666,667,668,669,670,671,672,673,675,676,680,687,699,700,701,702,704,706,709,713,716,717,718,719,720,722,724,725,744,749,750,752,756,760,761,791,792,793,794,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,834,835,836,837,839,843,844,845,859,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,890,897,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,944,951,952,954,955,956,960,962,963,],[83,-11,-12,83,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,83,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,83,-563,-268,-269,-270,-271,-272,83,83,83,83,83,-266,83,83,83,83,-264,-262,-260,-256,-257,-300,83,-298,-301,-302,83,-406,-410,-43,83,83,83,83,83,-379,83,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,83,-216,-54,-55,-56,-57,-58,-214,83,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-407,83,-463,83,-538,-539,-25,-44,83,-17,83,-267,83,-377,-378,-382,-386,-389,-265,-263,83,-150,-151,83,83,83,-86,83,83,83,-185,83,-28,-32,-62,-65,-175,-179,-168,83,-99,-110,-111,-112,-152,-153,83,83,83,83,-392,-394,-398,83,-542,83,83,83,83,83,83,83,-259,-226,-242,-227,-219,-42,-180,-157,-160,83,-144,-145,-146,-213,-122,83,-87,83,-139,-141,-142,83,83,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,83,83,83,-154,-399,83,-303,-409,-508,-45,-309,83,-339,83,83,83,83,-87,83,83,-222,-241,-217,83,-215,83,83,-133,-134,83,-135,-136,-140,-143,-137,-138,-121,-42,83,83,-116,-115,-118,-117,-73,-74,-76,-78,-79,83,-408,-497,83,-307,-308,-313,83,83,-322,83,83,83,83,83,-349,83,83,83,-368,-221,83,-147,83,-97,-113,-114,-306,-314,-316,83,-321,83,-333,-334,-324,-341,83,-345,83,83,-348,83,83,83,-347,83,83,-364,83,-158,-159,-148,-149,-98,-395,-400,-441,-544,83,83,83,83,-323,-340,-344,83,83,83,-343,83,83,-346,83,83,-363,83,83,83,-101,-543,83,-311,-312,83,83,83,-342,83,83,-357,83,83,-315,-310,-353,83,-356,-355,-366,-83,83,-352,-351,-354,-365,-100,83,-350,]),'ABSTRACT':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,84,85,95,96,97,98,99,108,137,246,247,248,249,256,266,273,274,276,282,286,302,303,305,306,307,401,402,403,405,419,423,424,425,426,427,428,429,432,433,435,436,437,439,440,441,442,443,445,454,456,556,557,558,566,572,573,574,575,577,578,579,580,581,582,586,589,590,601,602,605,606,611,675,676,677,680,681,683,688,690,692,699,700,701,702,704,706,713,716,718,719,720,722,724,759,765,766,767,768,769,770,771,772,773,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,842,843,844,845,846,847,850,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,925,932,933,936,937,939,941,943,949,951,952,954,955,956,961,962,963,],[84,-11,-12,84,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,84,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,84,-450,-451,-300,84,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,84,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,84,84,84,-511,-513,-514,-515,-516,-517,84,-518,-490,-491,-488,-474,-475,-476,-477,-492,-542,84,84,-399,84,-303,-409,84,-504,-506,-507,84,-490,-491,-508,-512,-519,-484,-489,-490,-309,84,-339,84,84,84,-408,84,-497,-505,-468,-485,-520,-523,-307,-308,-313,84,84,-322,84,84,84,-349,84,84,84,84,84,-455,-457,-458,-459,-460,-461,-462,-490,-306,-314,-316,-321,84,-333,-334,-324,-341,84,-345,84,84,-348,84,84,84,-347,84,84,-364,84,84,-395,-400,-441,-456,-464,-524,-544,84,84,84,-323,-340,-344,84,84,84,-343,84,84,-346,84,84,-363,84,84,-543,84,-311,-312,84,84,84,-342,84,84,-357,84,84,84,-315,-310,-353,84,-356,-355,-366,-494,84,-352,-351,-354,-365,-493,84,-350,]),'FINAL':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,69,84,85,95,96,97,98,99,108,137,246,247,248,249,256,266,273,274,276,282,286,302,303,305,306,307,401,402,403,405,419,423,424,425,426,427,428,429,432,433,435,436,437,439,440,441,442,443,445,454,456,556,557,558,566,572,573,574,575,577,578,579,580,581,582,586,589,590,601,602,605,606,611,675,676,677,680,681,683,688,690,692,699,700,701,702,704,706,713,716,718,719,720,722,724,759,765,766,767,768,769,770,771,772,773,791,792,793,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,842,843,844,845,846,847,850,859,866,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,903,904,906,907,908,910,911,913,914,915,917,918,920,925,932,933,936,937,939,941,943,949,951,952,954,955,956,961,962,963,],[85,-11,-12,85,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,85,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,85,-450,-451,-300,85,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,85,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,85,85,85,-511,-513,-514,-515,-516,-517,85,-518,-490,-491,-488,-474,-475,-476,-477,-492,-542,85,85,-399,85,-303,-409,85,-504,-506,-507,85,-490,-491,-508,-512,-519,-484,-489,-490,-309,85,-339,85,85,85,-408,85,-497,-505,-468,-485,-520,-523,-307,-308,-313,85,85,-322,85,85,85,-349,85,85,85,85,85,-455,-457,-458,-459,-460,-461,-462,-490,-306,-314,-316,-321,85,-333,-334,-324,-341,85,-345,85,85,-348,85,85,85,-347,85,85,-364,85,85,-395,-400,-441,-456,-464,-524,-544,85,85,85,-323,-340,-344,85,85,85,-343,85,85,-346,85,85,-363,85,85,-543,85,-311,-312,85,85,85,-342,85,85,-357,85,85,85,-315,-310,-353,85,-356,-355,-366,-494,85,-352,-351,-354,-365,-493,85,-350,]),'PRINT':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,60,61,62,63,64,65,69,73,74,75,76,79,80,81,82,83,86,87,88,89,90,91,95,96,97,98,99,102,103,108,123,128,129,130,131,133,134,137,139,148,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,257,258,266,268,274,276,282,284,285,286,290,291,297,302,303,305,306,307,309,310,312,315,316,332,338,344,346,348,349,351,370,371,372,373,375,376,381,382,383,384,386,388,389,390,392,393,396,397,398,399,401,402,403,405,445,454,456,457,458,459,462,463,466,469,471,472,473,484,485,487,489,490,491,492,493,496,497,499,502,504,505,506,507,508,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,537,538,542,546,556,557,558,566,580,600,601,602,605,606,608,611,613,615,618,619,632,633,634,637,640,641,643,644,645,647,648,649,650,651,652,653,654,655,658,660,663,666,667,668,669,670,671,672,673,675,676,680,687,699,700,701,702,704,706,709,713,716,717,718,719,720,722,724,725,744,749,750,752,756,760,761,791,792,793,794,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,834,835,836,837,839,843,844,845,859,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,890,897,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,944,951,952,954,955,956,960,962,963,],[89,-11,-12,89,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,89,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,89,-563,-268,-269,-270,-271,-272,89,89,89,89,89,-266,89,89,89,89,-264,-262,-260,89,-256,-257,-300,89,-298,-301,-302,89,-406,-410,-43,89,89,89,89,89,89,-379,89,89,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,89,-216,-54,-55,-56,-57,-58,-214,89,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-407,89,-463,89,-538,-539,-25,-44,89,-17,89,-267,89,-377,-378,-382,-386,-389,-265,-263,89,-150,-151,89,89,89,-86,89,89,89,-185,89,-28,-32,-62,-65,-175,-179,-168,89,-99,-110,-111,-112,-152,-153,89,89,89,89,-392,-394,-398,89,-542,89,89,89,89,89,89,89,-259,-226,-242,-227,-219,-42,-180,-157,-160,89,-144,-145,-146,-213,-122,89,-87,89,-139,-141,-142,89,89,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,89,89,89,-154,-399,89,-303,-409,-508,-45,-309,89,-339,89,89,89,89,-87,89,89,-222,-241,-217,89,-215,89,89,-133,-134,89,-135,-136,-140,-143,-137,-138,-121,-42,89,89,-116,-115,-118,-117,-73,-74,-76,-78,-79,89,-408,-497,89,-307,-308,-313,89,89,-322,89,89,89,89,89,-349,89,89,89,-368,-221,89,-147,89,-97,-113,-114,-306,-314,-316,89,-321,89,-333,-334,-324,-341,89,-345,89,89,-348,89,89,89,-347,89,89,-364,89,-158,-159,-148,-149,-98,-395,-400,-441,-544,89,89,89,89,-323,-340,-344,89,89,89,-343,89,89,-346,89,89,-363,89,89,89,-101,-543,89,-311,-312,89,89,89,-342,89,89,-357,89,89,-315,-310,-353,89,-356,-355,-366,-83,89,-352,-351,-354,-365,-100,89,-350,]),'YIELD':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,60,61,62,63,64,65,69,73,74,75,76,79,80,81,82,83,86,87,88,89,90,91,95,96,97,98,99,102,103,108,123,128,129,130,131,133,134,137,139,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,257,258,266,268,274,276,282,284,285,286,290,291,297,302,303,305,306,307,309,310,311,312,315,316,332,338,344,346,348,349,351,370,371,372,373,375,376,381,382,383,384,386,388,389,390,392,393,396,397,398,399,401,402,403,405,445,454,456,457,458,459,462,463,466,469,471,472,473,484,485,487,489,490,491,492,493,496,497,499,502,504,505,506,507,508,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,537,538,542,546,556,557,558,566,580,600,601,602,605,606,608,611,613,615,618,619,632,633,634,637,640,641,643,644,645,647,648,649,650,651,652,653,654,655,658,660,663,666,667,668,669,670,671,672,673,675,676,680,687,699,700,701,702,704,706,709,713,716,717,718,719,720,722,724,725,744,749,750,752,756,760,761,791,792,793,794,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,834,835,836,837,839,843,844,845,859,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,890,897,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,944,951,952,954,955,956,960,962,963,],[91,-11,-12,91,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,91,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,91,-563,-268,-269,-270,-271,-272,91,91,91,91,91,-266,91,91,91,91,-264,-262,-260,91,-256,91,-300,91,-298,-301,-302,91,-406,-410,-43,91,91,91,91,91,91,-379,91,91,-273,-274,-275,-276,91,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,91,-216,-54,-55,-56,-57,-58,-214,91,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-407,91,-463,91,-538,-539,-25,-44,91,-17,91,-267,91,-377,-378,-382,-386,-389,-265,-263,91,91,-150,-151,91,91,91,-86,91,91,91,-185,91,-28,-32,-62,-65,-175,-179,-168,91,-99,-110,-111,-112,-152,-153,91,91,91,91,-392,-394,-398,91,-542,91,91,91,91,91,91,91,-259,-226,-242,-227,-219,-42,-180,-157,-160,91,-144,-145,-146,-213,-122,91,-87,91,-139,-141,-142,91,91,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,91,91,91,-154,-399,91,-303,-409,-508,-45,-309,91,-339,91,91,91,91,-87,91,91,-222,-241,-217,91,-215,91,91,-133,-134,91,-135,-136,-140,-143,-137,-138,-121,-42,91,91,-116,-115,-118,-117,-73,-74,-76,-78,-79,91,-408,-497,91,-307,-308,-313,91,91,-322,91,91,91,91,91,-349,91,91,91,-368,-221,91,-147,91,-97,-113,-114,-306,-314,-316,91,-321,91,-333,-334,-324,-341,91,-345,91,91,-348,91,91,91,-347,91,91,-364,91,-158,-159,-148,-149,-98,-395,-400,-441,-544,91,91,91,91,-323,-340,-344,91,91,91,-343,91,91,-346,91,91,-363,91,91,91,-101,-543,91,-311,-312,91,91,91,-342,91,91,-357,91,91,-315,-310,-353,91,-356,-355,-366,-83,91,-352,-351,-354,-365,-100,91,-350,]),'YIELD_FROM':([7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,49,60,61,62,63,64,65,69,73,74,75,76,79,80,81,82,83,86,87,88,89,90,91,95,96,97,98,99,102,103,108,123,128,129,130,131,133,134,137,139,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,257,258,266,268,274,276,282,284,285,286,290,291,297,302,303,305,306,307,309,310,311,312,315,316,332,338,344,346,348,349,351,370,371,372,373,375,376,381,382,383,384,386,388,389,390,392,393,396,397,398,399,401,402,403,405,445,454,456,457,458,459,462,463,466,469,471,472,473,484,485,487,489,490,491,492,493,496,497,499,502,504,505,506,507,508,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,537,538,542,546,556,557,558,566,580,600,601,602,605,606,608,611,613,615,618,619,632,633,634,637,640,641,643,644,645,647,648,649,650,651,652,653,654,655,658,660,663,666,667,668,669,670,671,672,673,675,676,680,687,699,700,701,702,704,706,709,713,716,717,718,719,720,722,724,725,744,749,750,752,756,760,761,791,792,793,794,800,804,805,806,808,810,811,812,813,815,816,817,818,819,820,821,822,823,824,834,835,836,837,839,843,844,845,859,866,867,868,869,870,871,872,873,874,875,876,877,878,880,881,882,883,884,885,890,897,903,904,906,907,908,910,911,913,914,915,917,918,920,932,933,936,937,939,941,943,944,951,952,954,955,956,960,962,963,],[92,-11,-12,92,-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,92,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,92,-563,-268,-269,-270,-271,-272,92,92,92,92,92,-266,92,92,92,92,-264,-262,-260,92,-256,92,-300,92,-298,-301,-302,92,-406,-410,-43,92,92,92,92,92,92,-379,92,92,-273,-274,-275,-276,92,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,92,-216,-54,-55,-56,-57,-58,-214,92,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-407,92,-463,92,-538,-539,-25,-44,92,-17,92,-267,92,-377,-378,-382,-386,-389,-265,-263,92,92,-150,-151,92,92,92,-86,92,92,92,-185,92,-28,-32,-62,-65,-175,-179,-168,92,-99,-110,-111,-112,-152,-153,92,92,92,92,-392,-394,-398,92,-542,92,92,92,92,92,92,92,-259,-226,-242,-227,-219,-42,-180,-157,-160,92,-144,-145,-146,-213,-122,92,-87,92,-139,-141,-142,92,92,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,92,92,92,-154,-399,92,-303,-409,-508,-45,-309,92,-339,92,92,92,92,-87,92,92,-222,-241,-217,92,-215,92,92,-133,-134,92,-135,-136,-140,-143,-137,-138,-121,-42,92,92,-116,-115,-118,-117,-73,-74,-76,-78,-79,92,-408,-497,92,-307,-308,-313,92,92,-322,92,92,92,92,92,-349,92,92,92,-368,-221,92,-147,92,-97,-113,-114,-306,-314,-316,92,-321,92,-333,-334,-324,-341,92,-345,92,92,-348,92,92,92,-347,92,92,-364,92,-158,-159,-148,-149,-98,-395,-400,-441,-544,92,92,92,92,-323,-340,-344,92,92,92,-343,92,92,-346,92,92,-363,92,92,92,-101,-543,92,-311,-312,92,92,92,-342,92,92,-357,92,92,-315,-310,-353,92,-356,-355,-366,-83,92,-352,-351,-354,-365,-100,92,-350,]),'RIGHT_CBRAC':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,37,38,39,40,41,42,43,44,45,46,60,61,62,63,64,65,79,86,87,88,90,91,95,96,97,98,99,108,123,137,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,247,248,249,256,266,273,274,276,282,284,286,291,302,303,305,306,307,309,310,315,316,338,340,341,342,343,370,372,373,375,376,381,382,383,386,388,389,390,392,393,401,402,403,419,422,423,424,425,426,427,428,429,433,445,448,452,466,469,471,472,473,484,485,487,489,491,492,493,494,495,496,497,498,500,501,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,542,546,556,558,566,571,572,573,574,575,580,581,582,586,597,600,601,603,605,632,633,634,640,644,645,646,648,649,652,653,654,655,663,664,665,666,667,668,669,670,671,672,673,676,677,680,681,683,688,690,692,693,695,696,699,700,701,705,706,707,708,719,744,750,753,756,760,761,764,765,766,767,768,769,770,771,772,778,779,780,786,787,789,791,792,793,800,801,802,804,805,806,808,810,812,816,820,823,834,835,836,837,839,843,844,845,846,847,850,851,852,853,856,858,859,860,868,869,870,871,872,876,880,883,897,903,906,907,910,913,917,932,933,936,939,941,943,944,949,952,954,955,956,960,961,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,97,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-300,246,-298,-301,-302,-410,-43,-379,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-124,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-390,-391,-393,-405,-463,-510,-538,-539,-25,-44,-17,-267,-377,-378,-382,-386,-389,-265,-263,-150,-151,-120,497,-123,-125,-127,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-392,-394,-398,-501,580,-509,-511,-513,-514,-515,-516,-517,-518,-542,-552,600,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,644,-119,-213,-122,-126,-129,-132,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-120,-154,-399,-303,-409,680,-500,-504,-506,-507,-508,-512,-519,-484,-554,-45,-309,706,-339,-222,-241,-217,-215,-133,-134,-128,-135,-136,-137,-138,-121,-42,-116,760,-119,-115,-118,-117,-73,-74,-76,-78,-79,-408,-449,-497,-505,-468,-485,-520,-523,-526,788,-560,-307,-308,-313,800,-322,-326,-328,-349,-221,-147,-130,-97,-113,-114,845,-448,-455,-457,-458,-459,-460,-461,-462,850,-525,-527,857,-557,-561,-306,-314,-316,-321,-325,-327,-332,-333,-334,-324,-341,-345,-348,-347,-364,-158,-159,-148,-149,-98,-395,-400,-441,-456,-464,-524,-528,-529,-530,-559,-558,-544,-562,-330,-331,-323,-340,-344,-343,-346,-363,-101,-543,-311,-312,-329,-342,-357,-315,-310,-353,-356,-355,-366,-83,-494,-352,-351,-354,-365,-100,-493,-350,]),'ENDDECLARE':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,675,676,680,699,700,701,706,719,791,792,793,800,808,810,812,816,820,823,843,844,845,859,870,871,872,876,880,883,903,906,907,913,917,932,933,936,939,941,943,952,954,955,956,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,763,-408,-497,-307,-308,-313,-322,-349,-306,-314,-316,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-323,-340,-344,-343,-346,-363,-543,-311,-312,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'ELSE':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,704,706,719,791,792,793,795,797,800,808,810,812,816,820,823,843,844,845,859,864,870,871,872,876,880,883,903,906,907,913,917,932,933,936,939,941,943,952,954,955,956,962,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,702,-339,-408,-497,702,-308,-313,798,-322,-349,-306,-314,-316,798,-317,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-318,-323,-340,-344,-343,-346,-363,-543,-311,-312,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-319,-350,]),'ELSEIF':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,704,706,719,791,792,793,795,797,800,808,810,812,816,820,823,843,844,845,859,864,870,871,872,876,880,883,903,906,907,913,917,932,933,936,939,941,943,952,954,955,956,962,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,703,-339,-408,-497,703,-308,-313,799,-322,-349,-306,-314,-316,799,-317,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-318,-323,-340,-344,-343,-346,-363,-543,-311,-312,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-319,-350,]),'ENDWHILE':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,706,713,719,791,792,793,800,808,810,812,816,820,823,843,844,845,859,870,871,872,876,880,883,903,906,907,913,917,932,933,936,939,941,943,952,954,955,956,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,-408,-497,-307,-308,-313,-322,809,-349,-306,-314,-316,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-323,-340,-344,-343,-346,-363,-543,-311,-312,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'ENDFOR':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,706,719,791,792,793,800,808,810,812,816,818,820,823,843,844,845,859,870,871,872,874,876,878,880,882,883,903,906,907,911,913,915,917,918,932,933,936,937,939,941,943,952,954,955,956,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,-408,-497,-307,-308,-313,-322,-349,-306,-314,-316,-321,-324,-341,-345,-348,879,-347,-364,-395,-400,-441,-544,-323,-340,-344,912,-343,916,-346,919,-363,-543,-311,-312,935,-342,938,-357,940,-315,-310,-353,953,-356,-355,-366,-352,-351,-354,-365,-350,]),'CASE':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,603,604,605,676,680,699,700,701,706,707,708,719,791,792,793,800,804,805,806,808,810,812,816,820,823,843,844,845,859,868,869,870,871,872,876,880,883,903,906,907,910,913,917,932,933,936,939,941,943,952,954,955,956,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,709,709,-339,-408,-497,-307,-308,-313,-322,709,709,-349,-306,-314,-316,-321,-332,-333,-334,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-330,-331,-323,-340,-344,-343,-346,-363,-543,-311,-312,-329,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'DEFAULT':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,603,604,605,676,680,699,700,701,706,707,708,719,791,792,793,800,804,805,806,808,810,812,816,820,823,843,844,845,859,868,869,870,871,872,876,880,883,903,906,907,910,913,917,932,933,936,939,941,943,952,954,955,956,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,710,710,-339,-408,-497,-307,-308,-313,-322,710,710,-349,-306,-314,-316,-321,-332,-333,-334,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-330,-331,-323,-340,-344,-343,-346,-363,-543,-311,-312,-329,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'ENDSWITCH':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,604,605,676,680,699,700,701,706,707,708,711,719,791,792,793,800,801,802,804,805,806,808,810,812,816,820,823,843,844,845,859,868,869,870,871,872,876,880,883,903,906,907,910,913,917,932,933,936,939,941,943,952,954,955,956,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,712,-339,-408,-497,-307,-308,-313,-322,-326,-328,807,-349,-306,-314,-316,-321,-325,-327,-332,-333,-334,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-330,-331,-323,-340,-344,-343,-346,-363,-543,-311,-312,-329,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'ENDFOREACH':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,706,719,791,792,793,800,808,810,812,816,820,823,843,844,845,859,870,871,872,876,880,883,885,903,906,907,913,917,920,932,933,936,939,941,943,952,954,955,956,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,-408,-497,-307,-308,-313,-322,-349,-306,-314,-316,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,-323,-340,-344,-343,-346,-363,921,-543,-311,-312,-342,-357,942,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-350,]),'ENDIF':([12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,95,97,98,99,108,137,246,247,248,249,256,266,274,276,282,286,302,303,305,306,307,401,402,403,445,556,558,566,580,601,605,676,680,699,700,701,706,719,791,792,793,795,796,797,800,808,810,812,816,820,823,843,844,845,859,862,864,870,871,872,876,880,883,903,906,907,908,913,917,932,933,936,939,941,943,952,954,955,956,962,963,],[-299,-278,-279,-280,-281,-282,-283,-284,-285,-286,-287,-288,-289,-290,-291,-292,-293,-294,-295,-296,-303,-304,-305,-335,-336,-337,-338,-372,-373,-374,-375,-376,-300,-298,-301,-302,-410,-379,-297,-390,-391,-393,-405,-463,-538,-539,-25,-17,-377,-378,-382,-386,-389,-392,-394,-398,-542,-399,-303,-409,-508,-309,-339,-408,-497,-307,-308,-313,-322,-349,-306,-314,-316,863,865,-317,-321,-324,-341,-345,-348,-347,-364,-395,-400,-441,-544,905,-318,-323,-340,-344,-343,-346,-363,-543,-311,-312,-320,-342,-357,-315,-310,-353,-356,-355,-366,-352,-351,-354,-365,-319,-350,]),'DOUBLE_POINT':([33,60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,312,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,405,454,455,456,466,467,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,611,632,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,710,716,718,722,724,728,744,750,756,760,761,798,803,811,815,819,822,834,835,836,837,838,839,875,893,894,897,934,944,957,960,],[98,-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,468,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,557,602,604,606,-259,631,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,720,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,805,813,817,821,824,827,-221,-147,-97,-113,-114,866,805,873,877,881,884,-158,-159,-148,-149,-91,-98,914,827,-90,-101,951,-83,-94,-100,]),'LEFT_PARENTHESIS':([48,50,60,66,67,68,70,71,73,74,92,104,123,139,165,166,167,168,171,172,173,174,175,180,181,183,184,186,190,191,198,199,202,210,211,213,214,235,236,240,241,242,243,244,251,259,260,262,263,264,284,295,308,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,339,346,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,373,375,376,380,385,386,387,388,389,390,400,412,468,470,474,482,484,486,487,488,489,491,492,493,497,536,553,564,600,631,636,638,644,645,648,649,652,653,654,655,663,666,667,668,703,750,760,761,799,833,834,835,836,837,848,849,895,],[101,104,-563,129,130,131,133,134,139,139,169,258,-43,139,-50,-60,-61,332,-54,-55,-56,-57,-58,348,349,-52,-53,-553,351,-68,-176,-177,371,371,371,384,-178,258,258,396,397,398,399,400,404,258,-81,348,-52,-53,-44,457,465,169,169,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,169,371,258,371,371,-86,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,371,-52,348,-53,384,-87,537,538,-110,-111,-112,258,-82,371,258,371,258,-51,371,-146,641,-145,643,-145,-146,-122,656,258,-51,-45,371,258,258,-133,-134,-135,-136,-137,-138,-121,-51,-116,-115,-118,-117,794,-147,-113,-114,867,258,-158,-159,-148,-149,898,899,924,]),'NAME':([56,57,60,116,117,118,119,120,275,280,336,337,413,448,451,533,543,597,598,599,694,695,696,697,698,786,787,789,856,858,860,],[114,-548,-563,-548,114,-547,-555,-556,444,114,489,492,492,-552,444,489,492,-554,444,-546,114,-546,-560,114,-545,114,-557,-561,-559,-558,-562,]),'NS_SEPARATOR':([57,112,114,116,119,120,281,444,450,785,790,],[118,275,-15,118,-555,-556,451,-16,598,275,275,]),'VARIABLE':([58,59,60,61,62,63,64,65,79,86,87,88,90,91,92,97,104,121,122,123,124,125,126,127,147,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,238,239,242,243,246,259,260,283,284,287,288,289,291,309,310,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,336,337,339,346,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,375,376,379,380,381,382,383,386,388,389,390,392,393,400,412,413,415,430,434,435,436,439,440,441,442,453,465,466,468,469,470,471,472,473,474,482,484,485,486,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,533,534,535,541,543,544,545,546,553,554,555,583,584,591,592,593,594,600,622,623,624,625,626,627,628,631,632,633,634,636,638,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,684,729,730,731,733,734,735,736,737,738,739,740,741,742,743,744,750,755,756,760,761,773,775,828,830,831,833,834,835,836,837,839,888,889,891,897,898,922,924,944,945,946,958,959,960,964,],[123,127,-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,123,-298,123,123,-26,-43,123,127,-18,-23,-412,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-176,-177,-186,-184,123,-181,-171,-172,-173,-174,-169,123,123,-167,123,-178,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,123,123,123,-66,-67,-75,-77,-297,123,-81,-27,-44,-19,-20,-22,-267,-265,-263,123,123,-150,-151,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,123,123,123,123,123,123,123,-86,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-185,-28,-32,-62,-65,123,123,-175,-179,-168,-99,-110,-111,-112,-152,-153,123,-82,123,-277,585,-469,-473,-535,-474,-475,-476,-477,-21,-425,-259,123,-226,123,-242,-227,-219,123,123,-42,-180,123,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,123,-182,-170,123,123,123,123,-154,123,674,-396,585,-478,-470,-472,-471,-534,-45,-425,-414,-415,-416,-419,-413,-424,123,-222,-241,-217,123,123,-215,-133,-134,-135,-136,-137,-138,-121,-42,-425,-116,-115,-118,-117,-73,-74,-76,-78,-79,-479,-417,-413,-418,830,-426,-429,-430,-431,-432,-433,-434,-435,-436,-437,-221,-147,-425,-97,-113,-114,-473,-480,830,-439,891,123,-158,-159,-148,-149,-98,-420,-438,-421,-101,-425,-440,-87,-83,-87,959,964,-95,-100,-96,]),'DOLLAR':([58,92,104,121,122,123,124,165,166,167,171,172,173,174,175,198,199,202,210,211,213,214,234,235,236,259,260,283,284,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,336,337,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,379,380,400,412,413,468,470,474,482,486,487,491,492,493,533,541,543,544,545,553,600,631,636,638,644,645,648,649,652,653,750,833,834,835,836,837,],[124,124,124,124,-26,-43,124,-59,-60,-61,-54,-55,-56,-57,-58,-176,-177,124,124,124,124,-178,124,124,124,124,-81,-27,-44,124,124,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-82,124,124,124,124,124,124,-157,-144,-145,-146,124,124,124,124,124,124,-45,124,124,124,-133,-134,-135,-136,-137,-138,-147,124,-158,-159,-148,-149,]),'EQUAL':([60,97,107,123,127,162,163,165,166,167,171,172,173,174,175,180,183,184,186,191,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,585,600,633,635,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,830,834,835,836,837,839,897,944,960,],[-563,-298,268,-43,290,313,329,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,353,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,532,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,353,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,687,-45,-241,-228,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,890,-158,-159,-148,-149,-98,-101,-83,-100,]),'EXTENDS':([60,110,269,387,758,],[-563,272,418,418,418,]),'IMPLEMENTS':([60,186,269,387,416,417,539,540,570,758,840,],[-563,-553,-445,-105,569,-444,569,-104,-452,-105,569,]),'AS':([60,61,62,63,64,65,79,86,87,88,90,91,97,114,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,279,284,291,300,301,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,444,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,632,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,744,750,756,760,761,784,785,790,834,835,836,837,839,897,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-15,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,449,-44,-267,463,-367,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-16,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-221,-147,-97,-113,-114,855,449,449,-158,-159,-148,-149,-98,-101,-83,-100,]),'DOUBLE_COLON':([60,123,162,165,166,167,171,172,173,174,175,176,177,180,182,183,184,186,187,188,189,191,260,261,262,263,264,265,284,372,373,374,375,376,377,378,388,389,390,391,392,393,412,483,484,487,491,492,493,497,564,600,633,639,644,645,648,649,652,653,654,655,663,666,667,668,750,760,761,783,784,834,835,836,837,],[-563,-43,-46,-59,-60,-61,-54,-55,-56,-57,-58,336,-163,-162,-161,-48,-49,-553,-164,-165,-166,-68,-46,413,-162,-48,-49,-166,-44,-46,-48,533,-162,-49,-163,-166,541,544,-112,545,-46,-46,-46,-46,-47,-157,-144,-145,-146,-122,-47,-45,-46,-46,-133,-134,-135,-136,-137,-138,-121,-47,-116,-115,-118,-117,-147,-113,-114,854,-553,-158,-159,-148,-149,]),'DOUBLEASTERISK':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,372,373,375,376,383,386,388,389,390,392,393,484,487,489,491,492,493,497,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,380,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-28,-32,-62,-65,-168,-99,-110,-111,-112,-152,-153,-42,-157,-160,-144,-145,-146,-122,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'ASTERISK':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,367,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,367,367,367,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'DIVIDE':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,368,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,368,368,368,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'MODULO':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,369,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,369,369,369,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'PLUS':([60,92,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,375,376,381,382,383,386,388,389,390,392,393,468,474,484,485,486,487,489,491,492,493,497,523,524,525,526,527,528,529,530,534,535,546,600,631,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,198,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,364,-190,-176,-177,-186,-184,198,-181,-171,-172,-173,-174,-169,198,198,-167,-178,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,198,198,-150,-151,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,198,198,-42,-180,198,-157,-160,-144,-145,-146,-122,364,364,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,198,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'LESS':([60,92,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,375,376,381,382,383,386,388,389,390,392,393,468,474,484,485,486,487,489,491,492,493,497,523,524,525,526,527,528,529,530,534,535,546,600,631,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,199,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,365,-190,-176,-177,-186,-184,199,-181,-171,-172,-173,-174,-169,199,199,-167,-178,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,199,199,-150,-151,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,199,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,199,199,-42,-180,199,-157,-160,-144,-145,-146,-122,365,365,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,199,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'CONCAT':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,366,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,366,366,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'SL':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,362,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,362,362,362,362,362,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'SR':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,363,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,363,363,363,363,363,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'LESS_THAN':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,357,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,357,357,357,357,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'IS_SMALLER_OR_EQUAL':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,358,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,358,358,358,358,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'IS_GREATER_OR_EQUAL':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,359,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,359,359,359,359,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'GREATER_THAN_OR_EQUAL':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,360,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,360,360,360,360,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'SPACESHIP':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,361,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,361,361,361,361,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'IS_NOT_EQUAL':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,354,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,354,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'IS_IDENTICAL':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,355,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,355,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'IS_NOT_IDENTICAL':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,356,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,356,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'AMPERSAND':([60,61,62,63,64,65,77,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,179,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,313,315,316,332,335,351,370,372,373,375,376,381,382,383,385,386,388,389,390,392,393,415,463,465,466,469,471,472,473,484,485,487,489,491,492,493,496,497,499,502,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,532,534,535,546,588,600,615,622,623,624,625,626,627,628,632,633,634,636,638,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,689,725,729,730,731,732,734,735,736,737,738,739,740,741,742,743,744,750,755,756,760,761,830,833,834,835,836,837,839,888,889,891,897,898,922,924,944,945,959,960,964,],[-563,-268,-269,-270,-271,-272,147,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,335,-54,-55,-56,-57,-58,-214,346,-62,-32,-65,-212,-553,-68,352,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,470,-150,-151,482,486,346,-185,-28,-32,-62,-65,-175,-179,-168,346,-99,-110,-111,-112,-152,-153,-277,619,-425,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,346,346,352,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,470,-182,-170,-154,147,-45,619,-425,-414,-415,-416,-419,147,-424,-222,-241,335,482,482,-215,-133,-134,-135,-136,-137,-138,-121,-42,-425,-116,-115,-118,-117,-73,-74,-76,-78,-79,346,-368,-417,147,-418,147,-426,-429,-430,-431,-432,-433,-434,-435,-436,-437,-221,-147,-425,-97,-113,-114,-439,482,-158,-159,-148,-149,-98,-420,-438,-421,-101,-425,-440,346,-83,346,-95,-100,-96,]),'BITWISE_XOR':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,350,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,350,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'BITWISE_OR':([60,97,123,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,331,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,331,-59,-60,-61,-216,-54,-55,-56,-57,-58,339,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,474,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-217,339,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'COALESCE':([60,97,123,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,330,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'TERNARY_OPERATION':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,415,465,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,622,623,624,625,626,632,633,634,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,729,731,744,750,755,756,760,761,827,830,834,835,836,837,839,888,889,891,897,898,922,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,312,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-277,630,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,630,630,-415,-416,-419,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,630,-116,-115,-118,-117,-73,-74,-76,-78,-79,-417,-418,-221,-147,630,-97,-113,-114,630,-439,-158,-159,-148,-149,-98,-420,-438,-421,-101,630,-440,-83,-100,]),'AND':([60,86,87,88,90,91,97,123,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,632,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,744,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,153,-262,-260,-256,-257,-298,-43,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,153,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-221,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'XOR':([60,79,86,87,88,90,91,97,123,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,632,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,744,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,148,-264,-262,-260,-256,-257,-298,-43,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,148,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-221,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'OR':([60,61,79,86,87,88,90,91,97,123,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,632,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,744,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,128,-266,-264,-262,-260,-256,-257,-298,-43,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-221,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'RIGHT_PARENTHESIS':([60,61,62,63,64,65,79,86,87,88,90,91,97,108,123,138,140,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,252,259,260,284,291,292,293,294,299,304,309,310,315,316,333,341,342,343,348,349,351,370,371,372,373,375,376,381,382,383,386,388,389,390,392,393,398,399,409,410,412,415,459,464,465,466,469,471,472,473,475,476,477,478,479,481,483,484,485,487,489,491,492,493,495,496,497,498,500,501,503,504,505,506,507,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,534,535,537,538,546,547,548,549,550,551,552,553,559,560,561,562,563,586,600,607,608,610,612,613,614,616,620,621,622,623,624,625,626,632,633,634,635,637,639,640,641,642,643,644,645,646,648,649,650,651,652,653,654,655,656,657,658,659,660,663,665,666,667,668,669,670,671,672,673,674,683,688,690,692,715,717,721,723,726,727,729,731,744,745,747,748,749,750,751,752,753,754,755,756,757,759,760,761,766,767,768,769,770,771,772,814,830,832,834,835,836,837,839,841,842,846,847,850,861,888,889,891,892,897,898,899,909,922,925,926,944,945,947,949,959,960,961,964,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-410,-43,-380,-385,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,334,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,405,411,-81,-44,-267,454,455,456,-361,464,-265,-263,-150,-151,484,-123,-125,-127,-103,-103,-124,-185,334,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-120,-120,564,565,-82,-277,611,-381,-496,-259,-226,-242,-227,-219,635,-229,-231,-233,-232,-238,-240,-42,-180,-157,-160,-144,-145,-146,645,-213,-122,-126,-129,-132,648,649,-139,-141,-142,652,653,-211,654,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,655,-182,-170,-103,-103,-154,669,670,671,-119,672,673,-80,-402,-65,-68,-403,-404,-484,-45,714,716,718,-360,722,-362,724,-371,728,-495,-414,-415,-416,-419,-222,-241,-217,-228,-230,-239,-215,-103,750,-103,-133,-134,-128,-135,-136,-140,-143,-137,-138,-121,-42,-89,756,-102,758,-102,-116,761,-115,-118,-117,-73,-74,-76,-78,-79,762,-468,-485,-520,-523,811,815,819,822,-369,-370,-417,-418,-221,-235,-236,834,835,-147,836,837,-130,838,-88,-97,839,-109,-113,-114,-455,-457,-458,-459,-460,-461,-462,875,-439,-234,-158,-159,-148,-149,-98,897,-108,-456,-464,-524,904,-420,-438,-421,-237,-101,-496,927,934,-440,-109,948,-83,957,960,-494,-95,-100,-493,-96,]),'COLON':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,259,260,284,291,298,299,309,310,315,316,332,342,343,370,372,373,375,376,381,382,383,386,388,389,390,392,393,412,461,466,469,471,472,473,476,477,478,479,481,483,484,485,487,489,491,492,493,496,497,500,501,505,506,507,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,612,614,632,633,634,635,639,640,644,645,646,648,649,650,651,652,653,654,655,658,663,666,667,668,669,670,671,672,673,744,745,747,750,753,756,760,761,832,834,835,836,837,839,892,897,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,410,-81,-44,-267,462,-361,-265,-263,-150,-151,478,498,499,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-82,462,-259,-226,-242,-227,-219,636,637,-233,-232,-238,-240,-42,-180,-157,-160,-144,-145,-146,-213,-122,-129,-132,-139,-141,-142,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,462,-362,-222,-241,-217,-228,-239,-215,-133,-134,-128,-135,-136,-140,-143,-137,-138,-121,-42,757,-116,-115,-118,-117,-73,-74,-76,-78,-79,-221,832,-236,-147,-130,-97,-113,-114,-234,-158,-159,-148,-149,-98,-237,-101,-83,-100,]),'ARROW':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,177,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,260,263,264,284,291,309,310,315,316,345,347,370,372,373,375,376,377,381,382,383,386,388,389,390,392,393,412,466,469,471,472,473,483,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,564,600,632,633,634,639,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,744,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,337,-214,-62,-32,-49,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-46,-48,-49,-44,-267,-265,-263,-150,-151,502,-131,-185,-28,-32,-62,-49,337,-175,-179,-168,-99,-110,543,-112,-46,-46,-46,-259,-226,-242,-227,-219,-46,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-47,-45,-222,-46,-217,-46,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-221,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'DOUBLE_ARROW':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,466,469,471,472,473,480,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,617,632,633,634,640,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,744,746,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,311,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-259,-226,-242,-227,-219,638,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,725,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-221,833,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'ELLIPSIS':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,147,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,348,349,370,372,373,375,376,381,382,383,386,388,389,390,392,393,415,465,466,469,471,472,473,484,485,487,489,491,492,493,496,497,504,505,506,507,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,537,538,546,600,623,625,627,628,632,633,634,640,641,643,644,645,648,649,650,651,652,653,654,655,656,658,660,663,666,667,668,669,670,671,672,673,729,732,733,734,735,736,737,738,739,740,741,742,743,744,749,750,752,756,760,761,829,830,834,835,836,837,839,888,889,897,898,922,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-412,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,508,508,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-277,-425,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,508,-139,-141,-142,508,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,508,508,-154,-45,-425,-416,-413,-424,-222,-241,-217,-215,508,508,-133,-134,-135,-136,-140,-143,-137,-138,-121,-42,-425,508,508,-116,-115,-118,-117,-73,-74,-76,-78,-79,-417,-413,831,-426,-429,-430,-431,-432,-433,-434,-435,-436,-437,-221,508,-147,508,-97,-113,-114,831,-439,-158,-159,-148,-149,-98,-420,-438,-101,-425,-440,-83,-100,]),'ARRAY':([60,61,62,63,64,65,79,86,87,88,90,91,92,97,104,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,235,236,238,239,242,243,246,259,260,284,291,309,310,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,375,376,380,381,382,383,386,388,389,390,392,393,400,412,415,465,466,468,469,470,471,472,473,474,482,484,485,486,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,553,600,622,623,624,625,626,629,630,631,632,633,634,636,638,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,729,731,744,750,755,756,760,761,827,830,833,834,835,836,837,839,888,889,891,897,898,922,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,190,-298,190,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-176,-177,-186,-184,190,-181,-171,-172,-173,-174,-169,190,190,-167,190,-178,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,190,190,-66,-67,-75,-77,-297,190,-81,-44,-267,-265,-263,190,190,-150,-151,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,-185,-28,-32,-62,-65,190,-175,-179,-168,-99,-110,-111,-112,-152,-153,190,-82,-277,-428,-259,190,-226,190,-242,-227,-219,190,190,-42,-180,190,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,190,-45,-428,-414,-415,-416,-419,735,-427,190,-222,-241,-217,190,190,-215,-133,-134,-135,-136,-137,-138,-121,-42,-428,-116,-115,-118,-117,-73,-74,-76,-78,-79,-417,-418,-221,-147,-428,-97,-113,-114,-428,-439,190,-158,-159,-148,-149,-98,-420,-438,-421,-101,-428,-440,-83,-100,]),'CALLABLE':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,415,465,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,622,623,624,625,626,629,630,632,633,634,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,729,731,744,750,755,756,760,761,827,830,834,835,836,837,839,888,889,891,897,898,922,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-277,-428,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-428,-414,-415,-416,-419,736,-427,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-428,-116,-115,-118,-117,-73,-74,-76,-78,-79,-417,-418,-221,-147,-428,-97,-113,-114,-428,-439,-158,-159,-148,-149,-98,-420,-438,-421,-101,-428,-440,-83,-100,]),'ITERABLE':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,415,465,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,622,623,624,625,626,629,630,632,633,634,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,729,731,744,750,755,756,760,761,827,830,834,835,836,837,839,888,889,891,897,898,922,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-277,-428,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-428,-414,-415,-416,-419,737,-427,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-428,-116,-115,-118,-117,-73,-74,-76,-78,-79,-417,-418,-221,-147,-428,-97,-113,-114,-428,-439,-158,-159,-148,-149,-98,-420,-438,-421,-101,-428,-440,-83,-100,]),'BOOL':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,415,465,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,622,623,624,625,626,629,630,632,633,634,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,729,731,744,750,755,756,760,761,827,830,834,835,836,837,839,888,889,891,897,898,922,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-277,-428,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-428,-414,-415,-416,-419,740,-427,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-428,-116,-115,-118,-117,-73,-74,-76,-78,-79,-417,-418,-221,-147,-428,-97,-113,-114,-428,-439,-158,-159,-148,-149,-98,-420,-438,-421,-101,-428,-440,-83,-100,]),'FLOAT':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,415,465,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,622,623,624,625,626,629,630,632,633,634,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,729,731,744,750,755,756,760,761,827,830,834,835,836,837,839,888,889,891,897,898,922,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-277,-428,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-428,-414,-415,-416,-419,741,-427,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-428,-116,-115,-118,-117,-73,-74,-76,-78,-79,-417,-418,-221,-147,-428,-97,-113,-114,-428,-439,-158,-159,-148,-149,-98,-420,-438,-421,-101,-428,-440,-83,-100,]),'INT':([60,61,62,63,64,65,79,86,87,88,90,91,97,123,149,150,151,152,154,155,156,157,158,159,160,161,162,164,165,166,167,170,171,172,173,174,175,178,180,183,184,185,186,191,192,193,194,195,196,197,200,201,203,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,291,309,310,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,415,465,466,469,471,472,473,484,485,487,489,491,492,493,496,497,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,534,535,546,600,622,623,624,625,626,629,630,632,633,634,640,644,645,648,649,652,653,654,655,656,663,666,667,668,669,670,671,672,673,729,731,744,750,755,756,760,761,827,830,834,835,836,837,839,888,889,891,897,898,922,944,960,],[-563,-268,-269,-270,-271,-272,-266,-264,-262,-260,-256,-257,-298,-43,-273,-274,-275,-276,-261,-258,-256,-255,-223,-224,-225,-220,-28,-218,-59,-60,-61,-216,-54,-55,-56,-57,-58,-214,-62,-32,-65,-212,-553,-68,-210,-208,-203,-197,-194,-190,-186,-184,-181,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-267,-265,-263,-150,-151,-185,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-277,-428,-259,-226,-242,-227,-219,-42,-180,-157,-160,-144,-145,-146,-213,-122,-211,-209,-204,-205,-206,-207,-198,-199,-200,-201,-202,-195,-196,-191,-192,-193,-187,-188,-189,-182,-170,-154,-45,-428,-414,-415,-416,-419,742,-427,-222,-241,-217,-215,-133,-134,-135,-136,-137,-138,-121,-42,-428,-116,-115,-118,-117,-73,-74,-76,-78,-79,-417,-418,-221,-147,-428,-97,-113,-114,-428,-439,-158,-159,-148,-149,-98,-420,-438,-421,-101,-428,-440,-83,-100,]),'INSTANCEOF':([60,97,123,162,165,166,167,171,172,173,174,175,180,183,184,186,191,201,203,204,205,206,207,208,209,212,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,238,239,242,243,246,284,315,316,370,372,373,375,376,381,382,383,386,388,389,390,392,393,484,485,487,489,491,492,493,497,534,535,546,600,633,644,645,648,649,652,653,654,655,663,666,667,668,669,670,671,672,673,750,756,760,761,834,835,836,837,839,897,944,960,],[-563,-298,-43,-28,-59,-60,-61,-54,-55,-56,-57,-58,-62,-32,-65,-553,-68,-183,-181,379,-171,-172,-173,-174,-169,-167,-29,-30,-31,-33,-34,-35,-36,-37,-38,-39,-40,-41,-63,-64,-69,-70,-71,-72,-66,-67,-75,-77,-297,-44,-150,-151,-183,-28,-32,-62,-65,-175,-179,-168,-99,-110,-111,-112,-152,-153,-42,-180,-157,-160,-144,-145,-146,-122,-182,-170,-154,-45,-241,-133,-134,-135,-136,-137,-138,-121,-42,-116,-115,-118,-117,-73,-74,-76,-78,-79,-147,-97,-113,-114,-158,-159,-148,-149,-98,-101,-83,-100,]),'CONSTRUCT':([60,346,689,777,],[-563,-86,-87,848,]),'DESTRUCT':([60,346,689,777,],[-563,-86,-87,849,]),'INSTEADOF':([60,900,],[-563,928,]),'INTEGER_LITERAL':([73,74,139,],[138,138,138,]),'PUBLIC':([84,85,97,108,246,273,419,423,424,425,426,427,428,429,432,433,435,436,437,439,440,441,442,443,572,573,574,575,577,578,579,581,582,586,589,590,677,681,683,688,690,692,759,765,766,767,768,769,770,771,772,773,842,846,847,850,855,925,949,961,],[-450,-451,-298,-410,-297,439,439,439,-511,-513,-514,-515,-516,-517,439,-518,-490,439,-488,-474,-475,-476,-477,-492,439,-504,-506,-507,439,-490,-491,-512,-519,-484,-489,-490,439,-505,-468,-485,-520,-523,439,439,-455,-457,-458,-459,-460,-461,-462,-490,439,-456,-464,-524,439,439,-494,-493,]),'PROTECTED':([84,85,97,108,246,273,419,423,424,425,426,427,428,429,432,433,435,436,437,439,440,441,442,443,572,573,574,575,577,578,579,581,582,586,589,590,677,681,683,688,690,692,759,765,766,767,768,769,770,771,772,773,842,846,847,850,855,925,949,961,],[-450,-451,-298,-410,-297,440,440,440,-511,-513,-514,-515,-516,-517,440,-518,-490,440,-488,-474,-475,-476,-477,-492,440,-504,-506,-507,440,-490,-491,-512,-519,-484,-489,-490,440,-505,-468,-485,-520,-523,440,440,-455,-457,-458,-459,-460,-461,-462,-490,440,-456,-464,-524,440,440,-494,-493,]),'PRIVATE':([84,85,97,108,246,273,419,423,424,425,426,427,428,429,432,433,435,436,437,439,440,441,442,443,572,573,574,575,577,578,579,581,582,586,589,590,677,681,683,688,690,692,759,765,766,767,768,769,770,771,772,773,842,846,847,850,855,925,949,961,],[-450,-451,-298,-410,-297,441,441,441,-511,-513,-514,-515,-516,-517,441,-518,-490,441,-488,-474,-475,-476,-477,-492,441,-504,-506,-507,441,-490,-491,-512,-519,-484,-489,-490,441,-505,-468,-485,-520,-523,441,441,-455,-457,-458,-459,-460,-461,-462,-490,441,-456,-464,-524,441,441,-494,-493,]),'LIST':([92,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,332,463,615,636,638,725,833,],[168,168,168,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,168,168,168,168,168,168,-368,168,]),'SELF':([92,104,123,165,166,167,171,172,173,174,175,198,199,202,210,211,213,214,234,235,236,259,260,284,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,379,380,400,412,468,470,474,482,486,487,491,492,493,553,600,631,636,638,644,645,648,649,652,653,750,833,834,835,836,837,],[187,187,-43,-59,-60,-61,-54,-55,-56,-57,-58,-176,-177,187,187,187,187,-178,187,187,187,187,-81,-44,187,187,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,-82,187,187,187,187,187,-157,-144,-145,-146,187,-45,187,187,187,-133,-134,-135,-136,-137,-138,-147,187,-158,-159,-148,-149,]),'PARENT':([92,104,123,165,166,167,171,172,173,174,175,198,199,202,210,211,213,214,234,235,236,259,260,284,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,379,380,400,412,468,470,474,482,486,487,491,492,493,553,600,631,636,638,644,645,648,649,652,653,750,833,834,835,836,837,],[188,188,-43,-59,-60,-61,-54,-55,-56,-57,-58,-176,-177,188,188,188,188,-178,188,188,188,188,-81,-44,188,188,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,-82,188,188,188,188,188,-157,-144,-145,-146,188,-45,188,188,188,-133,-134,-135,-136,-137,-138,-147,188,-158,-159,-148,-149,]),'NEGATION':([92,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[202,202,202,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,]),'AT':([92,198,199,202,210,211,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[211,-176,-177,211,211,211,-178,211,211,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,]),'CLONE':([92,198,199,202,210,211,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[213,-176,-177,213,213,213,-178,213,213,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'BITWISE_NOT':([92,198,199,202,210,211,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[214,-176,-177,214,214,214,-178,214,214,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'NEW':([92,198,199,202,210,211,213,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[234,-176,-177,234,234,234,234,-178,234,234,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,]),'DOUBLEPLUS':([92,123,162,165,166,167,171,172,173,174,175,198,199,202,210,211,213,214,284,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,372,380,468,474,486,487,491,492,493,600,631,644,645,648,649,652,653,750,834,835,836,837,],[235,-43,315,-59,-60,-61,-54,-55,-56,-57,-58,-176,-177,235,235,235,235,-178,-44,235,235,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,315,235,235,235,235,-157,-144,-145,-146,-45,235,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'DOUBLELESS':([92,123,162,165,166,167,171,172,173,174,175,198,199,202,210,211,213,214,284,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,372,380,468,474,486,487,491,492,493,600,631,644,645,648,649,652,653,750,834,835,836,837,],[236,-43,316,-59,-60,-61,-54,-55,-56,-57,-58,-176,-177,236,236,236,236,-178,-44,236,236,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,316,236,236,236,236,-157,-144,-145,-146,-45,236,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'BACKTICK':([92,198,199,202,210,211,213,214,237,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,394,395,468,474,486,631,],[237,-176,-177,237,237,237,237,-178,-156,237,237,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,546,-155,237,237,237,237,]),'LNUMBER':([92,198,199,202,210,211,213,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,406,407,408,468,474,486,631,],[238,-176,-177,238,238,238,238,-178,238,238,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,]),'DNUMBER':([92,198,199,202,210,211,213,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,406,407,408,468,474,486,631,],[239,-176,-177,239,239,239,239,-178,239,239,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,]),'EMPTY':([92,198,199,202,210,211,213,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[240,-176,-177,240,240,240,240,-178,240,240,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,]),'EVAL':([92,198,199,202,210,211,213,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[241,-176,-177,241,241,241,241,-178,241,241,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,]),'EXIT':([92,198,199,202,210,211,213,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[242,-176,-177,242,242,242,242,-178,242,242,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,]),'DIE':([92,198,199,202,210,211,213,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[243,-176,-177,243,243,243,243,-178,243,243,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,]),'ISSET':([92,198,199,202,210,211,213,214,313,314,317,318,319,320,321,322,323,324,325,326,327,328,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[244,-176,-177,244,244,244,244,-178,244,244,-243,-244,-245,-246,-247,-248,-249,-250,-251,-252,-253,-254,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,]),'FINALLY':([97,100,246,247,249,402,843,],[-298,250,-297,250,-393,-394,-395,]),'CATCH':([97,100,246,247,249,402,843,],[-298,251,-297,251,-393,-394,-395,]),'VAR':([97,108,246,273,423,424,425,426,427,428,429,433,581,582,586,677,683,688,690,692,759,765,766,767,768,769,770,771,772,842,846,847,850,925,949,961,],[-298,-410,-297,434,434,-511,-513,-514,-515,-516,-517,-518,-512,-519,-484,434,-468,-485,-520,-523,434,434,-455,-457,-458,-459,-460,-461,-462,434,-456,-464,-524,434,-494,-493,]),'TICKS':([101,],[253,]),'ENCODING':([101,],[254,]),'STRICT_TYPES':([101,],[255,]),'POW_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,317,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'MUL_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,318,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'DIV_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,319,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'MOD_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,320,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'PLUS_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,321,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'MINUS_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,322,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'CONCAT_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,323,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'SL_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,324,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'SR_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,325,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'AND_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,326,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'XOR_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,327,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'OR_EQUAL':([123,162,165,166,167,171,172,173,174,175,284,487,491,492,493,600,644,645,648,649,652,653,750,834,835,836,837,],[-43,328,-59,-60,-61,-54,-55,-56,-57,-58,-44,-157,-144,-145,-146,-45,-133,-134,-135,-136,-137,-138,-147,-158,-159,-148,-149,]),'DQ_CHAR_SEQUENCE':([237,],[395,]),'EQUALS':([253,254,255,],[406,407,408,]),'VOID':([827,],[887,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'script':([0,],[1,]),'script_section':([0,1,],[2,6,]),'text_opt':([0,1,93,],[4,4,245,]),'start_tag':([4,],[7,]),'statement_list_opt':([7,],[10,]),'statement_list':([7,32,557,602,606,720,804,813,817,821,824,866,868,873,877,881,884,914,951,],[11,96,675,704,713,818,869,874,878,882,885,908,910,911,915,918,920,937,962,]),'statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[12,95,12,132,95,556,601,605,12,12,12,719,95,793,95,95,812,816,12,820,823,12,872,12,876,12,95,880,12,883,12,12,12,95,12,95,913,12,95,12,95,12,95,932,95,95,95,12,95,95,95,95,12,95,]),'compound_statement':([7,11,32,47,52,69,96,113,250,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,762,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,923,927,937,948,951,962,],[13,13,13,100,108,13,13,276,403,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,843,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,944,949,13,961,13,13,]),'named_label_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'expression_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'selection_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'iteration_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'jump_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'declare_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'echo_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'unset_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'const_declaration':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'function_definition':([7,11,32,69,96,405,431,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[24,24,24,24,24,24,586,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'class_declaration':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'interface_declaration':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'trait_declaration':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'namespace_definition':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'namespace_use_declaration':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'global_declaration':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'function_static_declaration':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'name':([7,11,32,51,54,55,69,72,92,96,104,105,109,115,146,202,210,211,213,234,235,236,259,271,272,277,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,379,380,400,404,405,418,438,449,454,456,468,470,474,482,486,553,557,568,569,588,595,602,606,611,629,631,636,638,662,675,682,693,702,704,713,716,718,720,722,724,774,779,804,811,813,815,817,818,819,821,822,824,833,854,866,868,869,873,874,875,877,878,881,882,884,885,901,902,904,908,910,911,914,915,918,920,928,937,950,951,962,],[33,33,33,107,110,111,33,135,186,33,186,107,269,186,308,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,33,186,186,597,33,33,186,186,186,186,186,186,33,186,186,689,186,33,33,33,186,186,186,186,186,33,107,784,33,33,33,33,33,33,33,33,107,784,33,33,33,33,33,33,33,33,33,33,186,900,33,33,33,33,33,33,33,33,33,33,33,33,929,930,33,33,33,33,33,33,33,33,186,33,186,33,33,]),'expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,96,102,129,130,131,133,134,139,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[34,34,34,103,34,140,140,144,145,149,150,151,152,34,257,292,293,294,299,301,140,333,347,409,415,452,415,299,467,480,495,501,507,507,347,531,531,547,548,550,550,34,34,34,607,299,299,614,617,642,347,507,651,507,507,507,665,34,34,34,299,34,299,726,727,746,507,507,501,507,507,34,415,34,34,803,34,34,299,34,34,34,34,507,507,861,34,34,34,34,34,34,34,34,34,34,34,909,34,34,34,34,34,34,34,34,34,34,34,415,34,34,34,34,34,34,34,34,34,34,34,]),'if_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'switch_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'while_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'do_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'for_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'foreach_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'goto_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'continue_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'break_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'return_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'throw_statement':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'function_definition_header':([7,11,32,69,96,405,431,432,454,456,557,577,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[52,52,52,52,52,52,52,587,52,52,52,587,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'class_modifieropt':([7,11,32,69,96,405,454,456,557,602,606,611,675,702,704,713,716,718,720,722,724,804,811,813,815,817,818,819,821,822,824,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,937,951,962,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'logical_inc_OR_expression_2':([7,11,32,49,69,73,74,75,76,80,81,82,83,96,102,129,130,131,133,134,139,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'include_expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,96,102,129,130,131,133,134,139,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'include_once_expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,96,102,129,130,131,133,134,139,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'require_expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,96,102,129,130,131,133,134,139,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'require_once_expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,96,102,129,130,131,133,134,139,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'class_modifier':([7,11,32,69,96,273,405,419,423,432,454,456,557,572,577,602,606,611,675,677,702,704,713,716,718,720,722,724,759,765,804,811,813,815,817,818,819,821,822,824,842,866,868,869,873,874,875,877,878,881,882,884,885,904,908,910,911,914,915,918,920,925,937,951,962,],[78,78,78,78,78,443,78,443,443,443,78,78,78,443,443,78,78,78,78,443,78,78,78,78,78,78,78,78,443,443,78,78,78,78,78,78,78,78,78,78,443,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,443,78,78,78,]),'logical_exc_OR_expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,96,102,128,129,130,131,133,134,139,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,291,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'logical_AND_expression_2':([7,11,32,49,69,73,74,75,76,80,81,82,83,96,102,128,129,130,131,133,134,139,148,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,309,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'print_expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,89,96,102,128,129,130,131,133,134,139,148,169,179,258,268,285,290,297,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[87,87,87,87,87,87,87,87,87,87,87,87,87,154,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'yield_expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,89,91,96,102,128,129,130,131,133,134,139,148,153,169,179,258,268,285,290,297,311,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,155,88,88,88,88,88,88,88,88,88,88,310,88,88,88,88,88,88,88,466,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'yield_from_expression':([7,11,32,49,69,73,74,75,76,80,81,82,83,89,91,96,102,128,129,130,131,133,134,139,148,153,169,179,258,268,285,290,297,311,312,332,338,344,348,349,351,371,384,396,397,398,399,405,454,456,457,458,459,462,463,490,499,504,508,510,537,538,542,557,602,606,608,611,613,618,619,637,641,643,647,658,660,675,687,702,704,709,713,716,717,718,720,722,724,749,752,794,804,811,813,815,817,818,819,821,822,824,866,867,868,869,873,874,875,877,878,881,882,884,885,890,904,908,910,911,914,915,918,920,937,951,962,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,156,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'end_tag_opt':([10,],[93,]),'expression_list':([49,],[102,]),'const_elements':([51,682,],[105,774,]),'const_element':([51,105,682,774,],[106,267,106,267,]),'namespace_name':([56,117,280,694,697,786,],[112,281,450,785,790,785,]),'namespace_nameopt':([56,],[113,]),'namespace_function_or_constopt':([57,599,695,],[115,697,697,]),'namespace_function_or_const':([57,599,695,],[116,698,698,]),'NS_SEPARATORopt':([57,116,],[117,280,]),'variable_name_list':([58,],[121,]),'simple_variable':([58,92,104,121,124,202,210,211,213,234,235,236,259,313,314,329,330,332,334,336,337,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,379,380,400,413,468,470,474,482,486,533,541,543,544,545,553,631,636,638,833,],[122,171,171,283,284,171,171,171,171,390,171,171,171,171,171,171,171,171,171,487,493,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,390,171,171,487,171,171,171,171,171,487,663,493,667,668,171,171,171,171,171,]),'static_variable_name_list':([59,],[125,]),'static_variable_declaration':([59,125,],[126,287,]),'breakout_level':([73,74,139,],[136,142,304,]),'breakout_levelopt':([74,],[141,]),'expressionopt':([75,],[143,]),'ampersandopt':([77,588,627,730,732,],[146,146,733,828,829,]),'assignment_expression':([92,313,314,329,],[157,469,471,472,]),'conditional_expression':([92,313,314,329,],[158,158,158,158,]),'simple_assignment_expression':([92,313,314,329,],[159,159,159,159,]),'compound_assignment_expression':([92,313,314,329,],[160,160,160,160,]),'coalesce_expression':([92,313,314,329,330,468,631,],[161,161,161,161,473,632,744,]),'variable':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[162,260,372,372,372,372,392,393,412,162,162,162,372,483,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,372,260,372,633,372,639,372,412,372,483,483,483,]),'list_intrinsic':([92,313,314,329,332,463,615,636,638,833,],[163,163,163,163,481,620,620,481,481,481,]),'logical_inc_OR_expression_1':([92,313,314,329,330,468,631,],[164,164,164,164,164,164,164,]),'callable_variable':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'scoped_property_access_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'member_access_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'logical_AND_expression_1':([92,313,314,329,330,468,474,631,],[170,170,170,170,170,170,634,170,]),'subscript_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'member_call_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'scoped_call_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'function_call_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'scope_resolution_qualifier':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[176,261,374,374,374,374,261,261,261,176,176,176,374,261,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,374,261,374,261,374,261,374,261,374,261,261,261,]),'dereferencable_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[177,177,377,377,377,377,177,177,177,177,177,177,377,177,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,377,177,377,177,377,177,377,177,377,177,177,177,]),'bitwise_inc_OR_expression':([92,313,314,329,330,468,474,486,631,],[178,178,178,178,178,178,178,640,178,]),'qualified_name':([92,104,115,202,210,211,213,234,235,236,259,271,272,277,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,379,380,400,404,418,438,468,470,474,482,486,553,568,569,595,629,631,636,638,662,693,779,833,928,950,],[180,262,279,375,375,375,375,388,262,262,262,420,421,279,180,180,180,375,262,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,375,388,375,262,555,570,596,375,262,375,262,375,262,678,679,691,739,375,262,262,678,783,783,262,596,691,]),'callable_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,]),'relative_scope':([92,104,202,210,211,213,234,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,379,380,400,468,470,474,482,486,553,631,636,638,833,],[182,182,182,182,182,182,391,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,391,182,182,182,182,182,182,182,182,182,182,182,182,]),'array_creation_expression':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,468,470,474,482,486,553,631,636,638,833,],[183,263,373,373,373,373,263,263,263,183,183,183,373,263,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,373,263,373,263,373,263,373,263,373,263,263,263,]),'string_literal':([92,104,202,210,211,213,235,236,259,313,314,329,330,332,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,400,406,407,408,468,470,474,482,486,553,631,636,638,833,],[184,264,376,376,376,376,264,264,264,184,184,184,376,264,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,264,560,560,560,376,264,376,264,376,264,376,264,264,264,]),'bitwise_exc_OR_expression':([92,313,314,329,330,339,468,474,486,631,],[185,185,185,185,185,496,185,185,185,185,]),'bitwise_AND_expression':([92,313,314,329,330,339,350,468,474,486,631,],[192,192,192,192,192,192,511,192,192,192,192,]),'equality_expression':([92,313,314,329,330,339,350,352,468,474,486,631,],[193,193,193,193,193,193,193,513,193,193,193,193,]),'relational_expression':([92,313,314,329,330,339,350,352,353,354,355,356,468,474,486,631,],[194,194,194,194,194,194,194,194,514,515,516,517,194,194,194,194,]),'shift_expression':([92,313,314,329,330,339,350,352,353,354,355,356,357,358,359,360,361,468,474,486,631,],[195,195,195,195,195,195,195,195,195,195,195,195,518,519,520,521,522,195,195,195,195,]),'additive_expression':([92,313,314,329,330,339,350,352,353,354,355,356,357,358,359,360,361,362,363,468,474,486,631,],[196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,196,523,524,196,196,196,196,]),'multiplicative_expression':([92,313,314,329,330,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,468,474,486,631,],[197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,197,525,526,527,197,197,197,197,]),'logical_not_expression':([92,313,314,329,330,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,528,529,530,200,200,200,200,]),'instanceof_expression':([92,202,313,314,329,330,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[201,370,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,]),'unary_expression':([92,202,210,211,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[203,203,381,382,203,203,203,203,485,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,]),'instanceof_subj':([92,202,313,314,329,330,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,]),'exponentiation_expression':([92,202,210,211,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,535,205,205,205,205,]),'unary_op_expression':([92,202,210,211,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,]),'error_control_expression':([92,202,210,211,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,]),'cast_expression':([92,202,210,211,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,]),'clone_expression':([92,202,210,211,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'unary_operator':([92,202,210,211,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,468,474,486,631,],[210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,]),'primary_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[212,212,212,212,383,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'class_constant_access_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'constant_access_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,]),'literal':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,406,407,408,468,474,486,631,],[217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,559,562,563,217,217,217,217,]),'intrinsic':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,]),'anonymous_function_creation_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,]),'object_creation_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,]),'postfix_increment_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,]),'postfix_decrement_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,]),'prefix_increment_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,]),'prefix_decrement_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,]),'byref_assignment_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,]),'shell_command_expression':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,]),'integer_literal':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,406,407,408,468,474,486,631,],[227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,]),'floating_literal':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,406,407,408,468,474,486,631,],[228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,]),'empty_intrinsic':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,]),'eval_intrinsic':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,]),'exit_intrinsic':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,]),'isset_intrinsic':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,]),'static_opt':([92,202,210,211,213,313,314,329,330,334,339,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,380,468,474,486,631,],[233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,]),'catch_clauses':([100,],[247,]),'finally_clause':([100,247,],[248,401,]),'catch_clause':([100,247,],[249,402,]),'declare_directive':([101,],[252,]),'variable_list':([104,400,],[259,553,]),'interface_base_clauseopt':([110,],[270,]),'interface_base_clause':([110,],[271,]),'namespace_use_clauses':([115,],[277,]),'namespace_use_clause':([115,277,],[278,446,]),'function_static_initializer_opt':([127,],[288,]),'function_static_initializer':([127,],[289,]),'for_initializer':([133,],[296,]),'for_expression_group':([133,297,458,459,608,613,717,],[298,461,461,612,612,612,612,]),'foreach_collection_name':([134,],[300,]),'compound_assignment_operator':([162,],[314,]),'array_initializer_opt':([179,351,],[340,512,]),'array_initializer':([179,351,],[341,341,]),'array_initializer_list':([179,351,],[342,342,]),'array_element_initializer':([179,351,499,],[343,343,646,]),'AMPERSAND_opt':([179,351,385,463,499,502,615,689,924,945,],[344,344,536,618,344,647,618,777,946,958,]),'element_key':([179,351,499,],[345,345,345,]),'class_type_designator':([234,379,],[386,534,]),'new_variable':([234,379,],[389,389,]),'dq_char_sequence_opt':([237,],[394,]),'constant_expression':([268,290,687,890,],[414,453,776,922,]),'class_base_clauseopt':([269,],[416,]),'class_base_clause':([269,387,758,],[417,540,540,]),'trait_member_declarationsopt':([273,],[422,]),'trait_member_declarations':([273,],[423,]),'trait_member_declaration':([273,423,],[424,581,]),'property_declaration':([273,423,677,759,765,842,925,],[425,425,768,768,768,768,768,]),'method_declaration':([273,419,423,572,677,759,765,842,925,],[426,575,426,575,769,769,769,769,769,]),'constructor_declaration':([273,423,677,759,765,842,925,],[427,427,770,770,770,770,770,]),'destructor_declaration':([273,423,677,759,765,842,925,],[428,428,771,771,771,771,771,]),'trait_use_clauses':([273,423,],[429,429,]),'property_modifier':([273,423,677,759,765,842,925,],[430,430,430,430,430,430,430,]),'method_modifiersopt':([273,419,423,572,677,759,765,842,925,],[431,431,431,431,431,431,431,431,431,]),'method_modifiers':([273,419,423,572,677,759,765,842,925,],[432,577,432,577,432,432,432,432,432,]),'trait_use_clause':([273,423,429,677,759,765,842,925,],[433,433,582,772,772,772,772,772,]),'visibility_modifier':([273,419,423,432,436,572,577,677,759,765,842,855,925,],[435,578,435,590,594,578,590,773,773,773,773,902,773,]),'static_modifier':([273,419,423,432,435,572,577,677,759,765,773,842,925,],[436,579,436,579,592,579,579,436,436,436,592,436,436,]),'method_modifier':([273,419,423,432,572,577,677,759,765,842,925,],[437,437,437,589,437,589,437,437,437,437,437,]),'namespace_aliasing_clause_opt':([279,785,790,],[447,856,860,]),'namespace_aliasing_clause':([279,785,790,],[448,448,448,]),'for_control':([297,458,],[460,609,]),'list_expression_list':([332,],[475,]),'unkeyed_list_expression_list':([332,],[476,]),'keyed_list_expression_list':([332,],[477,]),'list_or_variable':([332,636,638,833,],[479,745,747,892,]),'member_name':([336,337,413,533,543,],[488,491,488,488,666,]),'expression_opt':([338,398,399,542,],[494,549,551,664,]),'element_value':([344,647,],[500,753,]),'argument_expression_list_opt':([348,349,537,538,641,643,],[503,509,657,659,748,751,]),'argument_expression_list':([348,349,537,538,641,643,],[504,510,658,660,749,752,]),'argument_expression':([348,349,504,510,537,538,641,643,658,660,749,752,],[505,505,650,650,505,505,505,505,650,650,650,650,]),'variadic_unpacking':([348,349,504,510,537,538,641,643,658,660,749,752,],[506,506,506,506,506,506,506,506,506,506,506,506,]),'class_base_clause_opt':([387,758,],[539,840,]),'variable_list_opt':([400,],[552,]),'catch_name_list':([404,],[554,]),'class_interface_clauseopt':([416,],[567,]),'class_interface_clause':([416,539,840,],[568,662,662,]),'interface_member_declarationsopt':([419,],[571,]),'interface_member_declarations':([419,],[572,]),'interface_member_declaration':([419,572,],[573,681,]),'class_const_declaration':([419,572,677,759,765,842,925,],[574,574,767,767,767,767,767,]),'visibility_modifier_opt':([419,436,572,677,759,765,842,855,925,],[576,593,576,576,576,576,576,901,576,]),'property_elements':([430,],[583,]),'property_element':([430,583,],[584,684,]),'static_modifieropt':([435,773,],[591,591,]),'trait_name_list':([438,928,],[595,950,]),'for_end_of_loop':([459,608,613,717,],[610,715,721,814,]),'foreach_key':([463,],[615,]),'foreach_value':([463,615,],[616,723,]),'parameter_declaration_listopt':([465,898,],[621,926,]),'parameter_declaration_list':([465,656,898,],[622,755,622,]),'simple_parameter_declaration_list':([465,656,898,],[623,623,623,]),'variadic_declaration_list':([465,656,898,],[624,624,624,]),'parameter_declaration':([465,622,656,755,898,],[625,729,625,729,625,]),'variadic_parameter':([465,623,656,898,],[626,731,626,626,]),'type_declarationopt':([465,622,623,656,755,898,],[627,730,732,627,730,627,]),'type_declaration':([465,622,623,656,755,827,898,],[628,628,628,628,628,886,628,]),'TERNARY_OPERATIONopt':([465,622,623,656,755,827,898,],[629,629,629,629,629,629,629,]),'class_interface_clause_opt':([539,840,],[661,896,]),'property_initializeropt':([585,],[685,]),'property_initializer':([585,],[686,]),'trait_use_specification':([595,],[690,]),'namespace_use_group_clauses_2':([599,],[695,]),'namespace_use_group_clause_2':([599,695,],[696,789,]),'elseif_clauses_1':([601,],[699,]),'else_clause_1':([601,699,],[700,791,]),'elseif_clause_1':([601,699,],[701,792,]),'case_statements':([603,604,707,708,],[705,711,801,802,]),'case_statement':([603,604,707,708,],[707,707,707,707,]),'default_statement':([603,604,707,708,],[708,708,708,708,]),'base_type_declaration':([629,],[734,]),'scalar_type':([629,],[738,]),'parameter_declaration_list_opt':([656,],[754,]),'class_member_declarationsopt':([677,],[764,]),'class_member_declarations':([677,759,925,],[765,842,842,]),'class_member_declaration':([677,759,765,842,925,],[766,766,846,846,766,]),'trait_select_and_alias_clausesopt':([693,],[778,]),'trait_select_and_alias_clauses':([693,],[779,]),'trait_select_and_alias_clause':([693,779,],[780,851,]),'trait_select_insteadof_clause':([693,779,],[781,781,]),'trait_alias_as_clause':([693,779,],[782,782,]),'namespace_use_group_clauses_1':([694,],[786,]),'namespace_use_group_clause_1':([694,786,],[787,858,]),'elseif_clauses_2':([704,],[795,]),'else_clause_2':([704,795,],[796,862,]),'elseif_clause_2':([704,795,],[797,864,]),'case_default_label_terminator':([710,803,],[804,868,]),'return_type_opt':([728,893,],[825,923,]),'return_type':([728,893,],[826,826,]),'class_member_declarations_opt':([759,925,],[841,947,]),'default_argument_specifieropt':([830,],[888,]),'default_argument_specifier':([830,],[889,]),'anonymous_function_use_clause_opt':([838,],[893,]),'anonymous_function_use_clause':([838,],[894,]),'nameopt':([902,],[931,]),'use_variable_name_list':([924,],[945,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> script_section','script',1,'p_script_one','Parcer.py',470),
  ('script -> WHITESPACE','script',1,'p_script_one','Parcer.py',471),
  ('script -> script script_section','script',2,'p_script_two','Parcer.py',474),
  ('script_section -> text_opt start_tag statement_list_opt end_tag_opt text_opt','script_section',5,'p_script_section','Parcer.py',477),
  ('text_opt -> STRING','text_opt',1,'p_text_opt','Parcer.py',480),
  ('text_opt -> <empty>','text_opt',0,'p_text_opt','Parcer.py',481),
  ('end_tag_opt -> CLOSE_TAG','end_tag_opt',1,'p_end_tag_opt','Parcer.py',484),
  ('end_tag_opt -> <empty>','end_tag_opt',0,'p_end_tag_opt','Parcer.py',485),
  ('statement_list_opt -> statement_list','statement_list_opt',1,'p_statement_list_opt','Parcer.py',488),
  ('statement_list_opt -> <empty>','statement_list_opt',0,'p_statement_list_opt','Parcer.py',489),
  ('start_tag -> OPEN_TAG','start_tag',1,'p_start_tag_php','Parcer.py',491),
  ('start_tag -> OPEN_TAG_WITH_ECHO','start_tag',1,'p_start_tag_echo','Parcer.py',494),
  ('end_tag -> CLOSE_TAG','end_tag',1,'p_end_tag','Parcer.py',497),
  ('end_tag -> <empty>','end_tag',0,'p_end_tag_empty','Parcer.py',500),
  ('namespace_name -> NAME','namespace_name',1,'p_namespace_name_one','Parcer.py',503),
  ('namespace_name -> namespace_name NS_SEPARATOR NAME','namespace_name',3,'p_namespace_name_two','Parcer.py',506),
  ('function_static_declaration -> STATIC static_variable_name_list SEMICOLON','function_static_declaration',3,'p_function_static_declaration','Parcer.py',514),
  ('static_variable_name_list -> static_variable_declaration','static_variable_name_list',1,'p_static_variable_name_list_single','Parcer.py',517),
  ('static_variable_name_list -> static_variable_name_list static_variable_declaration','static_variable_name_list',2,'p_static_variable_name_list_multiple','Parcer.py',520),
  ('static_variable_declaration -> VARIABLE function_static_initializer_opt','static_variable_declaration',2,'p_static_variable_declaration','Parcer.py',523),
  ('function_static_initializer -> EQUAL constant_expression','function_static_initializer',2,'p_function_static_initializer','Parcer.py',526),
  ('function_static_initializer_opt -> function_static_initializer','function_static_initializer_opt',1,'p_function_static_initializer_opt','Parcer.py',530),
  ('function_static_initializer_opt -> <empty>','function_static_initializer_opt',0,'p_function_static_initializer_opt','Parcer.py',531),
  ('function_static_initializer_opt -> EQUAL constant_expression','function_static_initializer_opt',2,'p_function_static_initializer_opt_1','Parcer.py',534),
  ('global_declaration -> GLOBAL variable_name_list SEMICOLON','global_declaration',3,'p_global_declaration','Parcer.py',537),
  ('variable_name_list -> simple_variable','variable_name_list',1,'p_variable_name_list_single','Parcer.py',540),
  ('variable_name_list -> variable_name_list simple_variable','variable_name_list',2,'p_variable_name_list_multiple','Parcer.py',543),
  ('primary_expression -> variable','primary_expression',1,'p_primary_expression_variable','Parcer.py',548),
  ('primary_expression -> class_constant_access_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',549),
  ('primary_expression -> constant_access_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',550),
  ('primary_expression -> literal','primary_expression',1,'p_primary_expression_variable','Parcer.py',551),
  ('primary_expression -> array_creation_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',552),
  ('primary_expression -> intrinsic','primary_expression',1,'p_primary_expression_variable','Parcer.py',553),
  ('primary_expression -> anonymous_function_creation_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',554),
  ('primary_expression -> object_creation_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',555),
  ('primary_expression -> postfix_increment_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',556),
  ('primary_expression -> postfix_decrement_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',557),
  ('primary_expression -> prefix_increment_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',558),
  ('primary_expression -> prefix_decrement_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',559),
  ('primary_expression -> byref_assignment_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',560),
  ('primary_expression -> shell_command_expression','primary_expression',1,'p_primary_expression_variable','Parcer.py',561),
  ('primary_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','primary_expression',3,'p_primary_expression_variable','Parcer.py',562),
  ('simple_variable -> VARIABLE','simple_variable',1,'p_simple_variable','Parcer.py',565),
  ('simple_variable -> DOLLAR simple_variable','simple_variable',2,'p_simple_variable','Parcer.py',566),
  ('simple_variable -> DOLLAR LEFT_CBRAC expression RIGHT_CBRAC','simple_variable',4,'p_simple_variable','Parcer.py',567),
  ('dereferencable_expression -> variable','dereferencable_expression',1,'p_dereferencable_expression','Parcer.py',570),
  ('dereferencable_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','dereferencable_expression',3,'p_dereferencable_expression','Parcer.py',571),
  ('dereferencable_expression -> array_creation_expression','dereferencable_expression',1,'p_dereferencable_expression','Parcer.py',572),
  ('dereferencable_expression -> string_literal','dereferencable_expression',1,'p_dereferencable_expression','Parcer.py',573),
  ('callable_expression -> callable_variable','callable_expression',1,'p_callable_expression','Parcer.py',576),
  ('callable_expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','callable_expression',3,'p_callable_expression','Parcer.py',577),
  ('callable_expression -> array_creation_expression','callable_expression',1,'p_callable_expression','Parcer.py',578),
  ('callable_expression -> string_literal','callable_expression',1,'p_callable_expression','Parcer.py',579),
  ('callable_variable -> simple_variable','callable_variable',1,'p_callable_variable','Parcer.py',582),
  ('callable_variable -> subscript_expression','callable_variable',1,'p_callable_variable','Parcer.py',583),
  ('callable_variable -> member_call_expression','callable_variable',1,'p_callable_variable','Parcer.py',584),
  ('callable_variable -> scoped_call_expression','callable_variable',1,'p_callable_variable','Parcer.py',585),
  ('callable_variable -> function_call_expression','callable_variable',1,'p_callable_variable','Parcer.py',586),
  ('variable -> callable_variable','variable',1,'p_variable','Parcer.py',589),
  ('variable -> scoped_property_access_expression','variable',1,'p_variable','Parcer.py',590),
  ('variable -> member_access_expression','variable',1,'p_variable','Parcer.py',591),
  ('constant_access_expression -> qualified_name','constant_access_expression',1,'p_constant_access_expression','Parcer.py',594),
  ('literal -> integer_literal','literal',1,'p_literal_integer','Parcer.py',597),
  ('literal -> floating_literal','literal',1,'p_literal_integer','Parcer.py',598),
  ('literal -> string_literal','literal',1,'p_literal_integer','Parcer.py',599),
  ('integer_literal -> LNUMBER','integer_literal',1,'p_integer_literal','Parcer.py',602),
  ('floating_literal -> DNUMBER','floating_literal',1,'p_floating_literal','Parcer.py',605),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','Parcer.py',608),
  ('intrinsic -> empty_intrinsic','intrinsic',1,'p_intrinsic','Parcer.py',611),
  ('intrinsic -> eval_intrinsic','intrinsic',1,'p_intrinsic','Parcer.py',612),
  ('intrinsic -> exit_intrinsic','intrinsic',1,'p_intrinsic','Parcer.py',613),
  ('intrinsic -> isset_intrinsic','intrinsic',1,'p_intrinsic','Parcer.py',614),
  ('empty_intrinsic -> EMPTY LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','empty_intrinsic',4,'p_empty_intrinsic','Parcer.py',617),
  ('eval_intrinsic -> EVAL LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','eval_intrinsic',4,'p_eval_intrinsic','Parcer.py',620),
  ('exit_intrinsic -> EXIT','exit_intrinsic',1,'p_exit_intrinsic','Parcer.py',623),
  ('exit_intrinsic -> EXIT LEFT_PARENTHESIS expression_opt RIGHT_PARENTHESIS','exit_intrinsic',4,'p_exit_intrinsic','Parcer.py',624),
  ('exit_intrinsic -> DIE','exit_intrinsic',1,'p_exit_intrinsic','Parcer.py',625),
  ('exit_intrinsic -> DIE LEFT_PARENTHESIS expression_opt RIGHT_PARENTHESIS','exit_intrinsic',4,'p_exit_intrinsic','Parcer.py',626),
  ('isset_intrinsic -> ISSET LEFT_PARENTHESIS variable_list_opt RIGHT_PARENTHESIS','isset_intrinsic',4,'p_intrinsic_isset','Parcer.py',629),
  ('variable_list_opt -> variable_list','variable_list_opt',1,'p_variable_list_opt','Parcer.py',632),
  ('variable_list -> variable','variable_list',1,'p_variable_list_single','Parcer.py',635),
  ('variable_list -> variable_list variable','variable_list',2,'p_variable_list_multiple','Parcer.py',638),
  ('anonymous_function_creation_expression -> static_opt FUNCTION AMPERSAND_opt LEFT_PARENTHESIS parameter_declaration_list_opt RIGHT_PARENTHESIS anonymous_function_use_clause_opt return_type_opt compound_statement','anonymous_function_creation_expression',9,'p_anonymous_function_creation_expression','Parcer.py',641),
  ('static_opt -> STATIC','static_opt',1,'p_static_opt','Parcer.py',644),
  ('static_opt -> <empty>','static_opt',0,'p_static_opt','Parcer.py',645),
  ('AMPERSAND_opt -> AMPERSAND','AMPERSAND_opt',1,'p_AMPERSAND_opt','Parcer.py',648),
  ('AMPERSAND_opt -> <empty>','AMPERSAND_opt',0,'p_AMPERSAND_opt','Parcer.py',649),
  ('parameter_declaration_list_opt -> parameter_declaration_list','parameter_declaration_list_opt',1,'p_parameter_declaration_list_opt','Parcer.py',652),
  ('parameter_declaration_list_opt -> <empty>','parameter_declaration_list_opt',0,'p_parameter_declaration_list_opt','Parcer.py',653),
  ('anonymous_function_use_clause_opt -> anonymous_function_use_clause','anonymous_function_use_clause_opt',1,'p_anonymous_function_use_clause_opt','Parcer.py',656),
  ('anonymous_function_use_clause_opt -> <empty>','anonymous_function_use_clause_opt',0,'p_anonymous_function_use_clause_opt','Parcer.py',657),
  ('return_type_opt -> return_type','return_type_opt',1,'p_return_type_opt','Parcer.py',660),
  ('return_type_opt -> <empty>','return_type_opt',0,'p_return_type_opt','Parcer.py',661),
  ('anonymous_function_use_clause -> USE LEFT_PARENTHESIS use_variable_name_list RIGHT_PARENTHESIS','anonymous_function_use_clause',4,'p_anonymous_function_use_clause','Parcer.py',664),
  ('use_variable_name_list -> AMPERSAND_opt VARIABLE','use_variable_name_list',2,'p_use_variable_name_list_single','Parcer.py',667),
  ('use_variable_name_list -> use_variable_name_list AMPERSAND_opt VARIABLE','use_variable_name_list',3,'p_use_variable_name_list_multiple','Parcer.py',670),
  ('object_creation_expression -> NEW class_type_designator LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS','object_creation_expression',5,'p_object_creation_expression','Parcer.py',673),
  ('object_creation_expression -> NEW class_type_designator LEFT_PARENTHESIS argument_expression_list COLON RIGHT_PARENTHESIS','object_creation_expression',6,'p_object_creation_expression','Parcer.py',674),
  ('object_creation_expression -> NEW class_type_designator','object_creation_expression',2,'p_object_creation_expression','Parcer.py',675),
  ('object_creation_expression -> NEW CLASS LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS class_base_clause_opt class_interface_clause_opt LEFT_CBRAC class_member_declarations_opt RIGHT_PARENTHESIS','object_creation_expression',10,'p_object_creation_expression','Parcer.py',676),
  ('object_creation_expression -> NEW CLASS class_base_clause_opt class_interface_clause_opt LEFT_CBRAC class_member_declarations_opt RIGHT_PARENTHESIS','object_creation_expression',7,'p_object_creation_expression','Parcer.py',677),
  ('argument_expression_list_opt -> argument_expression_list','argument_expression_list_opt',1,'p_argument_expression_list_opt','Parcer.py',680),
  ('argument_expression_list_opt -> <empty>','argument_expression_list_opt',0,'p_argument_expression_list_opt','Parcer.py',681),
  ('class_base_clause_opt -> class_base_clause','class_base_clause_opt',1,'p_class_base_clause_opt','Parcer.py',683),
  ('class_base_clause_opt -> <empty>','class_base_clause_opt',0,'p_class_base_clause_opt','Parcer.py',684),
  ('class_interface_clause_opt -> class_interface_clause','class_interface_clause_opt',1,'p_class_interface_clause_opt','Parcer.py',687),
  ('class_interface_clause_opt -> <empty>','class_interface_clause_opt',0,'p_class_interface_clause_opt','Parcer.py',688),
  ('class_member_declarations_opt -> class_member_declarations','class_member_declarations_opt',1,'p_class_member_declarations_opt','Parcer.py',690),
  ('class_member_declarations_opt -> <empty>','class_member_declarations_opt',0,'p_class_member_declarations_opt','Parcer.py',691),
  ('class_type_designator -> qualified_name','class_type_designator',1,'p_class_type_designator_qualified_name','Parcer.py',694),
  ('class_type_designator -> new_variable','class_type_designator',1,'p_class_type_designator_new_variable','Parcer.py',697),
  ('new_variable -> simple_variable','new_variable',1,'p_new_variable_simple_variable','Parcer.py',700),
  ('new_variable -> new_variable LEFT_CBRAC expression_opt RIGHT_CBRAC','new_variable',4,'p_new_variable','Parcer.py',703),
  ('new_variable -> new_variable LEFT_CBRAC expression RIGHT_PARENTHESIS','new_variable',4,'p_new_variable','Parcer.py',704),
  ('new_variable -> new_variable ARROW member_name','new_variable',3,'p_new_variable','Parcer.py',705),
  ('new_variable -> qualified_name DOUBLE_COLON simple_variable','new_variable',3,'p_new_variable','Parcer.py',706),
  ('new_variable -> relative_scope DOUBLE_COLON simple_variable','new_variable',3,'p_new_variable','Parcer.py',707),
  ('new_variable -> new_variable DOUBLE_COLON simple_variable','new_variable',3,'p_new_variable','Parcer.py',708),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt_1','Parcer.py',711),
  ('expression_opt -> <empty>','expression_opt',0,'p_expression_opt_1','Parcer.py',712),
  ('array_creation_expression -> ARRAY LEFT_PARENTHESIS array_initializer_opt RIGHT_PARENTHESIS','array_creation_expression',4,'p_array_creation_expression_array','Parcer.py',715),
  ('array_creation_expression -> LEFT_CBRAC array_initializer_opt RIGHT_CBRAC','array_creation_expression',3,'p_array_creation_expression_array','Parcer.py',716),
  ('array_initializer_opt -> array_initializer','array_initializer_opt',1,'p_array_initializer_opt','Parcer.py',719),
  ('array_initializer_opt -> <empty>','array_initializer_opt',0,'p_array_initializer_opt','Parcer.py',720),
  ('array_initializer -> array_initializer_list','array_initializer',1,'p_array_initializer','Parcer.py',723),
  ('array_initializer -> array_initializer_list COLON','array_initializer',2,'p_array_initializer','Parcer.py',724),
  ('array_initializer_list -> array_element_initializer','array_initializer_list',1,'p_array_initializer_list','Parcer.py',727),
  ('array_initializer_list -> array_element_initializer COLON array_element_initializer','array_initializer_list',3,'p_array_initializer_list','Parcer.py',728),
  ('array_element_initializer -> AMPERSAND_opt element_value','array_element_initializer',2,'p_array_element_initializer_single','Parcer.py',731),
  ('array_element_initializer -> element_key ARROW AMPERSAND_opt element_value','array_element_initializer',4,'p_array_element_initializer_key_value','Parcer.py',734),
  ('element_key -> expression','element_key',1,'p_element_key','Parcer.py',737),
  ('element_value -> expression','element_value',1,'p_element_value','Parcer.py',740),
  ('subscript_expression -> dereferencable_expression LEFT_CBRAC expression_opt RIGHT_CBRAC','subscript_expression',4,'p_subscript_expression_brackets','Parcer.py',743),
  ('subscript_expression -> dereferencable_expression LEFT_CBRAC expression RIGHT_PARENTHESIS','subscript_expression',4,'p_subscript_expression_deprecated','Parcer.py',746),
  ('function_call_expression -> qualified_name LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS','function_call_expression',4,'p_function_call_expression_qualified_name','Parcer.py',749),
  ('function_call_expression -> qualified_name LEFT_PARENTHESIS argument_expression_list RIGHT_PARENTHESIS','function_call_expression',4,'p_function_call_expression_qualified_name','Parcer.py',750),
  ('function_call_expression -> callable_expression LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS','function_call_expression',4,'p_function_call_expression_callable_expression','Parcer.py',753),
  ('function_call_expression -> callable_expression LEFT_PARENTHESIS argument_expression_list RIGHT_PARENTHESIS','function_call_expression',4,'p_function_call_expression_callable_expression','Parcer.py',754),
  ('argument_expression_list -> argument_expression','argument_expression_list',1,'p_argument_expression_list_single','Parcer.py',757),
  ('argument_expression_list -> argument_expression_list argument_expression','argument_expression_list',2,'p_argument_expression_list_multiple','Parcer.py',760),
  ('argument_expression -> variadic_unpacking','argument_expression',1,'p_argument_expression','Parcer.py',763),
  ('argument_expression -> expression','argument_expression',1,'p_argument_expression','Parcer.py',764),
  ('variadic_unpacking -> ELLIPSIS expression','variadic_unpacking',2,'p_variadic_unpacking','Parcer.py',767),
  ('member_access_expression -> dereferencable_expression ARROW member_name','member_access_expression',3,'p_member_access_expression','Parcer.py',770),
  ('member_name -> NAME','member_name',1,'p_member_name_name','Parcer.py',773),
  ('member_name -> simple_variable','member_name',1,'p_member_name_simple_variable','Parcer.py',776),
  ('member_name -> LEFT_CBRAC expression RIGHT_PARENTHESIS','member_name',3,'p_member_name_expression','Parcer.py',779),
  ('member_call_expression -> dereferencable_expression ARROW member_name LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS','member_call_expression',6,'p_member_call_expression','Parcer.py',782),
  ('member_call_expression -> dereferencable_expression ARROW member_name LEFT_PARENTHESIS argument_expression_list RIGHT_PARENTHESIS','member_call_expression',6,'p_member_call_expression','Parcer.py',783),
  ('postfix_increment_expression -> variable DOUBLEPLUS','postfix_increment_expression',2,'p_postfix_increment_expression','Parcer.py',786),
  ('postfix_decrement_expression -> variable DOUBLELESS','postfix_decrement_expression',2,'p_postfix_decrement_expression','Parcer.py',789),
  ('prefix_increment_expression -> DOUBLEPLUS variable','prefix_increment_expression',2,'p_prefix_increment_expression','Parcer.py',792),
  ('prefix_decrement_expression -> DOUBLELESS variable','prefix_decrement_expression',2,'p_prefix_decrement_expression','Parcer.py',795),
  ('shell_command_expression -> BACKTICK dq_char_sequence_opt BACKTICK','shell_command_expression',3,'p_shell_command_expression','Parcer.py',798),
  ('dq_char_sequence_opt -> DQ_CHAR_SEQUENCE','dq_char_sequence_opt',1,'p_dq_char_sequence_opt','Parcer.py',801),
  ('dq_char_sequence_opt -> <empty>','dq_char_sequence_opt',0,'p_dq_char_sequence_opt','Parcer.py',802),
  ('scoped_property_access_expression -> scope_resolution_qualifier DOUBLE_COLON simple_variable','scoped_property_access_expression',3,'p_scoped_property_access_expression','Parcer.py',805),
  ('scoped_call_expression -> scope_resolution_qualifier DOUBLE_COLON member_name LEFT_PARENTHESIS argument_expression_list_opt RIGHT_PARENTHESIS','scoped_call_expression',6,'p_scoped_call_expression','Parcer.py',808),
  ('scoped_call_expression -> scope_resolution_qualifier DOUBLE_COLON member_name LEFT_PARENTHESIS argument_expression_list RIGHT_PARENTHESIS','scoped_call_expression',6,'p_scoped_call_expression','Parcer.py',809),
  ('class_constant_access_expression -> scope_resolution_qualifier DOUBLE_COLON NAME','class_constant_access_expression',3,'p_class_constant_access_expression','Parcer.py',812),
  ('scope_resolution_qualifier -> relative_scope','scope_resolution_qualifier',1,'p_scope_resolution_qualifier_relative_scope','Parcer.py',815),
  ('scope_resolution_qualifier -> qualified_name','scope_resolution_qualifier',1,'p_scope_resolution_qualifier_qualified_name','Parcer.py',818),
  ('scope_resolution_qualifier -> dereferencable_expression','scope_resolution_qualifier',1,'p_scope_resolution_qualifier_dereferencable_expression','Parcer.py',821),
  ('relative_scope -> SELF','relative_scope',1,'p_relative_scope_self','Parcer.py',824),
  ('relative_scope -> PARENT','relative_scope',1,'p_relative_scope_parent','Parcer.py',827),
  ('relative_scope -> STATIC','relative_scope',1,'p_relative_scope_static','Parcer.py',830),
  ('clone_expression -> primary_expression','clone_expression',1,'p_clone_expression_primary_expression','Parcer.py',833),
  ('clone_expression -> CLONE primary_expression','clone_expression',2,'p_clone_expression_clone_primary_expression','Parcer.py',836),
  ('exponentiation_expression -> clone_expression','exponentiation_expression',1,'p_exponentiation_expression','Parcer.py',839),
  ('exponentiation_expression -> clone_expression DOUBLEASTERISK exponentiation_expression','exponentiation_expression',3,'p_exponentiation_expression','Parcer.py',840),
  ('unary_expression -> exponentiation_expression','unary_expression',1,'p_unary_expression','Parcer.py',843),
  ('unary_expression -> unary_op_expression','unary_expression',1,'p_unary_expression','Parcer.py',844),
  ('unary_expression -> error_control_expression','unary_expression',1,'p_unary_expression','Parcer.py',845),
  ('unary_expression -> cast_expression','unary_expression',1,'p_unary_expression','Parcer.py',846),
  ('unary_op_expression -> unary_operator unary_expression','unary_op_expression',2,'p_unary_op_expression','Parcer.py',849),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator_plus','Parcer.py',852),
  ('unary_operator -> LESS','unary_operator',1,'p_unary_operator_minus','Parcer.py',855),
  ('unary_operator -> BITWISE_NOT','unary_operator',1,'p_unary_operator_tilde','Parcer.py',858),
  ('error_control_expression -> AT unary_expression','error_control_expression',2,'p_error_control_expression','Parcer.py',861),
  ('cast_expression -> LEFT_PARENTHESIS RIGHT_PARENTHESIS unary_expression','cast_expression',3,'p_cast_expression','Parcer.py',864),
  ('instanceof_expression -> unary_expression','instanceof_expression',1,'p_instanceof_expression','Parcer.py',881),
  ('instanceof_expression -> instanceof_subj INSTANCEOF class_type_designator','instanceof_expression',3,'p_instanceof_expression','Parcer.py',882),
  ('instanceof_subj -> instanceof_expression','instanceof_subj',1,'p_instanceof_subj','Parcer.py',885),
  ('logical_not_expression -> instanceof_expression','logical_not_expression',1,'p_logical_not_expression','Parcer.py',888),
  ('logical_not_expression -> NEGATION instanceof_expression','logical_not_expression',2,'p_logical_not_expression','Parcer.py',889),
  ('multiplicative_expression -> logical_not_expression','multiplicative_expression',1,'p_multiplicative_expression','Parcer.py',892),
  ('multiplicative_expression -> multiplicative_expression ASTERISK logical_not_expression','multiplicative_expression',3,'p_multiplicative_expression','Parcer.py',893),
  ('multiplicative_expression -> multiplicative_expression DIVIDE logical_not_expression','multiplicative_expression',3,'p_multiplicative_expression','Parcer.py',894),
  ('multiplicative_expression -> multiplicative_expression MODULO logical_not_expression','multiplicative_expression',3,'p_multiplicative_expression','Parcer.py',895),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_multiplicative','Parcer.py',902),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression_addition','Parcer.py',905),
  ('additive_expression -> additive_expression LESS multiplicative_expression','additive_expression',3,'p_additive_expression_subtraction','Parcer.py',908),
  ('additive_expression -> additive_expression CONCAT multiplicative_expression','additive_expression',3,'p_additive_expression_concatenation','Parcer.py',911),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_additive','Parcer.py',914),
  ('shift_expression -> shift_expression SL additive_expression','shift_expression',3,'p_shift_expression_left_shift','Parcer.py',917),
  ('shift_expression -> shift_expression SR additive_expression','shift_expression',3,'p_shift_expression_right_shift','Parcer.py',920),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_shift','Parcer.py',923),
  ('relational_expression -> relational_expression LESS_THAN shift_expression','relational_expression',3,'p_relational_expression_less_than','Parcer.py',926),
  ('relational_expression -> relational_expression IS_SMALLER_OR_EQUAL shift_expression','relational_expression',3,'p_relational_expression_greater_than','Parcer.py',929),
  ('relational_expression -> relational_expression IS_GREATER_OR_EQUAL shift_expression','relational_expression',3,'p_relational_expression_less_than_or_equal','Parcer.py',932),
  ('relational_expression -> relational_expression GREATER_THAN_OR_EQUAL shift_expression','relational_expression',3,'p_relational_expression_greater_than_or_equal','Parcer.py',935),
  ('relational_expression -> relational_expression SPACESHIP shift_expression','relational_expression',3,'p_relational_expression_spaceship','Parcer.py',938),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_relational','Parcer.py',944),
  ('equality_expression -> equality_expression EQUAL relational_expression','equality_expression',3,'p_equality_expression_equal','Parcer.py',947),
  ('equality_expression -> equality_expression IS_NOT_EQUAL relational_expression','equality_expression',3,'p_equality_expression_not_equal','Parcer.py',950),
  ('equality_expression -> equality_expression IS_IDENTICAL relational_expression','equality_expression',3,'p_equality_expression_identical','Parcer.py',953),
  ('equality_expression -> equality_expression IS_NOT_IDENTICAL relational_expression','equality_expression',3,'p_equality_expression_not_identical','Parcer.py',956),
  ('bitwise_AND_expression -> equality_expression','bitwise_AND_expression',1,'p_bitwise_AND_expression_equality','Parcer.py',959),
  ('bitwise_AND_expression -> bitwise_AND_expression AMPERSAND equality_expression','bitwise_AND_expression',3,'p_bitwise_AND_expression_AND','Parcer.py',962),
  ('bitwise_exc_OR_expression -> bitwise_AND_expression','bitwise_exc_OR_expression',1,'p_bitwise_exc_OR_expression_AND','Parcer.py',965),
  ('bitwise_exc_OR_expression -> bitwise_exc_OR_expression BITWISE_XOR bitwise_AND_expression','bitwise_exc_OR_expression',3,'p_bitwise_exc_OR_expression_exc_OR','Parcer.py',968),
  ('bitwise_inc_OR_expression -> bitwise_exc_OR_expression','bitwise_inc_OR_expression',1,'p_bitwise_inc_OR_expression_exc_OR','Parcer.py',971),
  ('bitwise_inc_OR_expression -> bitwise_inc_OR_expression BITWISE_OR bitwise_exc_OR_expression','bitwise_inc_OR_expression',3,'p_bitwise_inc_OR_expression_inc_OR','Parcer.py',974),
  ('logical_AND_expression_1 -> bitwise_inc_OR_expression','logical_AND_expression_1',1,'p_logical_AND_expression_1_bitwise_inc_OR','Parcer.py',979),
  ('logical_AND_expression_1 -> logical_AND_expression_1 AMPERSAND AMPERSAND bitwise_inc_OR_expression','logical_AND_expression_1',4,'p_logical_AND_expression_1_AND','Parcer.py',982),
  ('logical_inc_OR_expression_1 -> logical_AND_expression_1','logical_inc_OR_expression_1',1,'p_logical_inc_OR_expression_1_logical_AND','Parcer.py',985),
  ('logical_inc_OR_expression_1 -> logical_inc_OR_expression_1 BITWISE_OR BITWISE_OR logical_AND_expression_1','logical_inc_OR_expression_1',4,'p_logical_inc_OR_expression_1_OR','Parcer.py',988),
  ('coalesce_expression -> logical_inc_OR_expression_1','coalesce_expression',1,'p_coalesce_expression_logical_inc_OR','Parcer.py',991),
  ('coalesce_expression -> logical_inc_OR_expression_1 COALESCE coalesce_expression','coalesce_expression',3,'p_coalesce_expression_coalesce','Parcer.py',994),
  ('conditional_expression -> coalesce_expression','conditional_expression',1,'p_conditional_expression_coalesce','Parcer.py',997),
  ('conditional_expression -> conditional_expression TERNARY_OPERATION expression DOUBLE_POINT coalesce_expression','conditional_expression',5,'p_conditional_expression_ternary','Parcer.py',1000),
  ('conditional_expression -> conditional_expression TERNARY_OPERATION DOUBLE_POINT coalesce_expression','conditional_expression',4,'p_conditional_expression_ternary','Parcer.py',1001),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_conditional','Parcer.py',1006),
  ('assignment_expression -> simple_assignment_expression','assignment_expression',1,'p_assignment_expression_simple','Parcer.py',1009),
  ('assignment_expression -> compound_assignment_expression','assignment_expression',1,'p_assignment_expression_compound','Parcer.py',1012),
  ('simple_assignment_expression -> variable EQUAL assignment_expression','simple_assignment_expression',3,'p_simple_assignment_expression_variable','Parcer.py',1015),
  ('simple_assignment_expression -> list_intrinsic EQUAL assignment_expression','simple_assignment_expression',3,'p_simple_assignment_expression_list_intrinsic','Parcer.py',1018),
  ('list_intrinsic -> LIST LEFT_PARENTHESIS list_expression_list RIGHT_PARENTHESIS','list_intrinsic',4,'p_list_intrinsic','Parcer.py',1021),
  ('list_expression_list -> unkeyed_list_expression_list','list_expression_list',1,'p_list_expression_list_unkeyed','Parcer.py',1024),
  ('list_expression_list -> keyed_list_expression_list COLON','list_expression_list',2,'p_list_expression_list_keyed','Parcer.py',1027),
  ('list_expression_list -> keyed_list_expression_list','list_expression_list',1,'p_list_expression_list_keyed','Parcer.py',1028),
  ('unkeyed_list_expression_list -> list_or_variable','unkeyed_list_expression_list',1,'p_unkeyed_list_expression_list_single','Parcer.py',1031),
  ('unkeyed_list_expression_list -> COLON','unkeyed_list_expression_list',1,'p_unkeyed_list_expression_list_comma','Parcer.py',1034),
  ('unkeyed_list_expression_list -> unkeyed_list_expression_list COLON list_or_variable COLON','unkeyed_list_expression_list',4,'p_unkeyed_list_expression_list_multiple','Parcer.py',1037),
  ('unkeyed_list_expression_list -> unkeyed_list_expression_list COLON list_or_variable','unkeyed_list_expression_list',3,'p_unkeyed_list_expression_list_multiple','Parcer.py',1038),
  ('keyed_list_expression_list -> expression DOUBLE_ARROW list_or_variable','keyed_list_expression_list',3,'p_keyed_list_expression_list_single','Parcer.py',1041),
  ('keyed_list_expression_list -> keyed_list_expression_list COLON expression DOUBLE_ARROW list_or_variable','keyed_list_expression_list',5,'p_keyed_list_expression_list_multiple','Parcer.py',1044),
  ('list_or_variable -> list_intrinsic','list_or_variable',1,'p_list_or_variable_list_intrinsic','Parcer.py',1049),
  ('list_or_variable -> AMPERSAND variable','list_or_variable',2,'p_list_or_variable_variable','Parcer.py',1052),
  ('list_or_variable -> variable','list_or_variable',1,'p_list_or_variable_variable','Parcer.py',1053),
  ('byref_assignment_expression -> variable EQUAL AMPERSAND variable','byref_assignment_expression',4,'p_byref_assignment_expression','Parcer.py',1056),
  ('compound_assignment_expression -> variable compound_assignment_operator assignment_expression','compound_assignment_expression',3,'p_compound_assignment_expression','Parcer.py',1059),
  ('compound_assignment_operator -> POW_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_power','Parcer.py',1064),
  ('compound_assignment_operator -> MUL_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_multiply','Parcer.py',1067),
  ('compound_assignment_operator -> DIV_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_divide','Parcer.py',1070),
  ('compound_assignment_operator -> MOD_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_modulus','Parcer.py',1073),
  ('compound_assignment_operator -> PLUS_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_add','Parcer.py',1076),
  ('compound_assignment_operator -> MINUS_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_subtract','Parcer.py',1079),
  ('compound_assignment_operator -> CONCAT_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_concatenate','Parcer.py',1082),
  ('compound_assignment_operator -> SL_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_left_shift','Parcer.py',1085),
  ('compound_assignment_operator -> SR_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_right_shift','Parcer.py',1088),
  ('compound_assignment_operator -> AND_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_bitwise_AND','Parcer.py',1091),
  ('compound_assignment_operator -> XOR_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_bitwise_exc_OR','Parcer.py',1094),
  ('compound_assignment_operator -> OR_EQUAL','compound_assignment_operator',1,'p_compound_assignment_operator_bitwise_inc_OR','Parcer.py',1097),
  ('yield_from_expression -> YIELD_FROM assignment_expression','yield_from_expression',2,'p_yield_from_expression','Parcer.py',1102),
  ('yield_expression -> yield_from_expression','yield_expression',1,'p_yield_expression_yield_from','Parcer.py',1105),
  ('yield_expression -> YIELD','yield_expression',1,'p_yield_expression_yield','Parcer.py',1108),
  ('yield_expression -> YIELD yield_expression','yield_expression',2,'p_yield_expression_yield_yield','Parcer.py',1111),
  ('yield_expression -> YIELD yield_from_expression DOUBLE_ARROW yield_expression','yield_expression',4,'p_yield_expression_yield_yield_from_yield','Parcer.py',1114),
  ('print_expression -> yield_expression','print_expression',1,'p_print_expression_yield','Parcer.py',1117),
  ('print_expression -> PRINT print_expression','print_expression',2,'p_print_expression_print','Parcer.py',1120),
  ('logical_AND_expression_2 -> print_expression','logical_AND_expression_2',1,'p_logical_AND_expression_2_print','Parcer.py',1123),
  ('logical_AND_expression_2 -> logical_AND_expression_2 AND yield_expression','logical_AND_expression_2',3,'p_logical_AND_expression_2_and_yield','Parcer.py',1126),
  ('logical_exc_OR_expression -> logical_AND_expression_2','logical_exc_OR_expression',1,'p_logical_exc_OR_expression_logical_AND','Parcer.py',1130),
  ('logical_exc_OR_expression -> logical_exc_OR_expression XOR logical_AND_expression_2','logical_exc_OR_expression',3,'p_logical_exc_OR_expression_xor','Parcer.py',1133),
  ('logical_inc_OR_expression_2 -> logical_exc_OR_expression','logical_inc_OR_expression_2',1,'p_logical_inc_OR_expression_2_logical_exc_OR','Parcer.py',1136),
  ('logical_inc_OR_expression_2 -> logical_inc_OR_expression_2 OR logical_exc_OR_expression','logical_inc_OR_expression_2',3,'p_logical_inc_OR_expression_2_or_logical_exc_OR','Parcer.py',1139),
  ('expression -> logical_inc_OR_expression_2','expression',1,'p_expression_logical_inc_OR','Parcer.py',1142),
  ('expression -> include_expression','expression',1,'p_expression_include','Parcer.py',1145),
  ('expression -> include_once_expression','expression',1,'p_expression_include_once_expression','Parcer.py',1148),
  ('expression -> require_expression','expression',1,'p_expression_require_expression','Parcer.py',1151),
  ('expression -> require_once_expression','expression',1,'p_expression_require_once_expression','Parcer.py',1154),
  ('include_expression -> INCLUDE expression','include_expression',2,'p_include_expression','Parcer.py',1157),
  ('include_once_expression -> INCLUDE_ONCE expression','include_once_expression',2,'p_include_once_expression','Parcer.py',1162),
  ('require_expression -> REQUIRE expression','require_expression',2,'p_require_expression','Parcer.py',1165),
  ('require_once_expression -> REQUIRE_ONCE expression','require_once_expression',2,'p_require_once_expression','Parcer.py',1168),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','Parcer.py',1171),
  ('statement -> compound_statement','statement',1,'p_statement_compound','Parcer.py',1176),
  ('statement -> named_label_statement','statement',1,'p_statement_named_label','Parcer.py',1179),
  ('statement -> expression_statement','statement',1,'p_statement_expression','Parcer.py',1182),
  ('statement -> selection_statement','statement',1,'p_statement_selection','Parcer.py',1185),
  ('statement -> iteration_statement','statement',1,'p_statement_iteration','Parcer.py',1188),
  ('statement -> jump_statement','statement',1,'p_statement_jump','Parcer.py',1191),
  ('statement -> try_statement','statement',1,'p_statement_try','Parcer.py',1194),
  ('statement -> declare_statement','statement',1,'p_statement_declare','Parcer.py',1197),
  ('statement -> echo_statement','statement',1,'p_statement_echo','Parcer.py',1200),
  ('statement -> unset_statement','statement',1,'p_statement_unset','Parcer.py',1203),
  ('statement -> const_declaration','statement',1,'p_statement_const_declaration','Parcer.py',1206),
  ('statement -> function_definition','statement',1,'p_statement_function_definition','Parcer.py',1209),
  ('statement -> class_declaration','statement',1,'p_statement_class_declaration','Parcer.py',1212),
  ('statement -> interface_declaration','statement',1,'p_statement_interface_declaration','Parcer.py',1215),
  ('statement -> trait_declaration','statement',1,'p_statement_trait_declaration','Parcer.py',1218),
  ('statement -> namespace_definition','statement',1,'p_statement_namespace_definition','Parcer.py',1221),
  ('statement -> namespace_use_declaration','statement',1,'p_statement_namespace_use_declaration','Parcer.py',1224),
  ('statement -> global_declaration','statement',1,'p_statement_global_declaration','Parcer.py',1227),
  ('statement -> function_static_declaration','statement',1,'p_statement_function_static_declaration','Parcer.py',1230),
  ('compound_statement -> LEFT_CBRAC statement_list RIGHT_CBRAC','compound_statement',3,'p_compound_statement','Parcer.py',1235),
  ('compound_statement -> LEFT_CBRAC RIGHT_CBRAC','compound_statement',2,'p_compound_statement','Parcer.py',1236),
  ('statement_list -> statement','statement_list',1,'p_statement_list','Parcer.py',1239),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_multiple','Parcer.py',1242),
  ('named_label_statement -> name DOUBLE_POINT','named_label_statement',2,'p_named_label_statement','Parcer.py',1245),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','Parcer.py',1248),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','Parcer.py',1249),
  ('selection_statement -> if_statement','selection_statement',1,'p_selection_statement_if','Parcer.py',1252),
  ('selection_statement -> switch_statement','selection_statement',1,'p_selection_statement_switch','Parcer.py',1255),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement elseif_clauses_1 else_clause_1','if_statement',7,'p_if_statement_1','Parcer.py',1260),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement elseif_clauses_1','if_statement',6,'p_if_statement_1','Parcer.py',1261),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement else_clause_1','if_statement',6,'p_if_statement_1','Parcer.py',1262),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','if_statement',5,'p_if_statement_1','Parcer.py',1263),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list elseif_clauses_2 else_clause_2 ENDIF SEMICOLON','if_statement',10,'p_if_statement_2','Parcer.py',1266),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list elseif_clauses_2 ENDIF SEMICOLON','if_statement',9,'p_if_statement_2','Parcer.py',1267),
  ('if_statement -> IF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list else_clause_2 ENDIF SEMICOLON','if_statement',9,'p_if_statement_2','Parcer.py',1268),
  ('elseif_clauses_1 -> elseif_clause_1','elseif_clauses_1',1,'p_elseif_clauses_1_single','Parcer.py',1271),
  ('elseif_clauses_1 -> elseif_clauses_1 elseif_clause_1','elseif_clauses_1',2,'p_elseif_clauses_1_multiple','Parcer.py',1274),
  ('elseif_clause_1 -> ELSEIF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','elseif_clause_1',5,'p_elseif_clause_1','Parcer.py',1277),
  ('else_clause_1 -> ELSE statement','else_clause_1',2,'p_else_clause_1','Parcer.py',1280),
  ('elseif_clauses_2 -> elseif_clause_2','elseif_clauses_2',1,'p_elseif_clauses_2_single','Parcer.py',1285),
  ('elseif_clauses_2 -> elseif_clauses_2 elseif_clause_2','elseif_clauses_2',2,'p_elseif_clauses_2_multiple','Parcer.py',1288),
  ('elseif_clause_2 -> ELSEIF LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list','elseif_clause_2',6,'p_elseif_clause_2','Parcer.py',1291),
  ('else_clause_2 -> ELSE DOUBLE_POINT statement_list','else_clause_2',3,'p_else_clause_2','Parcer.py',1294),
  ('switch_statement -> SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CBRAC case_statements RIGHT_CBRAC','switch_statement',7,'p_switch_statement_1','Parcer.py',1297),
  ('switch_statement -> SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS LEFT_CBRAC RIGHT_CBRAC','switch_statement',6,'p_switch_statement_1','Parcer.py',1298),
  ('switch_statement -> SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT case_statements ENDSWITCH SEMICOLON','switch_statement',8,'p_switch_statement_2','Parcer.py',1301),
  ('switch_statement -> SWITCH LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT ENDSWITCH SEMICOLON','switch_statement',7,'p_switch_statement_2','Parcer.py',1302),
  ('case_statements -> case_statement case_statements','case_statements',2,'p_case_statements_1','Parcer.py',1307),
  ('case_statements -> case_statement','case_statements',1,'p_case_statements_1','Parcer.py',1308),
  ('case_statements -> default_statement case_statements','case_statements',2,'p_case_statements_2','Parcer.py',1311),
  ('case_statements -> default_statement','case_statements',1,'p_case_statements_2','Parcer.py',1312),
  ('case_statement -> CASE expression case_default_label_terminator statement_list','case_statement',4,'p_case_statement','Parcer.py',1315),
  ('case_statement -> CASE expression case_default_label_terminator','case_statement',3,'p_case_statement','Parcer.py',1316),
  ('default_statement -> DEFAULT case_default_label_terminator statement_list','default_statement',3,'p_default_statement','Parcer.py',1319),
  ('default_statement -> DEFAULT case_default_label_terminator','default_statement',2,'p_default_statement','Parcer.py',1320),
  ('case_default_label_terminator -> DOUBLE_POINT','case_default_label_terminator',1,'p_case_default_label_terminator_colon','Parcer.py',1323),
  ('case_default_label_terminator -> SEMICOLON','case_default_label_terminator',1,'p_case_default_label_terminator_semicolon','Parcer.py',1326),
  ('iteration_statement -> while_statement','iteration_statement',1,'p_iteration_statement_while','Parcer.py',1331),
  ('iteration_statement -> do_statement','iteration_statement',1,'p_iteration_statement_do','Parcer.py',1334),
  ('iteration_statement -> for_statement','iteration_statement',1,'p_iteration_statement_for','Parcer.py',1337),
  ('iteration_statement -> foreach_statement','iteration_statement',1,'p_iteration_statement_foreach','Parcer.py',1340),
  ('while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS statement','while_statement',5,'p_while_statement','Parcer.py',1343),
  ('while_statement -> WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDWHILE SEMICOLON','while_statement',8,'p_while_statement_block','Parcer.py',1346),
  ('do_statement -> DO statement WHILE LEFT_PARENTHESIS expression RIGHT_PARENTHESIS SEMICOLON','do_statement',7,'p_do_statement','Parcer.py',1349),
  ('for_statement -> FOR LEFT_PARENTHESIS for_initializer SEMICOLON for_control SEMICOLON for_end_of_loop RIGHT_PARENTHESIS statement','for_statement',9,'p_for_statement','Parcer.py',1354),
  ('for_statement -> FOR LEFT_PARENTHESIS for_initializer SEMICOLON for_control SEMICOLON RIGHT_PARENTHESIS statement','for_statement',8,'p_for_statement','Parcer.py',1355),
  ('for_statement -> FOR LEFT_PARENTHESIS for_initializer SEMICOLON SEMICOLON for_end_of_loop RIGHT_PARENTHESIS statement','for_statement',8,'p_for_statement','Parcer.py',1356),
  ('for_statement -> FOR LEFT_PARENTHESIS for_initializer SEMICOLON SEMICOLON RIGHT_PARENTHESIS statement','for_statement',7,'p_for_statement','Parcer.py',1357),
  ('for_statement -> FOR LEFT_PARENTHESIS SEMICOLON for_control SEMICOLON for_end_of_loop RIGHT_PARENTHESIS statement','for_statement',8,'p_for_statement','Parcer.py',1358),
  ('for_statement -> FOR LEFT_PARENTHESIS SEMICOLON for_control SEMICOLON RIGHT_PARENTHESIS statement','for_statement',7,'p_for_statement','Parcer.py',1359),
  ('for_statement -> FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON for_end_of_loop RIGHT_PARENTHESIS statement','for_statement',7,'p_for_statement','Parcer.py',1360),
  ('for_statement -> FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS statement','for_statement',6,'p_for_statement','Parcer.py',1361),
  ('for_statement -> FOR LEFT_PARENTHESIS for_initializer SEMICOLON for_control SEMICOLON for_end_of_loop RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON','for_statement',12,'p_for_statement_block','Parcer.py',1364),
  ('for_statement -> FOR LEFT_PARENTHESIS for_initializer SEMICOLON for_control SEMICOLON RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON','for_statement',11,'p_for_statement_block','Parcer.py',1365),
  ('for_statement -> FOR LEFT_PARENTHESIS for_initializer SEMICOLON SEMICOLON for_end_of_loop RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON','for_statement',11,'p_for_statement_block','Parcer.py',1366),
  ('for_statement -> FOR LEFT_PARENTHESIS for_initializer SEMICOLON SEMICOLON RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON','for_statement',10,'p_for_statement_block','Parcer.py',1367),
  ('for_statement -> FOR LEFT_PARENTHESIS SEMICOLON for_control SEMICOLON for_end_of_loop RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON','for_statement',11,'p_for_statement_block','Parcer.py',1368),
  ('for_statement -> FOR LEFT_PARENTHESIS SEMICOLON for_control SEMICOLON RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON','for_statement',10,'p_for_statement_block','Parcer.py',1369),
  ('for_statement -> FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON for_end_of_loop RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON','for_statement',10,'p_for_statement_block','Parcer.py',1370),
  ('for_statement -> FOR LEFT_PARENTHESIS SEMICOLON SEMICOLON RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOR SEMICOLON','for_statement',9,'p_for_statement_block','Parcer.py',1371),
  ('for_initializer -> for_expression_group','for_initializer',1,'p_for_initializer','Parcer.py',1374),
  ('for_control -> for_expression_group','for_control',1,'p_for_control','Parcer.py',1377),
  ('for_end_of_loop -> for_expression_group','for_end_of_loop',1,'p_for_end_of_loop','Parcer.py',1380),
  ('for_expression_group -> expression','for_expression_group',1,'p_for_expression_group_single','Parcer.py',1383),
  ('for_expression_group -> for_expression_group COLON expression','for_expression_group',3,'p_for_expression_group_multiple','Parcer.py',1386),
  ('foreach_statement -> FOREACH LEFT_PARENTHESIS foreach_collection_name AS foreach_key foreach_value RIGHT_PARENTHESIS statement','foreach_statement',8,'p_foreach_statement','Parcer.py',1391),
  ('foreach_statement -> FOREACH LEFT_PARENTHESIS foreach_collection_name AS foreach_value RIGHT_PARENTHESIS statement','foreach_statement',7,'p_foreach_statement','Parcer.py',1392),
  ('foreach_statement -> FOREACH LEFT_PARENTHESIS foreach_collection_name AS foreach_key foreach_value RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOREACH SEMICOLON','foreach_statement',11,'p_foreach_statement_block','Parcer.py',1395),
  ('foreach_statement -> FOREACH LEFT_PARENTHESIS foreach_collection_name AS foreach_value RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDFOREACH SEMICOLON','foreach_statement',10,'p_foreach_statement_block','Parcer.py',1396),
  ('foreach_collection_name -> expression','foreach_collection_name',1,'p_foreach_collection_name','Parcer.py',1399),
  ('foreach_key -> expression DOUBLE_ARROW','foreach_key',2,'p_foreach_key','Parcer.py',1402),
  ('foreach_value -> AMPERSAND_opt expression','foreach_value',2,'p_foreach_value','Parcer.py',1405),
  ('foreach_value -> AMPERSAND expression','foreach_value',2,'p_foreach_value_amp_expression','Parcer.py',1408),
  ('foreach_value -> list_intrinsic','foreach_value',1,'p_foreach_value_list_intrinsic','Parcer.py',1411),
  ('jump_statement -> goto_statement','jump_statement',1,'p_jump_statement_goto','Parcer.py',1416),
  ('jump_statement -> continue_statement','jump_statement',1,'p_jump_statement_continue','Parcer.py',1419),
  ('jump_statement -> break_statement','jump_statement',1,'p_jump_statement_break','Parcer.py',1422),
  ('jump_statement -> return_statement','jump_statement',1,'p_jump_statement_return','Parcer.py',1425),
  ('jump_statement -> throw_statement','jump_statement',1,'p_jump_statement_throw','Parcer.py',1428),
  ('goto_statement -> GOTO name SEMICOLON','goto_statement',3,'p_goto_statement','Parcer.py',1431),
  ('continue_statement -> CONTINUE breakout_level SEMICOLON','continue_statement',3,'p_continue_statement','Parcer.py',1434),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','Parcer.py',1435),
  ('breakout_level -> INTEGER_LITERAL','breakout_level',1,'p_breakout_level','Parcer.py',1438),
  ('breakout_level -> LEFT_PARENTHESIS breakout_level RIGHT_PARENTHESIS','breakout_level',3,'p_breakout_level_expression','Parcer.py',1441),
  ('break_statement -> BREAK breakout_levelopt SEMICOLON','break_statement',3,'p_break_statement','Parcer.py',1447),
  ('breakout_levelopt -> breakout_level','breakout_levelopt',1,'p_breakout_levelopt','Parcer.py',1450),
  ('breakout_levelopt -> <empty>','breakout_levelopt',0,'p_breakout_levelopt','Parcer.py',1451),
  ('breakout_level -> expression','breakout_level',1,'p_breakout_level_1','Parcer.py',1454),
  ('return_statement -> RETURN expressionopt SEMICOLON','return_statement',3,'p_return_statement','Parcer.py',1457),
  ('expressionopt -> expression','expressionopt',1,'p_expressionopt','Parcer.py',1460),
  ('expressionopt -> <empty>','expressionopt',0,'p_expressionopt','Parcer.py',1461),
  ('throw_statement -> THROW expression SEMICOLON','throw_statement',3,'p_throw_statement','Parcer.py',1464),
  ('try_statement -> TRY compound_statement catch_clauses','try_statement',3,'p_try_statement','Parcer.py',1467),
  ('try_statement -> TRY compound_statement finally_clause','try_statement',3,'p_try_statement','Parcer.py',1468),
  ('try_statement -> TRY compound_statement catch_clauses finally_clause','try_statement',4,'p_try_statement','Parcer.py',1469),
  ('catch_clauses -> catch_clause','catch_clauses',1,'p_catch_clauses','Parcer.py',1472),
  ('catch_clauses -> catch_clauses catch_clause','catch_clauses',2,'p_catch_clauses','Parcer.py',1473),
  ('catch_clause -> CATCH LEFT_PARENTHESIS catch_name_list VARIABLE RIGHT_PARENTHESIS compound_statement','catch_clause',6,'p_catch_clause','Parcer.py',1476),
  ('catch_name_list -> qualified_name','catch_name_list',1,'p_catch_name_list','Parcer.py',1480),
  ('catch_name_list -> catch_name_list','catch_name_list',1,'p_catch_name_list','Parcer.py',1481),
  ('finally_clause -> FINALLY compound_statement','finally_clause',2,'p_finally_clause','Parcer.py',1484),
  ('declare_statement -> DECLARE LEFT_PARENTHESIS declare_directive RIGHT_PARENTHESIS statement','declare_statement',5,'p_declare_statement','Parcer.py',1487),
  ('declare_statement -> DECLARE LEFT_PARENTHESIS declare_directive RIGHT_PARENTHESIS DOUBLE_POINT statement_list ENDDECLARE SEMICOLON','declare_statement',8,'p_declare_statement','Parcer.py',1488),
  ('declare_statement -> DECLARE LEFT_PARENTHESIS declare_directive RIGHT_PARENTHESIS SEMICOLON','declare_statement',5,'p_declare_statement','Parcer.py',1489),
  ('declare_directive -> TICKS EQUALS literal','declare_directive',3,'p_declare_directive','Parcer.py',1492),
  ('declare_directive -> ENCODING EQUALS literal','declare_directive',3,'p_declare_directive','Parcer.py',1493),
  ('declare_directive -> STRICT_TYPES EQUALS literal','declare_directive',3,'p_declare_directive','Parcer.py',1494),
  ('echo_statement -> ECHO expression_list SEMICOLON','echo_statement',3,'p_echo_statement','Parcer.py',1497),
  ('expression_list -> expression','expression_list',1,'p_expression_list','Parcer.py',1500),
  ('expression_list -> expression_list expression','expression_list',2,'p_expression_list','Parcer.py',1501),
  ('unset_statement -> UNSET LEFT_PARENTHESIS variable_list COLON RIGHT_PARENTHESIS SEMICOLON','unset_statement',6,'p_unset_statement','Parcer.py',1504),
  ('unset_statement -> UNSET LEFT_PARENTHESIS variable_list RIGHT_PARENTHESIS SEMICOLON','unset_statement',5,'p_unset_statement','Parcer.py',1505),
  ('function_definition -> function_definition_header compound_statement','function_definition',2,'p_function_definition','Parcer.py',1508),
  ('function_definition_header -> FUNCTION ampersandopt name LEFT_PARENTHESIS parameter_declaration_listopt RIGHT_PARENTHESIS return_type_opt','function_definition_header',7,'p_function_definition_header','Parcer.py',1511),
  ('ampersandopt -> AMPERSAND','ampersandopt',1,'p_ampersandopt','Parcer.py',1514),
  ('ampersandopt -> <empty>','ampersandopt',0,'p_ampersandopt','Parcer.py',1515),
  ('parameter_declaration_list -> simple_parameter_declaration_list','parameter_declaration_list',1,'p_parameter_declaration_list','Parcer.py',1518),
  ('parameter_declaration_list -> variadic_declaration_list','parameter_declaration_list',1,'p_parameter_declaration_list','Parcer.py',1519),
  ('simple_parameter_declaration_list -> parameter_declaration','simple_parameter_declaration_list',1,'p_simple_parameter_declaration_list','Parcer.py',1522),
  ('simple_parameter_declaration_list -> parameter_declaration_list parameter_declaration','simple_parameter_declaration_list',2,'p_simple_parameter_declaration_list','Parcer.py',1523),
  ('variadic_declaration_list -> simple_parameter_declaration_list variadic_parameter','variadic_declaration_list',2,'p_variadic_declaration_list','Parcer.py',1526),
  ('variadic_declaration_list -> variadic_parameter','variadic_declaration_list',1,'p_variadic_declaration_list','Parcer.py',1527),
  ('parameter_declaration -> type_declarationopt ampersandopt VARIABLE default_argument_specifieropt','parameter_declaration',4,'p_parameter_declaration','Parcer.py',1530),
  ('variadic_parameter -> type_declarationopt ampersandopt ELLIPSIS VARIABLE','variadic_parameter',4,'p_variadic_parameter','Parcer.py',1533),
  ('return_type -> DOUBLE_POINT type_declaration','return_type',2,'p_return_type','Parcer.py',1536),
  ('return_type -> DOUBLE_POINT VOID','return_type',2,'p_return_type','Parcer.py',1537),
  ('type_declarationopt -> type_declaration','type_declarationopt',1,'p_type_declarationopt','Parcer.py',1540),
  ('type_declarationopt -> <empty>','type_declarationopt',0,'p_type_declarationopt','Parcer.py',1541),
  ('type_declaration -> TERNARY_OPERATIONopt base_type_declaration','type_declaration',2,'p_type_declaration','Parcer.py',1544),
  ('TERNARY_OPERATIONopt -> TERNARY_OPERATION','TERNARY_OPERATIONopt',1,'p_TERNARY_OPERATIONopt','Parcer.py',1547),
  ('TERNARY_OPERATIONopt -> <empty>','TERNARY_OPERATIONopt',0,'p_TERNARY_OPERATIONopt','Parcer.py',1548),
  ('base_type_declaration -> ARRAY','base_type_declaration',1,'p_base_type_declaration','Parcer.py',1551),
  ('base_type_declaration -> CALLABLE','base_type_declaration',1,'p_base_type_declaration','Parcer.py',1552),
  ('base_type_declaration -> ITERABLE','base_type_declaration',1,'p_base_type_declaration','Parcer.py',1553),
  ('base_type_declaration -> scalar_type','base_type_declaration',1,'p_base_type_declaration','Parcer.py',1554),
  ('base_type_declaration -> qualified_name','base_type_declaration',1,'p_base_type_declaration','Parcer.py',1555),
  ('scalar_type -> BOOL','scalar_type',1,'p_scalar_type','Parcer.py',1558),
  ('scalar_type -> FLOAT','scalar_type',1,'p_scalar_type','Parcer.py',1559),
  ('scalar_type -> INT','scalar_type',1,'p_scalar_type','Parcer.py',1560),
  ('scalar_type -> STRING','scalar_type',1,'p_scalar_type','Parcer.py',1561),
  ('default_argument_specifieropt -> default_argument_specifier','default_argument_specifieropt',1,'p_default_argument_specifieropt','Parcer.py',1564),
  ('default_argument_specifieropt -> <empty>','default_argument_specifieropt',0,'p_default_argument_specifieropt','Parcer.py',1565),
  ('default_argument_specifier -> EQUAL constant_expression','default_argument_specifier',2,'p_default_argument_specifier','Parcer.py',1568),
  ('class_declaration -> class_modifieropt CLASS name class_base_clauseopt class_interface_clauseopt LEFT_CBRAC class_member_declarationsopt RIGHT_CBRAC','class_declaration',8,'p_class_declaration','Parcer.py',1571),
  ('class_modifieropt -> class_modifier','class_modifieropt',1,'p_class_modifieropt','Parcer.py',1574),
  ('class_modifieropt -> <empty>','class_modifieropt',0,'p_class_modifieropt','Parcer.py',1575),
  ('class_base_clauseopt -> class_base_clause','class_base_clauseopt',1,'p_class_base_clauseopt','Parcer.py',1578),
  ('class_base_clauseopt -> <empty>','class_base_clauseopt',0,'p_class_base_clauseopt','Parcer.py',1579),
  ('class_interface_clauseopt -> class_interface_clause','class_interface_clauseopt',1,'p_class_interface_clauseopt','Parcer.py',1582),
  ('class_interface_clauseopt -> <empty>','class_interface_clauseopt',0,'p_class_interface_clauseopt','Parcer.py',1583),
  ('class_member_declarationsopt -> class_member_declarations','class_member_declarationsopt',1,'p_class_member_declarationsopt','Parcer.py',1586),
  ('class_member_declarationsopt -> <empty>','class_member_declarationsopt',0,'p_class_member_declarationsopt','Parcer.py',1587),
  ('class_modifier -> ABSTRACT','class_modifier',1,'p_class_modifier','Parcer.py',1591),
  ('class_modifier -> FINAL','class_modifier',1,'p_class_modifier','Parcer.py',1592),
  ('class_base_clause -> EXTENDS qualified_name','class_base_clause',2,'p_class_base_clause','Parcer.py',1595),
  ('class_interface_clause -> IMPLEMENTS qualified_name','class_interface_clause',2,'p_class_interface_clause','Parcer.py',1598),
  ('class_interface_clause -> class_interface_clause qualified_name','class_interface_clause',2,'p_class_interface_clause','Parcer.py',1599),
  ('class_member_declarations -> class_member_declaration','class_member_declarations',1,'p_class_member_declarations','Parcer.py',1602),
  ('class_member_declarations -> class_member_declarations class_member_declaration','class_member_declarations',2,'p_class_member_declarations','Parcer.py',1603),
  ('class_member_declaration -> class_const_declaration','class_member_declaration',1,'p_class_member_declaration','Parcer.py',1606),
  ('class_member_declaration -> property_declaration','class_member_declaration',1,'p_class_member_declaration','Parcer.py',1607),
  ('class_member_declaration -> method_declaration','class_member_declaration',1,'p_class_member_declaration','Parcer.py',1608),
  ('class_member_declaration -> constructor_declaration','class_member_declaration',1,'p_class_member_declaration','Parcer.py',1609),
  ('class_member_declaration -> destructor_declaration','class_member_declaration',1,'p_class_member_declaration','Parcer.py',1610),
  ('class_member_declaration -> trait_use_clause','class_member_declaration',1,'p_class_member_declaration','Parcer.py',1611),
  ('const_declaration -> CONST const_elements SEMICOLON','const_declaration',3,'p_const_declaration','Parcer.py',1614),
  ('class_const_declaration -> visibility_modifier_opt CONST const_elements SEMICOLON','class_const_declaration',4,'p_class_const_declaration','Parcer.py',1617),
  ('const_elements -> const_element','const_elements',1,'p_const_elements','Parcer.py',1624),
  ('const_elements -> const_elements const_element','const_elements',2,'p_const_elements','Parcer.py',1625),
  ('const_element -> name EQUAL constant_expression','const_element',3,'p_const_element','Parcer.py',1628),
  ('property_declaration -> property_modifier property_elements SEMICOLON','property_declaration',3,'p_property_declaration','Parcer.py',1631),
  ('property_modifier -> VAR','property_modifier',1,'p_property_modifier','Parcer.py',1634),
  ('property_modifier -> visibility_modifier static_modifieropt','property_modifier',2,'p_property_modifier','Parcer.py',1635),
  ('property_modifier -> static_modifier visibility_modifier_opt','property_modifier',2,'p_property_modifier','Parcer.py',1636),
  ('static_modifieropt -> static_modifier','static_modifieropt',1,'p_static_modifieropt','Parcer.py',1639),
  ('static_modifieropt -> <empty>','static_modifieropt',0,'p_static_modifieropt','Parcer.py',1640),
  ('visibility_modifier -> PUBLIC','visibility_modifier',1,'p_visibility_modifier','Parcer.py',1647),
  ('visibility_modifier -> PROTECTED','visibility_modifier',1,'p_visibility_modifier','Parcer.py',1648),
  ('visibility_modifier -> PRIVATE','visibility_modifier',1,'p_visibility_modifier','Parcer.py',1649),
  ('static_modifier -> STATIC','static_modifier',1,'p_static_modifier','Parcer.py',1652),
  ('property_elements -> property_element','property_elements',1,'p_property_elements','Parcer.py',1655),
  ('property_elements -> property_elements property_element','property_elements',2,'p_property_elements','Parcer.py',1656),
  ('property_element -> VARIABLE property_initializeropt SEMICOLON','property_element',3,'p_property_element','Parcer.py',1659),
  ('property_initializeropt -> property_initializer','property_initializeropt',1,'p_property_initializeropt','Parcer.py',1662),
  ('property_initializeropt -> <empty>','property_initializeropt',0,'p_property_initializeropt','Parcer.py',1663),
  ('property_initializer -> EQUAL constant_expression','property_initializer',2,'p_property_initializer','Parcer.py',1666),
  ('method_declaration -> method_modifiersopt function_definition','method_declaration',2,'p_method_declaration','Parcer.py',1669),
  ('method_declaration -> method_modifiers function_definition_header SEMICOLON','method_declaration',3,'p_method_declaration','Parcer.py',1670),
  ('method_modifiersopt -> method_modifiers','method_modifiersopt',1,'p_method_modifiersopt','Parcer.py',1673),
  ('method_modifiersopt -> <empty>','method_modifiersopt',0,'p_method_modifiersopt','Parcer.py',1674),
  ('method_modifiers -> method_modifier','method_modifiers',1,'p_method_modifiers','Parcer.py',1677),
  ('method_modifiers -> method_modifiers method_modifier','method_modifiers',2,'p_method_modifiers','Parcer.py',1678),
  ('method_modifier -> visibility_modifier','method_modifier',1,'p_method_modifier','Parcer.py',1681),
  ('method_modifier -> static_modifier','method_modifier',1,'p_method_modifier','Parcer.py',1682),
  ('method_modifier -> class_modifier','method_modifier',1,'p_method_modifier','Parcer.py',1683),
  ('constructor_declaration -> method_modifiers FUNCTION name AMPERSAND_opt CONSTRUCT LEFT_PARENTHESIS parameter_declaration_listopt RIGHT_PARENTHESIS compound_statement','constructor_declaration',9,'p_constructor_declaration','Parcer.py',1686),
  ('destructor_declaration -> method_modifiers FUNCTION name AMPERSAND_opt DESTRUCT LEFT_PARENTHESIS RIGHT_PARENTHESIS compound_statement','destructor_declaration',8,'p_destructor_declaration','Parcer.py',1689),
  ('parameter_declaration_listopt -> parameter_declaration_list','parameter_declaration_listopt',1,'p_parameter_declaration_listopt','Parcer.py',1692),
  ('parameter_declaration_listopt -> <empty>','parameter_declaration_listopt',0,'p_parameter_declaration_listopt','Parcer.py',1693),
  ('interface_declaration -> INTERFACE name interface_base_clauseopt LEFT_CBRAC interface_member_declarationsopt RIGHT_CBRAC','interface_declaration',6,'p_interface_declaration','Parcer.py',1696),
  ('interface_base_clauseopt -> interface_base_clause','interface_base_clauseopt',1,'p_interface_base_clauseopt','Parcer.py',1699),
  ('interface_base_clauseopt -> <empty>','interface_base_clauseopt',0,'p_interface_base_clauseopt','Parcer.py',1700),
  ('interface_member_declarationsopt -> interface_member_declarations','interface_member_declarationsopt',1,'p_interface_member_declarationsopt','Parcer.py',1703),
  ('interface_member_declarationsopt -> <empty>','interface_member_declarationsopt',0,'p_interface_member_declarationsopt','Parcer.py',1704),
  ('interface_base_clause -> EXTENDS qualified_name','interface_base_clause',2,'p_interface_base_clause','Parcer.py',1707),
  ('interface_base_clause -> interface_base_clause qualified_name','interface_base_clause',2,'p_interface_base_clause','Parcer.py',1708),
  ('interface_member_declarations -> interface_member_declaration','interface_member_declarations',1,'p_interface_member_declarations','Parcer.py',1711),
  ('interface_member_declarations -> interface_member_declarations interface_member_declaration','interface_member_declarations',2,'p_interface_member_declarations','Parcer.py',1712),
  ('interface_member_declaration -> class_const_declaration','interface_member_declaration',1,'p_interface_member_declaration','Parcer.py',1715),
  ('interface_member_declaration -> method_declaration','interface_member_declaration',1,'p_interface_member_declaration','Parcer.py',1716),
  ('trait_declaration -> TRAIT name LEFT_CBRAC trait_member_declarationsopt RIGHT_CBRAC','trait_declaration',5,'p_trait_declaration','Parcer.py',1719),
  ('trait_member_declarationsopt -> trait_member_declarations','trait_member_declarationsopt',1,'p_trait_member_declarationsopt','Parcer.py',1722),
  ('trait_member_declarationsopt -> <empty>','trait_member_declarationsopt',0,'p_trait_member_declarationsopt','Parcer.py',1723),
  ('trait_member_declarations -> trait_member_declaration','trait_member_declarations',1,'p_trait_member_declarations','Parcer.py',1726),
  ('trait_member_declarations -> trait_member_declarations trait_member_declaration','trait_member_declarations',2,'p_trait_member_declarations','Parcer.py',1727),
  ('trait_member_declaration -> property_declaration','trait_member_declaration',1,'p_trait_member_declaration','Parcer.py',1730),
  ('trait_member_declaration -> method_declaration','trait_member_declaration',1,'p_trait_member_declaration','Parcer.py',1731),
  ('trait_member_declaration -> constructor_declaration','trait_member_declaration',1,'p_trait_member_declaration','Parcer.py',1732),
  ('trait_member_declaration -> destructor_declaration','trait_member_declaration',1,'p_trait_member_declaration','Parcer.py',1733),
  ('trait_member_declaration -> trait_use_clauses','trait_member_declaration',1,'p_trait_member_declaration','Parcer.py',1734),
  ('trait_use_clauses -> trait_use_clause','trait_use_clauses',1,'p_trait_use_clauses','Parcer.py',1737),
  ('trait_use_clauses -> trait_use_clauses trait_use_clause','trait_use_clauses',2,'p_trait_use_clauses','Parcer.py',1738),
  ('trait_use_clause -> USE trait_name_list trait_use_specification','trait_use_clause',3,'p_trait_use_clause','Parcer.py',1741),
  ('trait_name_list -> qualified_name','trait_name_list',1,'p_trait_name_list','Parcer.py',1744),
  ('trait_name_list -> trait_name_list qualified_name','trait_name_list',2,'p_trait_name_list','Parcer.py',1745),
  ('trait_use_specification -> SEMICOLON','trait_use_specification',1,'p_trait_use_specification','Parcer.py',1748),
  ('trait_use_specification -> LEFT_CBRAC trait_select_and_alias_clausesopt RIGHT_CBRAC','trait_use_specification',3,'p_trait_use_specification','Parcer.py',1749),
  ('trait_select_and_alias_clausesopt -> trait_select_and_alias_clauses','trait_select_and_alias_clausesopt',1,'p_trait_select_and_alias_clausesopt','Parcer.py',1752),
  ('trait_select_and_alias_clausesopt -> <empty>','trait_select_and_alias_clausesopt',0,'p_trait_select_and_alias_clausesopt','Parcer.py',1753),
  ('trait_select_and_alias_clauses -> trait_select_and_alias_clause','trait_select_and_alias_clauses',1,'p_trait_select_and_alias_clauses','Parcer.py',1756),
  ('trait_select_and_alias_clauses -> trait_select_and_alias_clauses trait_select_and_alias_clause','trait_select_and_alias_clauses',2,'p_trait_select_and_alias_clauses','Parcer.py',1757),
  ('trait_select_and_alias_clause -> trait_select_insteadof_clause SEMICOLON','trait_select_and_alias_clause',2,'p_trait_select_and_alias_clause','Parcer.py',1760),
  ('trait_select_and_alias_clause -> trait_alias_as_clause SEMICOLON','trait_select_and_alias_clause',2,'p_trait_select_and_alias_clause','Parcer.py',1761),
  ('trait_select_insteadof_clause -> qualified_name DOUBLE_COLON name INSTEADOF trait_name_list','trait_select_insteadof_clause',5,'p_trait_select_insteadof_clause','Parcer.py',1764),
  ('trait_alias_as_clause -> name AS visibility_modifier_opt name','trait_alias_as_clause',4,'p_trait_alias_as_clause','Parcer.py',1767),
  ('trait_alias_as_clause -> name AS visibility_modifier nameopt','trait_alias_as_clause',4,'p_trait_alias_as_clause','Parcer.py',1768),
  ('visibility_modifier_opt -> visibility_modifier','visibility_modifier_opt',1,'p_visibility_modifieropt','Parcer.py',1771),
  ('visibility_modifier_opt -> <empty>','visibility_modifier_opt',0,'p_visibility_modifieropt','Parcer.py',1772),
  ('nameopt -> name','nameopt',1,'p_nameopt','Parcer.py',1775),
  ('nameopt -> <empty>','nameopt',0,'p_nameopt','Parcer.py',1776),
  ('namespace_definition -> NAMESPACE namespace_name SEMICOLON','namespace_definition',3,'p_namespace_definition','Parcer.py',1779),
  ('namespace_definition -> NAMESPACE namespace_nameopt compound_statement','namespace_definition',3,'p_namespace_definition','Parcer.py',1780),
  ('namespace_nameopt -> namespace_name','namespace_nameopt',1,'p_namespace_nameopt','Parcer.py',1783),
  ('namespace_nameopt -> <empty>','namespace_nameopt',0,'p_namespace_nameopt','Parcer.py',1784),
  ('namespace_use_declaration -> USE namespace_function_or_constopt namespace_use_clauses SEMICOLON','namespace_use_declaration',4,'p_namespace_use_declaration','Parcer.py',1786),
  ('namespace_use_declaration -> USE namespace_function_or_const NS_SEPARATORopt namespace_name NS_SEPARATOR LEFT_CBRAC namespace_use_group_clauses_1 RIGHT_CBRAC SEMICOLON','namespace_use_declaration',9,'p_namespace_use_declaration','Parcer.py',1787),
  ('namespace_use_declaration -> USE NS_SEPARATORopt namespace_name NS_SEPARATOR LEFT_CBRAC namespace_use_group_clauses_2 RIGHT_CBRAC SEMICOLON','namespace_use_declaration',8,'p_namespace_use_declaration','Parcer.py',1788),
  ('namespace_function_or_constopt -> namespace_function_or_const','namespace_function_or_constopt',1,'p_namespace_function_or_constopt','Parcer.py',1791),
  ('namespace_function_or_constopt -> <empty>','namespace_function_or_constopt',0,'p_namespace_function_or_constopt','Parcer.py',1792),
  ('NS_SEPARATORopt -> NS_SEPARATOR','NS_SEPARATORopt',1,'p_NS_SEPARATORopt','Parcer.py',1795),
  ('NS_SEPARATORopt -> <empty>','NS_SEPARATORopt',0,'p_NS_SEPARATORopt','Parcer.py',1796),
  ('namespace_use_clauses -> namespace_use_clause','namespace_use_clauses',1,'p_namespace_use_clauses','Parcer.py',1799),
  ('namespace_use_clauses -> namespace_use_clauses namespace_use_clause','namespace_use_clauses',2,'p_namespace_use_clauses','Parcer.py',1800),
  ('namespace_use_clause -> qualified_name namespace_aliasing_clause_opt','namespace_use_clause',2,'p_namespace_use_clause','Parcer.py',1803),
  ('namespace_aliasing_clause_opt -> namespace_aliasing_clause','namespace_aliasing_clause_opt',1,'p_namespace_aliasing_clause_opt','Parcer.py',1806),
  ('qualified_name -> name','qualified_name',1,'p_qualified_name','Parcer.py',1809),
  ('namespace_aliasing_clause -> AS name','namespace_aliasing_clause',2,'p_namespace_aliasing_clause','Parcer.py',1812),
  ('namespace_function_or_const -> FUNCTION','namespace_function_or_const',1,'p_namespace_function_or_const','Parcer.py',1815),
  ('namespace_function_or_const -> CONST','namespace_function_or_const',1,'p_namespace_function_or_const','Parcer.py',1816),
  ('namespace_use_group_clauses_1 -> namespace_use_group_clause_1','namespace_use_group_clauses_1',1,'p_namespace_use_group_clauses_1','Parcer.py',1819),
  ('namespace_use_group_clauses_1 -> namespace_use_group_clauses_1 namespace_use_group_clause_1','namespace_use_group_clauses_1',2,'p_namespace_use_group_clauses_1','Parcer.py',1820),
  ('namespace_use_group_clause_1 -> namespace_name namespace_aliasing_clause_opt','namespace_use_group_clause_1',2,'p_namespace_use_group_clause_1','Parcer.py',1823),
  ('namespace_use_group_clauses_2 -> namespace_use_group_clause_2','namespace_use_group_clauses_2',1,'p_namespace_use_group_clauses_2','Parcer.py',1827),
  ('namespace_use_group_clauses_2 -> namespace_use_group_clauses_2 namespace_use_group_clause_2','namespace_use_group_clauses_2',2,'p_namespace_use_group_clauses_2','Parcer.py',1828),
  ('namespace_use_group_clause_2 -> namespace_function_or_constopt namespace_name namespace_aliasing_clause_opt','namespace_use_group_clause_2',3,'p_namespace_use_group_clause_2','Parcer.py',1831),
  ('name -> STRING','name',1,'p_name','Parcer.py',1834),
]
